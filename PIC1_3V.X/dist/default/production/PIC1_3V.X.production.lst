

Microchip Technology PIC18 LITE Macro Assembler V1.42 build -159332390 
                                                                                               Wed Dec 13 11:08:44 2017

Microchip Technology Omniscient Code Generator v1.42 (Free mode) build 201704130522
     1                           	processor	18LF25K80
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,delta=1
    10                           	psect	text2,global,reloc=2,class=CODE,delta=1
    11                           	psect	text3,global,reloc=2,class=CODE,delta=1
    12                           	psect	text4,global,reloc=2,class=CODE,delta=1
    13                           	psect	text5,global,reloc=2,class=CODE,delta=1
    14                           	psect	text6,global,reloc=2,class=CODE,delta=1
    15                           	psect	text7,global,reloc=2,class=CODE,delta=1
    16                           	psect	text8,global,reloc=2,class=CODE,delta=1
    17                           	psect	text9,global,reloc=2,class=CODE,delta=1
    18                           	psect	text10,global,reloc=2,class=CODE,delta=1
    19                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text12,global,reloc=2,class=CODE,delta=1
    21                           	psect	text13,global,reloc=2,class=CODE,delta=1
    22                           	psect	text14,global,reloc=2,class=CODE,delta=1
    23                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    24                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    25  0000                     
    26                           ; Version 1.42
    27                           ; Generated 13/04/2017 GMT
    28                           ; 
    29                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    30                           ; All rights reserved.
    31                           ; 
    32                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    33                           ; 
    34                           ; Redistribution and use in source and binary forms, with or without modification, are
    35                           ; permitted provided that the following conditions are met:
    36                           ; 
    37                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    38                           ;        conditions and the following disclaimer.
    39                           ; 
    40                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    41                           ;        of conditions and the following disclaimer in the documentation and/or other
    42                           ;        materials provided with the distribution.
    43                           ; 
    44                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    45                           ;        software without specific prior written permission.
    46                           ; 
    47                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    48                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    49                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    50                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    51                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    52                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    53                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    54                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    55                           ; 
    56                           ; 
    57                           ; Code-generator required, PIC18LF25K80 Definitions
    58                           ; 
    59                           ; SFR Addresses
    60  0000                     _WPUB	set	3931
    61  0000                     _ANCON1	set	3932
    62  0000                     _ANCON0	set	3933
    63  0000                     _INTCON2bits	set	4081
    64  0000                     _INTCON3bits	set	4080
    65  0000                     _TRISC	set	3988
    66  0000                     _TRISB	set	3987
    67  0000                     _TRISA	set	3986
    68  0000                     _RCON	set	4048
    69  0000                     _PIR1	set	3998
    70  0000                     _INTCON	set	4082
    71  0000                     _INTCON2	set	4081
    72  0000                     _INTCON3	set	4080
    73  0000                     _PORTC	set	3970
    74  0000                     _PORTB	set	3969
    75  0000                     _PORTA	set	3968
    76  0000                     _LATCbits	set	3979
    77  0000                     _LATAbits	set	3977
    78  0000                     _SSPBUF	set	4041
    79  0000                     _SSPSTATbits	set	4039
    80  0000                     _SSPCON1bits	set	4038
    81  0000                     _PIE1bits	set	3997
    82  0000                     _TXREG1	set	4013
    83  0000                     _RCREG1	set	4014
    84  0000                     _TRISCbits	set	3988
    85  0000                     _RCSTA1bits	set	4011
    86  0000                     _SPBRG1	set	4015
    87  0000                     _TXSTA1bits	set	4012
    88  0000                     _RC1IF	set	31989
    89                           
    90                           ; #config settings
    91  0000                     
    92                           	psect	cinit
    93  007AAA                     __pcinit:
    94                           	opt stack 0
    95  007AAA                     start_initialization:
    96                           	opt stack 0
    97  007AAA                     __initialization:
    98                           	opt stack 0
    99                           
   100                           ; Clear objects allocated to COMRAM (13 bytes)
   101  007AAA  EE00  F01F         	lfsr	0,__pbssCOMRAM
   102  007AAE  0E0D               	movlw	13
   103  007AB0                     clear_0:
   104  007AB0  6AEE               	clrf	postinc0,c
   105  007AB2  06E8               	decf	wreg,f,c
   106  007AB4  E1FD               	bnz	clear_0
   107  007AB6                     end_of_initialization:
   108                           	opt stack 0
   109  007AB6                     __end_of__initialization:
   110                           	opt stack 0
   111  007AB6  0100               	movlb	0
   112  007AB8  EF64  F03E         	goto	_main	;jump to C main() function
   113                           postinc0	equ	0xFEE
   114                           wreg	equ	0xFE8
   115                           
   116                           	psect	bssCOMRAM
   117  00001F                     __pbssCOMRAM:
   118                           	opt stack 0
   119  00001F                     _buff:
   120                           	opt stack 0
   121  00001F                     	ds	8
   122  000027                     _PIC_ft232:
   123                           	opt stack 0
   124  000027                     	ds	1
   125  000028                     _FPGA:
   126                           	opt stack 0
   127  000028                     	ds	1
   128  000029                     _alert_status:
   129                           	opt stack 0
   130  000029                     	ds	1
   131  00002A                     _serial_read:
   132                           	opt stack 0
   133  00002A                     	ds	1
   134  00002B                     _MAX_RT:
   135                           	opt stack 0
   136  00002B                     	ds	1
   137                           postinc0	equ	0xFEE
   138                           wreg	equ	0xFE8
   139                           
   140                           	psect	cstackCOMRAM
   141  000001                     __pcstackCOMRAM:
   142                           	opt stack 0
   143  000001                     ?___aldiv:
   144                           	opt stack 0
   145  000001                     UART_Write@data:
   146                           	opt stack 0
   147  000001                     spi_write@data:
   148                           	opt stack 0
   149  000001                     ___aldiv@dividend:
   150                           	opt stack 0
   151                           
   152                           ; 4 bytes @ 0x0
   153  000001                     	ds	1
   154  000002                     ??_configure_TX:
   155  000002                     ??_TX_nordic:
   156  000002                     ??_read_ACK_payload:
   157  000002                     check_MAX_RT@buffer:
   158                           	opt stack 0
   159                           
   160                           ; 1 bytes @ 0x1
   161  000002                     	ds	1
   162  000003                     TX_nordic@data:
   163                           	opt stack 0
   164  000003                     read_ACK_payload@ACK_payload:
   165                           	opt stack 0
   166  000003                     check_MAX_RT@MAX_RT:
   167                           	opt stack 0
   168                           
   169                           ; 1 bytes @ 0x2
   170  000003                     	ds	1
   171  000004                     configure_TX@j:
   172                           	opt stack 0
   173                           
   174                           ; 1 bytes @ 0x3
   175  000004                     	ds	1
   176  000005                     ___aldiv@divisor:
   177                           	opt stack 0
   178                           
   179                           ; 4 bytes @ 0x4
   180  000005                     	ds	4
   181  000009                     ___aldiv@counter:
   182                           	opt stack 0
   183                           
   184                           ; 1 bytes @ 0x8
   185  000009                     	ds	1
   186  00000A                     ___aldiv@sign:
   187                           	opt stack 0
   188                           
   189                           ; 1 bytes @ 0x9
   190  00000A                     	ds	1
   191  00000B                     ___aldiv@quotient:
   192                           	opt stack 0
   193                           
   194                           ; 4 bytes @ 0xA
   195  00000B                     	ds	4
   196  00000F                     UART_Init@baudrate:
   197                           	opt stack 0
   198                           
   199                           ; 4 bytes @ 0xE
   200  00000F                     	ds	4
   201  000013                     ??_UART_Init:
   202                           
   203                           ; 1 bytes @ 0x12
   204  000013                     	ds	8
   205  00001B                     UART_Init@x:
   206                           	opt stack 0
   207                           
   208                           ; 2 bytes @ 0x1A
   209  00001B                     	ds	2
   210  00001D                     ??_main:
   211                           
   212                           ; 1 bytes @ 0x1C
   213  00001D                     	ds	2
   214                           postinc0	equ	0xFEE
   215                           wreg	equ	0xFE8
   216                           
   217 ;;
   218 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   219 ;;
   220 ;; *************** function _main *****************
   221 ;; Defined at:
   222 ;;		line 144 in file "nRF24L01_18LF25K80_TX.c"
   223 ;; Parameters:    Size  Location     Type
   224 ;;		None
   225 ;; Auto vars:     Size  Location     Type
   226 ;;		None
   227 ;; Return value:  Size  Location     Type
   228 ;;                  1    wreg      void 
   229 ;; Registers used:
   230 ;;		wreg, status,2, status,0, cstack
   231 ;; Tracked objects:
   232 ;;		On entry : 0/0
   233 ;;		On exit  : 0/0
   234 ;;		Unchanged: 0/0
   235 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   236 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   237 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   238 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   239 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   240 ;;Total ram usage:        2 bytes
   241 ;; Hardware stack levels required when called:    2
   242 ;; This function calls:
   243 ;;		_TX_nordic
   244 ;;		_UART_Data_Ready
   245 ;;		_UART_Init
   246 ;;		_UART_Read
   247 ;;		_UART_Write
   248 ;;		_check_MAX_RT
   249 ;;		_configure_TX
   250 ;;		_flush
   251 ;;		_initPIC
   252 ;;		_init_spi_master
   253 ;;		_read_ACK_payload
   254 ;;		_reset_MAX_RT
   255 ;; This function is called by:
   256 ;;		Startup code after reset
   257 ;; This function uses a non-reentrant model
   258 ;;
   259                           
   260                           	psect	text0
   261  007CC8                     __ptext0:
   262                           	opt stack 0
   263  007CC8                     _main:
   264                           	opt stack 29
   265                           
   266                           ;nRF24L01_18LF25K80_TX.c: 147: _delay((unsigned long)((1000)*(8000000/4000.0)));
   267                           
   268                           ;incstack = 0
   269  007CC8  0E0B               	movlw	11
   270  007CCA  6E1E               	movwf	(??_main+1)& (0+255),c
   271  007CCC  0E26               	movlw	38
   272  007CCE  6E1D               	movwf	??_main& (0+255),c
   273  007CD0  0E5E               	movlw	94
   274  007CD2                     u487:
   275  007CD2  2EE8               	decfsz	wreg,f,c
   276  007CD4  D7FE               	bra	u487
   277  007CD6  2E1D               	decfsz	??_main& (0+255),f,c
   278  007CD8  D7FC               	bra	u487
   279  007CDA  2E1E               	decfsz	(??_main+1)& (0+255),f,c
   280  007CDC  D7FA               	bra	u487
   281                           
   282                           ;nRF24L01_18LF25K80_TX.c: 148: initPIC();
   283  007CDE  ECCF  F03D         	call	_initPIC	;wreg free
   284                           
   285                           ;nRF24L01_18LF25K80_TX.c: 149: UART_Init(9600);
   286  007CE2  0E80               	movlw	128
   287  007CE4  6E0F               	movwf	UART_Init@baudrate,c
   288  007CE6  0E25               	movlw	37
   289  007CE8  6E10               	movwf	UART_Init@baudrate+1,c
   290  007CEA  0E00               	movlw	0
   291  007CEC  6E11               	movwf	UART_Init@baudrate+2,c
   292  007CEE  0E00               	movlw	0
   293  007CF0  6E12               	movwf	UART_Init@baudrate+3,c
   294  007CF2  EC6A  F03F         	call	_UART_Init	;wreg free
   295                           
   296                           ;nRF24L01_18LF25K80_TX.c: 150: init_spi_master();
   297  007CF6  EC69  F03D         	call	_init_spi_master	;wreg free
   298                           
   299                           ;nRF24L01_18LF25K80_TX.c: 151: _delay((unsigned long)((5)*(8000000/4000.0)));
   300  007CFA  0E0D               	movlw	13
   301  007CFC  6E1D               	movwf	??_main& (0+255),c
   302  007CFE  0EFC               	movlw	252
   303  007D00                     u497:
   304  007D00  2EE8               	decfsz	wreg,f,c
   305  007D02  D7FE               	bra	u497
   306  007D04  2E1D               	decfsz	??_main& (0+255),f,c
   307  007D06  D7FC               	bra	u497
   308                           
   309                           ;nRF24L01_18LF25K80_TX.c: 152: configure_TX();
   310  007D08  ECE2  F03E         	call	_configure_TX	;wreg free
   311                           
   312                           ;nRF24L01_18LF25K80_TX.c: 153: _delay((unsigned long)((20)*(8000000/4000.0)));
   313  007D0C  0E34               	movlw	52
   314  007D0E  6E1D               	movwf	??_main& (0+255),c
   315  007D10  0EF2               	movlw	242
   316  007D12                     u507:
   317  007D12  2EE8               	decfsz	wreg,f,c
   318  007D14  D7FE               	bra	u507
   319  007D16  2E1D               	decfsz	??_main& (0+255),f,c
   320  007D18  D7FC               	bra	u507
   321  007D1A                     l1209:
   322                           
   323                           ;nRF24L01_18LF25K80_TX.c: 159: LATAbits.LATA0 = !LATAbits.LATA0;
   324  007D1A  B089               	btfsc	3977,0,c	;volatile
   325  007D1C  D003               	goto	u410
   326  007D1E  6A1D               	clrf	??_main& (0+255),c
   327  007D20  2A1D               	incf	??_main& (0+255),f,c
   328  007D22  D001               	goto	u428
   329  007D24                     u410:
   330  007D24  6A1D               	clrf	??_main& (0+255),c
   331  007D26                     u428:
   332  007D26  5089               	movf	3977,w,c	;volatile
   333  007D28  181D               	xorwf	??_main,w,c
   334  007D2A  0BFE               	andlw	-2
   335  007D2C  181D               	xorwf	??_main,w,c
   336  007D2E  6E89               	movwf	3977,c	;volatile
   337                           
   338                           ;nRF24L01_18LF25K80_TX.c: 160: _delay((unsigned long)((10)*(8000000/4000.0)));
   339  007D30  0E1A               	movlw	26
   340  007D32  6E1D               	movwf	??_main& (0+255),c
   341  007D34  0EF8               	movlw	248
   342  007D36                     u517:
   343  007D36  2EE8               	decfsz	wreg,f,c
   344  007D38  D7FE               	bra	u517
   345  007D3A  2E1D               	decfsz	??_main& (0+255),f,c
   346  007D3C  D7FC               	bra	u517
   347  007D3E  D000               	nop2	
   348                           
   349                           ;nRF24L01_18LF25K80_TX.c: 162: if (check_MAX_RT() == 1) {
   350  007D40  EC77  F03D         	call	_check_MAX_RT	;wreg free
   351  007D44  06E8               	decf	wreg,f,c
   352  007D46  A4D8               	btfss	status,2,c
   353  007D48  D00D               	goto	l1219
   354                           
   355                           ;nRF24L01_18LF25K80_TX.c: 163: flush();
   356  007D4A  EC5E  F03D         	call	_flush	;wreg free
   357                           
   358                           ;nRF24L01_18LF25K80_TX.c: 164: reset_MAX_RT();
   359  007D4E  EC4C  F03D         	call	_reset_MAX_RT	;wreg free
   360                           
   361                           ;nRF24L01_18LF25K80_TX.c: 165: flush();
   362  007D52  EC5E  F03D         	call	_flush	;wreg free
   363                           
   364                           ;nRF24L01_18LF25K80_TX.c: 166: _delay((unsigned long)((5)*(8000000/4000.0)));
   365  007D56  0E0D               	movlw	13
   366  007D58  6E1D               	movwf	??_main& (0+255),c
   367  007D5A  0EFC               	movlw	252
   368  007D5C                     u527:
   369  007D5C  2EE8               	decfsz	wreg,f,c
   370  007D5E  D7FE               	bra	u527
   371  007D60  2E1D               	decfsz	??_main& (0+255),f,c
   372  007D62  D7FC               	bra	u527
   373  007D64                     l1219:
   374                           
   375                           ;nRF24L01_18LF25K80_TX.c: 167: }
   376                           ;nRF24L01_18LF25K80_TX.c: 169: if(RCSTA1bits.OERR == 1){
   377  007D64  A2AB               	btfss	4011,1,c	;volatile
   378  007D66  D009               	goto	l1227
   379                           
   380                           ;nRF24L01_18LF25K80_TX.c: 170: RCSTA1bits.CREN = 0;
   381  007D68  98AB               	bcf	4011,4,c	;volatile
   382                           
   383                           ;nRF24L01_18LF25K80_TX.c: 171: _delay((unsigned long)((1)*(8000000/4000.0)));
   384  007D6A  0E03               	movlw	3
   385  007D6C  6E1D               	movwf	??_main& (0+255),c
   386  007D6E  0E98               	movlw	152
   387  007D70                     u537:
   388  007D70  2EE8               	decfsz	wreg,f,c
   389  007D72  D7FE               	bra	u537
   390  007D74  2E1D               	decfsz	??_main& (0+255),f,c
   391  007D76  D7FC               	bra	u537
   392                           
   393                           ;nRF24L01_18LF25K80_TX.c: 172: RCSTA1bits.CREN = 1;
   394  007D78  88AB               	bsf	4011,4,c	;volatile
   395  007D7A                     l1227:
   396                           
   397                           ;nRF24L01_18LF25K80_TX.c: 173: }
   398                           ;nRF24L01_18LF25K80_TX.c: 175: if (UART_Data_Ready() == 1){
   399  007D7A  EC36  F03D         	call	_UART_Data_Ready	;wreg free
   400  007D7E  06E8               	decf	wreg,f,c
   401  007D80  A4D8               	btfss	status,2,c
   402  007D82  D7CB               	goto	l1209
   403                           
   404                           ;nRF24L01_18LF25K80_TX.c: 176: FPGA = UART_Read();
   405  007D84  EC3A  F03D         	call	_UART_Read	;wreg free
   406  007D88  6E28               	movwf	_FPGA,c
   407                           
   408                           ;nRF24L01_18LF25K80_TX.c: 177: LATAbits.LATA1 = !LATAbits.LATA1;
   409  007D8A  B289               	btfsc	3977,1,c	;volatile
   410  007D8C  D003               	goto	u460
   411  007D8E  6A1D               	clrf	??_main& (0+255),c
   412  007D90  2A1D               	incf	??_main& (0+255),f,c
   413  007D92  D001               	goto	u478
   414  007D94                     u460:
   415  007D94  6A1D               	clrf	??_main& (0+255),c
   416  007D96                     u478:
   417  007D96  461D               	rlncf	??_main,f,c
   418  007D98  5089               	movf	3977,w,c	;volatile
   419  007D9A  181D               	xorwf	??_main,w,c
   420  007D9C  0BFD               	andlw	-3
   421  007D9E  181D               	xorwf	??_main,w,c
   422  007DA0  6E89               	movwf	3977,c	;volatile
   423                           
   424                           ;nRF24L01_18LF25K80_TX.c: 178: TX_nordic(FPGA);
   425  007DA2  5028               	movf	_FPGA,w,c
   426  007DA4  ECA0  F03D         	call	_TX_nordic
   427                           
   428                           ;nRF24L01_18LF25K80_TX.c: 179: _delay((unsigned long)((5)*(8000000/4000.0)));
   429  007DA8  0E0D               	movlw	13
   430  007DAA  6E1D               	movwf	??_main& (0+255),c
   431  007DAC  0EFC               	movlw	252
   432  007DAE                     u547:
   433  007DAE  2EE8               	decfsz	wreg,f,c
   434  007DB0  D7FE               	bra	u547
   435  007DB2  2E1D               	decfsz	??_main& (0+255),f,c
   436  007DB4  D7FC               	bra	u547
   437                           
   438                           ;nRF24L01_18LF25K80_TX.c: 180: alert_status = read_ACK_payload();
   439  007DB6  EC89  F03D         	call	_read_ACK_payload	;wreg free
   440  007DBA  6E29               	movwf	_alert_status,c
   441                           
   442                           ;nRF24L01_18LF25K80_TX.c: 181: UART_Write(alert_status);
   443  007DBC  5029               	movf	_alert_status,w,c
   444  007DBE  EC3E  F03D         	call	_UART_Write
   445  007DC2  D7AB               	goto	l1209
   446  007DC4                     __end_of_main:
   447                           	opt stack 0
   448                           postinc0	equ	0xFEE
   449                           wreg	equ	0xFE8
   450                           status	equ	0xFD8
   451                           
   452 ;; *************** function _reset_MAX_RT *****************
   453 ;; Defined at:
   454 ;;		line 250 in file "nRF24L01_TX.h"
   455 ;; Parameters:    Size  Location     Type
   456 ;;		None
   457 ;; Auto vars:     Size  Location     Type
   458 ;;		None
   459 ;; Return value:  Size  Location     Type
   460 ;;                  1    wreg      void 
   461 ;; Registers used:
   462 ;;		wreg, status,2, cstack
   463 ;; Tracked objects:
   464 ;;		On entry : 0/0
   465 ;;		On exit  : 0/0
   466 ;;		Unchanged: 0/0
   467 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   468 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   469 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   470 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   471 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   472 ;;Total ram usage:        0 bytes
   473 ;; Hardware stack levels used:    1
   474 ;; Hardware stack levels required when called:    1
   475 ;; This function calls:
   476 ;;		_spi_write
   477 ;; This function is called by:
   478 ;;		_main
   479 ;; This function uses a non-reentrant model
   480 ;;
   481                           
   482                           	psect	text1
   483  007A98                     __ptext1:
   484                           	opt stack 0
   485  007A98                     _reset_MAX_RT:
   486                           	opt stack 29
   487                           
   488                           ;nRF24L01_TX.h: 252: LATCbits.LATC2 = 0;
   489                           
   490                           ;incstack = 0
   491  007A98  948B               	bcf	3979,2,c	;volatile
   492                           
   493                           ;nRF24L01_TX.h: 253: spi_write(0x20+0x07);
   494  007A9A  0E27               	movlw	39
   495  007A9C  EC44  F03D         	call	_spi_write
   496                           
   497                           ;nRF24L01_TX.h: 254: spi_write(0x10);
   498  007AA0  0E10               	movlw	16
   499  007AA2  EC44  F03D         	call	_spi_write
   500                           
   501                           ;nRF24L01_TX.h: 255: LATCbits.LATC2 = 1;
   502  007AA6  848B               	bsf	3979,2,c	;volatile
   503  007AA8  0012               	return		;funcret
   504  007AAA                     __end_of_reset_MAX_RT:
   505                           	opt stack 0
   506                           postinc0	equ	0xFEE
   507                           wreg	equ	0xFE8
   508                           status	equ	0xFD8
   509                           
   510 ;; *************** function _read_ACK_payload *****************
   511 ;; Defined at:
   512 ;;		line 198 in file "nRF24L01_TX.h"
   513 ;; Parameters:    Size  Location     Type
   514 ;;		None
   515 ;; Auto vars:     Size  Location     Type
   516 ;;  ACK_payload     1    2[COMRAM] unsigned char 
   517 ;; Return value:  Size  Location     Type
   518 ;;                  1    wreg      unsigned char 
   519 ;; Registers used:
   520 ;;		wreg, status,2, cstack
   521 ;; Tracked objects:
   522 ;;		On entry : 0/0
   523 ;;		On exit  : 0/0
   524 ;;		Unchanged: 0/0
   525 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   526 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   527 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   528 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   529 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   530 ;;Total ram usage:        2 bytes
   531 ;; Hardware stack levels used:    1
   532 ;; Hardware stack levels required when called:    1
   533 ;; This function calls:
   534 ;;		_spi_write
   535 ;; This function is called by:
   536 ;;		_main
   537 ;; This function uses a non-reentrant model
   538 ;;
   539                           
   540                           	psect	text2
   541  007B12                     __ptext2:
   542                           	opt stack 0
   543  007B12                     _read_ACK_payload:
   544                           	opt stack 29
   545                           
   546                           ;nRF24L01_TX.h: 200: unsigned char ACK_payload;
   547                           ;nRF24L01_TX.h: 201: _delay((unsigned long)((1)*(8000000/4000.0)));
   548                           
   549                           ;incstack = 0
   550  007B12  0E03               	movlw	3
   551  007B14  6E02               	movwf	??_read_ACK_payload& (0+255),c
   552  007B16  0E98               	movlw	152
   553  007B18                     u557:
   554  007B18  2EE8               	decfsz	wreg,f,c
   555  007B1A  D7FE               	bra	u557
   556  007B1C  2E02               	decfsz	??_read_ACK_payload& (0+255),f,c
   557  007B1E  D7FC               	bra	u557
   558                           
   559                           ;nRF24L01_TX.h: 203: LATCbits.LATC2 = 0;
   560  007B20  948B               	bcf	3979,2,c	;volatile
   561                           
   562                           ;nRF24L01_TX.h: 204: spi_write(0x61);
   563  007B22  0E61               	movlw	97
   564  007B24  EC44  F03D         	call	_spi_write
   565                           
   566                           ;nRF24L01_TX.h: 205: ACK_payload = spi_write(0);
   567  007B28  0E00               	movlw	0
   568  007B2A  EC44  F03D         	call	_spi_write
   569  007B2E  6E03               	movwf	read_ACK_payload@ACK_payload,c
   570                           
   571                           ;nRF24L01_TX.h: 206: LATCbits.LATC2 = 1;
   572  007B30  848B               	bsf	3979,2,c	;volatile
   573                           
   574                           ;nRF24L01_TX.h: 209: LATCbits.LATC2 = 0;
   575  007B32  948B               	bcf	3979,2,c	;volatile
   576                           
   577                           ;nRF24L01_TX.h: 210: spi_write(0xE2);
   578  007B34  0EE2               	movlw	226
   579  007B36  EC44  F03D         	call	_spi_write
   580                           
   581                           ;nRF24L01_TX.h: 211: LATCbits.LATC2 = 1;
   582  007B3A  848B               	bsf	3979,2,c	;volatile
   583                           
   584                           ;nRF24L01_TX.h: 213: return ACK_payload;
   585  007B3C  5003               	movf	read_ACK_payload@ACK_payload,w,c
   586  007B3E  0012               	return	
   587  007B40                     __end_of_read_ACK_payload:
   588                           	opt stack 0
   589                           postinc0	equ	0xFEE
   590                           wreg	equ	0xFE8
   591                           status	equ	0xFD8
   592                           
   593 ;; *************** function _init_spi_master *****************
   594 ;; Defined at:
   595 ;;		line 15 in file "spi.h"
   596 ;; Parameters:    Size  Location     Type
   597 ;;		None
   598 ;; Auto vars:     Size  Location     Type
   599 ;;		None
   600 ;; Return value:  Size  Location     Type
   601 ;;                  1    wreg      void 
   602 ;; Registers used:
   603 ;;		None
   604 ;; Tracked objects:
   605 ;;		On entry : 0/0
   606 ;;		On exit  : 0/0
   607 ;;		Unchanged: 0/0
   608 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   609 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   610 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   611 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   612 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   613 ;;Total ram usage:        0 bytes
   614 ;; Hardware stack levels used:    1
   615 ;; This function calls:
   616 ;;		Nothing
   617 ;; This function is called by:
   618 ;;		_main
   619 ;; This function uses a non-reentrant model
   620 ;;
   621                           
   622                           	psect	text3
   623  007AD2                     __ptext3:
   624                           	opt stack 0
   625  007AD2                     _init_spi_master:
   626                           	opt stack 30
   627                           
   628                           ;spi.h: 17: PIE1bits.SSPIE = 0;
   629                           
   630                           ;incstack = 0
   631  007AD2  969D               	bcf	3997,3,c	;volatile
   632                           
   633                           ;spi.h: 18: SSPCON1bits.SSPEN = 0;
   634  007AD4  9AC6               	bcf	4038,5,c	;volatile
   635                           
   636                           ;spi.h: 21: TRISCbits.TRISC4 = 1;
   637  007AD6  8894               	bsf	3988,4,c	;volatile
   638                           
   639                           ;spi.h: 22: TRISCbits.TRISC3 = 0;
   640  007AD8  9694               	bcf	3988,3,c	;volatile
   641                           
   642                           ;spi.h: 23: TRISCbits.TRISC5 = 0;
   643  007ADA  9A94               	bcf	3988,5,c	;volatile
   644                           
   645                           ;spi.h: 26: SSPSTATbits.SMP = 0;
   646  007ADC  9EC7               	bcf	4039,7,c	;volatile
   647                           
   648                           ;spi.h: 28: SSPSTATbits.CKE = 1;
   649  007ADE  8CC7               	bsf	4039,6,c	;volatile
   650                           
   651                           ;spi.h: 30: SSPCON1bits.CKP = 0;
   652  007AE0  98C6               	bcf	4038,4,c	;volatile
   653                           
   654                           ;spi.h: 33: SSPCON1bits.SSPM3 = 0;
   655  007AE2  96C6               	bcf	4038,3,c	;volatile
   656                           
   657                           ;spi.h: 34: SSPCON1bits.SSPM2 = 0;
   658  007AE4  94C6               	bcf	4038,2,c	;volatile
   659                           
   660                           ;spi.h: 35: SSPCON1bits.SSPM1 = 1;
   661  007AE6  82C6               	bsf	4038,1,c	;volatile
   662                           
   663                           ;spi.h: 36: SSPCON1bits.SSPM0 = 0;
   664  007AE8  90C6               	bcf	4038,0,c	;volatile
   665                           
   666                           ;spi.h: 38: SSPCON1bits.SSPEN = 1;
   667  007AEA  8AC6               	bsf	4038,5,c	;volatile
   668  007AEC  0012               	return		;funcret
   669  007AEE                     __end_of_init_spi_master:
   670                           	opt stack 0
   671                           postinc0	equ	0xFEE
   672                           wreg	equ	0xFE8
   673                           status	equ	0xFD8
   674                           
   675 ;; *************** function _initPIC *****************
   676 ;; Defined at:
   677 ;;		line 102 in file "nRF24L01_18LF25K80_TX.c"
   678 ;; Parameters:    Size  Location     Type
   679 ;;		None
   680 ;; Auto vars:     Size  Location     Type
   681 ;;		None
   682 ;; Return value:  Size  Location     Type
   683 ;;                  1    wreg      void 
   684 ;; Registers used:
   685 ;;		wreg, status,2
   686 ;; Tracked objects:
   687 ;;		On entry : 0/0
   688 ;;		On exit  : 0/0
   689 ;;		Unchanged: 0/0
   690 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   691 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   692 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   693 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   694 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   695 ;;Total ram usage:        0 bytes
   696 ;; Hardware stack levels used:    1
   697 ;; This function calls:
   698 ;;		Nothing
   699 ;; This function is called by:
   700 ;;		_main
   701 ;; This function uses a non-reentrant model
   702 ;;
   703                           
   704                           	psect	text4
   705  007B9E                     __ptext4:
   706                           	opt stack 0
   707  007B9E                     _initPIC:
   708                           	opt stack 30
   709                           
   710                           ;nRF24L01_18LF25K80_TX.c: 104: PORTA = 0x00;
   711                           
   712                           ;incstack = 0
   713  007B9E  0E00               	movlw	0
   714  007BA0  6E80               	movwf	3968,c	;volatile
   715                           
   716                           ;nRF24L01_18LF25K80_TX.c: 105: PORTB = 0x00;
   717  007BA2  0E00               	movlw	0
   718  007BA4  6E81               	movwf	3969,c	;volatile
   719                           
   720                           ;nRF24L01_18LF25K80_TX.c: 106: PORTC = 0x00;
   721  007BA6  0E00               	movlw	0
   722  007BA8  6E82               	movwf	3970,c	;volatile
   723                           
   724                           ;nRF24L01_18LF25K80_TX.c: 107: INTCON3 = 0x00;
   725  007BAA  0E00               	movlw	0
   726  007BAC  6EF0               	movwf	intcon3,c	;volatile
   727                           
   728                           ;nRF24L01_18LF25K80_TX.c: 108: INTCON2 = 0x00;
   729  007BAE  0E00               	movlw	0
   730  007BB0  6EF1               	movwf	intcon2,c	;volatile
   731                           
   732                           ;nRF24L01_18LF25K80_TX.c: 109: INTCON = 0x00;
   733  007BB2  0E00               	movlw	0
   734  007BB4  6EF2               	movwf	intcon,c	;volatile
   735                           
   736                           ;nRF24L01_18LF25K80_TX.c: 110: PIR1 = 0x00;
   737  007BB6  0E00               	movlw	0
   738  007BB8  6E9E               	movwf	3998,c	;volatile
   739                           
   740                           ;nRF24L01_18LF25K80_TX.c: 111: RCON = 0x00;
   741  007BBA  0E00               	movlw	0
   742  007BBC  6ED0               	movwf	4048,c	;volatile
   743                           
   744                           ;nRF24L01_18LF25K80_TX.c: 114: TRISA = 0x00;
   745  007BBE  0E00               	movlw	0
   746  007BC0  6E92               	movwf	3986,c	;volatile
   747                           
   748                           ;nRF24L01_18LF25K80_TX.c: 115: TRISB = 0x00;
   749  007BC2  0E00               	movlw	0
   750  007BC4  6E93               	movwf	3987,c	;volatile
   751                           
   752                           ;nRF24L01_18LF25K80_TX.c: 116: TRISC = 0x00;
   753  007BC6  0E00               	movlw	0
   754  007BC8  6E94               	movwf	3988,c	;volatile
   755                           
   756                           ;nRF24L01_18LF25K80_TX.c: 118: INTCON3bits.INT2IE = 0;
   757  007BCA  98F0               	bcf	intcon3,4,c	;volatile
   758                           
   759                           ;nRF24L01_18LF25K80_TX.c: 119: INTCON3bits.INT3IE = 0;
   760  007BCC  9AF0               	bcf	intcon3,5,c	;volatile
   761                           
   762                           ;nRF24L01_18LF25K80_TX.c: 121: ANCON0 = 0x00;
   763  007BCE  0E00               	movlw	0
   764  007BD0  010F               	movlb	15	; () banked
   765  007BD2  6F5D               	movwf	93,b	;volatile
   766                           
   767                           ;nRF24L01_18LF25K80_TX.c: 122: ANCON1 = 0x00;
   768  007BD4  0E00               	movlw	0
   769  007BD6  010F               	movlb	15	; () banked
   770  007BD8  6F5C               	movwf	92,b	;volatile
   771                           
   772                           ;nRF24L01_18LF25K80_TX.c: 126: TRISB = 0b00111100;
   773  007BDA  0E3C               	movlw	60
   774  007BDC  6E93               	movwf	3987,c	;volatile
   775                           
   776                           ; BSR set to: 15
   777                           ;nRF24L01_18LF25K80_TX.c: 129: INTCON2bits.RBPU = 0;
   778  007BDE  9EF1               	bcf	intcon2,7,c	;volatile
   779                           
   780                           ;nRF24L01_18LF25K80_TX.c: 130: WPUB = 0b00111100;
   781  007BE0  0E3C               	movlw	60
   782  007BE2  010F               	movlb	15	; () banked
   783  007BE4  6F5B               	movwf	91,b	;volatile
   784                           
   785                           ;nRF24L01_18LF25K80_TX.c: 133: MAX_RT = 0;
   786  007BE6  0E00               	movlw	0
   787  007BE8  6E2B               	movwf	_MAX_RT,c
   788                           
   789                           ;nRF24L01_18LF25K80_TX.c: 134: serial_read = 0;
   790  007BEA  0E00               	movlw	0
   791  007BEC  6E2A               	movwf	_serial_read,c
   792                           
   793                           ;nRF24L01_18LF25K80_TX.c: 135: alert_status = 0;
   794  007BEE  0E00               	movlw	0
   795  007BF0  6E29               	movwf	_alert_status,c
   796                           
   797                           ;nRF24L01_18LF25K80_TX.c: 136: FPGA = 0;
   798  007BF2  0E00               	movlw	0
   799  007BF4  6E28               	movwf	_FPGA,c
   800                           
   801                           ;nRF24L01_18LF25K80_TX.c: 137: PIC_ft232 = 0;
   802  007BF6  0E00               	movlw	0
   803  007BF8  6E27               	movwf	_PIC_ft232,c
   804                           
   805                           ; BSR set to: 15
   806  007BFA  0012               	return		;funcret
   807  007BFC                     __end_of_initPIC:
   808                           	opt stack 0
   809                           intcon	equ	0xFF2
   810                           intcon2	equ	0xFF1
   811                           intcon3	equ	0xFF0
   812                           postinc0	equ	0xFEE
   813                           wreg	equ	0xFE8
   814                           status	equ	0xFD8
   815                           
   816 ;; *************** function _flush *****************
   817 ;; Defined at:
   818 ;;		line 259 in file "nRF24L01_TX.h"
   819 ;; Parameters:    Size  Location     Type
   820 ;;		None
   821 ;; Auto vars:     Size  Location     Type
   822 ;;		None
   823 ;; Return value:  Size  Location     Type
   824 ;;                  1    wreg      void 
   825 ;; Registers used:
   826 ;;		wreg, status,2, cstack
   827 ;; Tracked objects:
   828 ;;		On entry : 0/0
   829 ;;		On exit  : 0/0
   830 ;;		Unchanged: 0/0
   831 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   832 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   833 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   834 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   835 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   836 ;;Total ram usage:        0 bytes
   837 ;; Hardware stack levels used:    1
   838 ;; Hardware stack levels required when called:    1
   839 ;; This function calls:
   840 ;;		_spi_write
   841 ;; This function is called by:
   842 ;;		_main
   843 ;; This function uses a non-reentrant model
   844 ;;
   845                           
   846                           	psect	text5
   847  007ABC                     __ptext5:
   848                           	opt stack 0
   849  007ABC                     _flush:
   850                           	opt stack 29
   851                           
   852                           ;nRF24L01_TX.h: 261: LATCbits.LATC2 = 0;
   853                           
   854                           ; BSR set to: 15
   855                           ;incstack = 0
   856  007ABC  948B               	bcf	3979,2,c	;volatile
   857                           
   858                           ;nRF24L01_TX.h: 262: spi_write(0xE1);
   859  007ABE  0EE1               	movlw	225
   860  007AC0  EC44  F03D         	call	_spi_write
   861                           
   862                           ;nRF24L01_TX.h: 263: LATCbits.LATC2 = 1;
   863  007AC4  848B               	bsf	3979,2,c	;volatile
   864                           
   865                           ;nRF24L01_TX.h: 265: LATCbits.LATC2 = 0;
   866  007AC6  948B               	bcf	3979,2,c	;volatile
   867                           
   868                           ;nRF24L01_TX.h: 266: spi_write(0xE2);
   869  007AC8  0EE2               	movlw	226
   870  007ACA  EC44  F03D         	call	_spi_write
   871                           
   872                           ;nRF24L01_TX.h: 267: LATCbits.LATC2 = 1;
   873  007ACE  848B               	bsf	3979,2,c	;volatile
   874  007AD0  0012               	return		;funcret
   875  007AD2                     __end_of_flush:
   876                           	opt stack 0
   877                           intcon	equ	0xFF2
   878                           intcon2	equ	0xFF1
   879                           intcon3	equ	0xFF0
   880                           postinc0	equ	0xFEE
   881                           wreg	equ	0xFE8
   882                           status	equ	0xFD8
   883                           
   884 ;; *************** function _configure_TX *****************
   885 ;; Defined at:
   886 ;;		line 51 in file "nRF24L01_TX.h"
   887 ;; Parameters:    Size  Location     Type
   888 ;;		None
   889 ;; Auto vars:     Size  Location     Type
   890 ;;  j               1    3[COMRAM] unsigned char 
   891 ;; Return value:  Size  Location     Type
   892 ;;                  1    wreg      void 
   893 ;; Registers used:
   894 ;;		wreg, status,2, status,0, cstack
   895 ;; Tracked objects:
   896 ;;		On entry : 0/0
   897 ;;		On exit  : 0/0
   898 ;;		Unchanged: 0/0
   899 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   900 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   901 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   902 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   903 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   904 ;;Total ram usage:        3 bytes
   905 ;; Hardware stack levels used:    1
   906 ;; Hardware stack levels required when called:    1
   907 ;; This function calls:
   908 ;;		_spi_write
   909 ;; This function is called by:
   910 ;;		_main
   911 ;; This function uses a non-reentrant model
   912 ;;
   913                           
   914                           	psect	text6
   915  007DC4                     __ptext6:
   916                           	opt stack 0
   917  007DC4                     _configure_TX:
   918                           	opt stack 29
   919                           
   920                           ;nRF24L01_TX.h: 54: unsigned char j;
   921                           ;nRF24L01_TX.h: 56: LATAbits.LATA3 = 0;
   922                           
   923                           ;incstack = 0
   924  007DC4  9689               	bcf	3977,3,c	;volatile
   925                           
   926                           ;nRF24L01_TX.h: 57: _delay((unsigned long)((100)*(8000000/4000.0)));
   927  007DC6  0E02               	movlw	2
   928  007DC8  6E03               	movwf	(??_configure_TX+1)& (0+255),c
   929  007DCA  0E04               	movlw	4
   930  007DCC  6E02               	movwf	??_configure_TX& (0+255),c
   931  007DCE  0EBA               	movlw	186
   932  007DD0                     u567:
   933  007DD0  2EE8               	decfsz	wreg,f,c
   934  007DD2  D7FE               	bra	u567
   935  007DD4  2E02               	decfsz	??_configure_TX& (0+255),f,c
   936  007DD6  D7FC               	bra	u567
   937  007DD8  2E03               	decfsz	(??_configure_TX+1)& (0+255),f,c
   938  007DDA  D7FA               	bra	u567
   939  007DDC  D000               	nop2	
   940                           
   941                           ;nRF24L01_TX.h: 61: LATCbits.LATC2 = 1;
   942  007DDE  848B               	bsf	3979,2,c	;volatile
   943                           
   944                           ;nRF24L01_TX.h: 62: _delay((unsigned long)((5)*(8000000/4000.0)));
   945  007DE0  0E0D               	movlw	13
   946  007DE2  6E02               	movwf	??_configure_TX& (0+255),c
   947  007DE4  0EFC               	movlw	252
   948  007DE6                     u577:
   949  007DE6  2EE8               	decfsz	wreg,f,c
   950  007DE8  D7FE               	bra	u577
   951  007DEA  2E02               	decfsz	??_configure_TX& (0+255),f,c
   952  007DEC  D7FC               	bra	u577
   953                           
   954                           ;nRF24L01_TX.h: 64: LATCbits.LATC2 = 0;
   955  007DEE  948B               	bcf	3979,2,c	;volatile
   956                           
   957                           ;nRF24L01_TX.h: 65: spi_write(0x20+0x00);
   958  007DF0  0E20               	movlw	32
   959  007DF2  EC44  F03D         	call	_spi_write
   960                           
   961                           ;nRF24L01_TX.h: 66: spi_write(0b00011000);
   962  007DF6  0E18               	movlw	24
   963  007DF8  EC44  F03D         	call	_spi_write
   964                           
   965                           ;nRF24L01_TX.h: 74: LATCbits.LATC2 = 1;
   966  007DFC  848B               	bsf	3979,2,c	;volatile
   967                           
   968                           ;nRF24L01_TX.h: 77: LATCbits.LATC2 = 0;
   969  007DFE  948B               	bcf	3979,2,c	;volatile
   970                           
   971                           ;nRF24L01_TX.h: 79: spi_write(0x20+0x01);
   972  007E00  0E21               	movlw	33
   973  007E02  EC44  F03D         	call	_spi_write
   974                           
   975                           ;nRF24L01_TX.h: 80: spi_write(0x01);
   976  007E06  0E01               	movlw	1
   977  007E08  EC44  F03D         	call	_spi_write
   978                           
   979                           ;nRF24L01_TX.h: 81: LATCbits.LATC2 = 1;
   980  007E0C  848B               	bsf	3979,2,c	;volatile
   981                           
   982                           ;nRF24L01_TX.h: 84: LATCbits.LATC2 = 0;
   983  007E0E  948B               	bcf	3979,2,c	;volatile
   984                           
   985                           ;nRF24L01_TX.h: 85: spi_write(0x20+0x03);
   986  007E10  0E23               	movlw	35
   987  007E12  EC44  F03D         	call	_spi_write
   988                           
   989                           ;nRF24L01_TX.h: 86: spi_write(0b00000011);
   990  007E16  0E03               	movlw	3
   991  007E18  EC44  F03D         	call	_spi_write
   992                           
   993                           ;nRF24L01_TX.h: 87: LATCbits.LATC2 = 1;
   994  007E1C  848B               	bsf	3979,2,c	;volatile
   995                           
   996                           ;nRF24L01_TX.h: 90: LATCbits.LATC2 = 0;
   997  007E1E  948B               	bcf	3979,2,c	;volatile
   998                           
   999                           ;nRF24L01_TX.h: 91: spi_write(0x20+0x04);
  1000  007E20  0E24               	movlw	36
  1001  007E22  EC44  F03D         	call	_spi_write
  1002                           
  1003                           ;nRF24L01_TX.h: 92: spi_write(0x3F);
  1004  007E26  0E3F               	movlw	63
  1005  007E28  EC44  F03D         	call	_spi_write
  1006                           
  1007                           ;nRF24L01_TX.h: 93: LATCbits.LATC2 = 1;
  1008  007E2C  848B               	bsf	3979,2,c	;volatile
  1009                           
  1010                           ;nRF24L01_TX.h: 96: LATCbits.LATC2 = 0;
  1011  007E2E  948B               	bcf	3979,2,c	;volatile
  1012                           
  1013                           ;nRF24L01_TX.h: 97: spi_write(0x20+0x05);
  1014  007E30  0E25               	movlw	37
  1015  007E32  EC44  F03D         	call	_spi_write
  1016                           
  1017                           ;nRF24L01_TX.h: 98: spi_write(0x6E);
  1018  007E36  0E6E               	movlw	110
  1019  007E38  EC44  F03D         	call	_spi_write
  1020                           
  1021                           ;nRF24L01_TX.h: 99: LATCbits.LATC2 = 1;
  1022  007E3C  848B               	bsf	3979,2,c	;volatile
  1023                           
  1024                           ;nRF24L01_TX.h: 102: LATCbits.LATC2 = 0;
  1025  007E3E  948B               	bcf	3979,2,c	;volatile
  1026                           
  1027                           ;nRF24L01_TX.h: 104: spi_write(0x20+0x06);
  1028  007E40  0E26               	movlw	38
  1029  007E42  EC44  F03D         	call	_spi_write
  1030                           
  1031                           ;nRF24L01_TX.h: 105: spi_write(0b00000111);
  1032  007E46  0E07               	movlw	7
  1033  007E48  EC44  F03D         	call	_spi_write
  1034                           
  1035                           ;nRF24L01_TX.h: 106: LATCbits.LATC2 = 1;
  1036  007E4C  848B               	bsf	3979,2,c	;volatile
  1037                           
  1038                           ;nRF24L01_TX.h: 108: LATCbits.LATC2 = 0;
  1039  007E4E  948B               	bcf	3979,2,c	;volatile
  1040                           
  1041                           ;nRF24L01_TX.h: 110: spi_write(0x50);
  1042  007E50  0E50               	movlw	80
  1043  007E52  EC44  F03D         	call	_spi_write
  1044                           
  1045                           ;nRF24L01_TX.h: 111: spi_write(0x73);
  1046  007E56  0E73               	movlw	115
  1047  007E58  EC44  F03D         	call	_spi_write
  1048                           
  1049                           ;nRF24L01_TX.h: 112: LATCbits.LATC2 = 1;
  1050  007E5C  848B               	bsf	3979,2,c	;volatile
  1051                           
  1052                           ;nRF24L01_TX.h: 114: LATCbits.LATC2 = 0;
  1053  007E5E  948B               	bcf	3979,2,c	;volatile
  1054                           
  1055                           ;nRF24L01_TX.h: 115: spi_write(0x20+0x1D);
  1056  007E60  0E3D               	movlw	61
  1057  007E62  EC44  F03D         	call	_spi_write
  1058                           
  1059                           ;nRF24L01_TX.h: 116: spi_write(0x06);
  1060  007E66  0E06               	movlw	6
  1061  007E68  EC44  F03D         	call	_spi_write
  1062                           
  1063                           ;nRF24L01_TX.h: 118: LATCbits.LATC2 = 1;
  1064  007E6C  848B               	bsf	3979,2,c	;volatile
  1065                           
  1066                           ;nRF24L01_TX.h: 120: LATCbits.LATC2 = 0;
  1067  007E6E  948B               	bcf	3979,2,c	;volatile
  1068                           
  1069                           ;nRF24L01_TX.h: 121: spi_write(0x20+0x1C);
  1070  007E70  0E3C               	movlw	60
  1071  007E72  EC44  F03D         	call	_spi_write
  1072                           
  1073                           ;nRF24L01_TX.h: 122: spi_write(0x01);
  1074  007E76  0E01               	movlw	1
  1075  007E78  EC44  F03D         	call	_spi_write
  1076                           
  1077                           ;nRF24L01_TX.h: 123: LATCbits.LATC2 = 1;
  1078  007E7C  848B               	bsf	3979,2,c	;volatile
  1079                           
  1080                           ;nRF24L01_TX.h: 125: LATCbits.LATC2 = 0;
  1081  007E7E  948B               	bcf	3979,2,c	;volatile
  1082                           
  1083                           ;nRF24L01_TX.h: 127: spi_write(0x20+0x10);
  1084  007E80  0E30               	movlw	48
  1085  007E82  EC44  F03D         	call	_spi_write
  1086                           
  1087                           ;nRF24L01_TX.h: 128: for (j = 0; j < 5; j++)
  1088  007E86  0E00               	movlw	0
  1089  007E88  6E04               	movwf	configure_TX@j,c
  1090  007E8A                     l937:
  1091  007E8A  0E04               	movlw	4
  1092  007E8C  6404               	cpfsgt	configure_TX@j,c
  1093  007E8E  D001               	goto	l941
  1094  007E90  D005               	goto	l108
  1095  007E92                     l941:
  1096                           
  1097                           ;nRF24L01_TX.h: 129: {
  1098                           ;nRF24L01_TX.h: 130: spi_write(0xE7);
  1099  007E92  0EE7               	movlw	231
  1100  007E94  EC44  F03D         	call	_spi_write
  1101  007E98  2A04               	incf	configure_TX@j,f,c
  1102  007E9A  D7F7               	goto	l937
  1103  007E9C                     l108:
  1104                           
  1105                           ;nRF24L01_TX.h: 131: }
  1106                           ;nRF24L01_TX.h: 132: LATCbits.LATC2 = 1;
  1107  007E9C  848B               	bsf	3979,2,c	;volatile
  1108                           
  1109                           ;nRF24L01_TX.h: 134: LATCbits.LATC2 = 0;
  1110  007E9E  948B               	bcf	3979,2,c	;volatile
  1111                           
  1112                           ;nRF24L01_TX.h: 136: spi_write(0x20+0x0A);
  1113  007EA0  0E2A               	movlw	42
  1114  007EA2  EC44  F03D         	call	_spi_write
  1115                           
  1116                           ;nRF24L01_TX.h: 137: for (j = 0; j < 5; j++)
  1117  007EA6  0E00               	movlw	0
  1118  007EA8  6E04               	movwf	configure_TX@j,c
  1119  007EAA                     l951:
  1120  007EAA  0E04               	movlw	4
  1121  007EAC  6404               	cpfsgt	configure_TX@j,c
  1122  007EAE  D001               	goto	l955
  1123  007EB0  D005               	goto	l110
  1124  007EB2                     l955:
  1125                           
  1126                           ;nRF24L01_TX.h: 138: spi_write(0xE7);
  1127  007EB2  0EE7               	movlw	231
  1128  007EB4  EC44  F03D         	call	_spi_write
  1129  007EB8  2A04               	incf	configure_TX@j,f,c
  1130  007EBA  D7F7               	goto	l951
  1131  007EBC                     l110:
  1132                           
  1133                           ;nRF24L01_TX.h: 139: LATCbits.LATC2 = 1;
  1134  007EBC  848B               	bsf	3979,2,c	;volatile
  1135                           
  1136                           ;nRF24L01_TX.h: 141: LATCbits.LATC2 = 0;
  1137  007EBE  948B               	bcf	3979,2,c	;volatile
  1138                           
  1139                           ;nRF24L01_TX.h: 142: spi_write(0xE2);
  1140  007EC0  0EE2               	movlw	226
  1141  007EC2  EC44  F03D         	call	_spi_write
  1142                           
  1143                           ;nRF24L01_TX.h: 143: LATCbits.LATC2 = 1;
  1144  007EC6  848B               	bsf	3979,2,c	;volatile
  1145                           
  1146                           ;nRF24L01_TX.h: 145: LATCbits.LATC2 = 0;
  1147  007EC8  948B               	bcf	3979,2,c	;volatile
  1148                           
  1149                           ;nRF24L01_TX.h: 146: spi_write(0xE1);
  1150  007ECA  0EE1               	movlw	225
  1151  007ECC  EC44  F03D         	call	_spi_write
  1152                           
  1153                           ;nRF24L01_TX.h: 147: LATCbits.LATC2 = 1;
  1154  007ED0  848B               	bsf	3979,2,c	;volatile
  1155  007ED2  0012               	return		;funcret
  1156  007ED4                     __end_of_configure_TX:
  1157                           	opt stack 0
  1158                           intcon	equ	0xFF2
  1159                           intcon2	equ	0xFF1
  1160                           intcon3	equ	0xFF0
  1161                           postinc0	equ	0xFEE
  1162                           wreg	equ	0xFE8
  1163                           status	equ	0xFD8
  1164                           
  1165 ;; *************** function _check_MAX_RT *****************
  1166 ;; Defined at:
  1167 ;;		line 216 in file "nRF24L01_TX.h"
  1168 ;; Parameters:    Size  Location     Type
  1169 ;;		None
  1170 ;; Auto vars:     Size  Location     Type
  1171 ;;  MAX_RT          1    2[COMRAM] unsigned char 
  1172 ;;  buffer          1    1[COMRAM] unsigned char 
  1173 ;; Return value:  Size  Location     Type
  1174 ;;                  1    wreg      unsigned char 
  1175 ;; Registers used:
  1176 ;;		wreg, status,2, status,0, cstack
  1177 ;; Tracked objects:
  1178 ;;		On entry : 0/0
  1179 ;;		On exit  : 0/0
  1180 ;;		Unchanged: 0/0
  1181 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1182 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1183 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1184 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1185 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1186 ;;Total ram usage:        2 bytes
  1187 ;; Hardware stack levels used:    1
  1188 ;; Hardware stack levels required when called:    1
  1189 ;; This function calls:
  1190 ;;		_spi_write
  1191 ;; This function is called by:
  1192 ;;		_main
  1193 ;; This function uses a non-reentrant model
  1194 ;;
  1195                           
  1196                           	psect	text7
  1197  007AEE                     __ptext7:
  1198                           	opt stack 0
  1199  007AEE                     _check_MAX_RT:
  1200                           	opt stack 29
  1201                           
  1202                           ;nRF24L01_TX.h: 219: unsigned char buffer = 0;
  1203                           
  1204                           ;incstack = 0
  1205  007AEE  0E00               	movlw	0
  1206  007AF0  6E02               	movwf	check_MAX_RT@buffer,c
  1207                           
  1208                           ;nRF24L01_TX.h: 220: unsigned char MAX_RT = 0;
  1209  007AF2  0E00               	movlw	0
  1210  007AF4  6E03               	movwf	check_MAX_RT@MAX_RT,c
  1211                           
  1212                           ;nRF24L01_TX.h: 222: LATCbits.LATC2 = 0;
  1213  007AF6  948B               	bcf	3979,2,c	;volatile
  1214                           
  1215                           ;nRF24L01_TX.h: 223: buffer = spi_write(0xFF);
  1216  007AF8  0EFF               	movlw	255
  1217  007AFA  EC44  F03D         	call	_spi_write
  1218  007AFE  6E02               	movwf	check_MAX_RT@buffer,c
  1219                           
  1220                           ;nRF24L01_TX.h: 224: LATCbits.LATC2 = 1;
  1221  007B00  848B               	bsf	3979,2,c	;volatile
  1222                           
  1223                           ;nRF24L01_TX.h: 226: MAX_RT = buffer & 0x10;
  1224  007B02  5002               	movf	check_MAX_RT@buffer,w,c
  1225  007B04  0B10               	andlw	16
  1226  007B06  6E03               	movwf	check_MAX_RT@MAX_RT,c
  1227                           
  1228                           ;nRF24L01_TX.h: 228: MAX_RT = MAX_RT >> 4;
  1229  007B08  3803               	swapf	check_MAX_RT@MAX_RT,w,c
  1230  007B0A  0B0F               	andlw	15
  1231  007B0C  6E03               	movwf	check_MAX_RT@MAX_RT,c
  1232                           
  1233                           ;nRF24L01_TX.h: 230: return MAX_RT;
  1234  007B0E  5003               	movf	check_MAX_RT@MAX_RT,w,c
  1235  007B10  0012               	return	
  1236  007B12                     __end_of_check_MAX_RT:
  1237                           	opt stack 0
  1238                           intcon	equ	0xFF2
  1239                           intcon2	equ	0xFF1
  1240                           intcon3	equ	0xFF0
  1241                           postinc0	equ	0xFEE
  1242                           wreg	equ	0xFE8
  1243                           status	equ	0xFD8
  1244                           
  1245 ;; *************** function _UART_Write *****************
  1246 ;; Defined at:
  1247 ;;		line 49 in file "uart1.h"
  1248 ;; Parameters:    Size  Location     Type
  1249 ;;  data            1    wreg     unsigned char 
  1250 ;; Auto vars:     Size  Location     Type
  1251 ;;  data            1    0[COMRAM] unsigned char 
  1252 ;; Return value:  Size  Location     Type
  1253 ;;                  1    wreg      void 
  1254 ;; Registers used:
  1255 ;;		wreg
  1256 ;; Tracked objects:
  1257 ;;		On entry : 0/0
  1258 ;;		On exit  : 0/0
  1259 ;;		Unchanged: 0/0
  1260 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1261 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1262 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1263 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1264 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1265 ;;Total ram usage:        1 bytes
  1266 ;; Hardware stack levels used:    1
  1267 ;; This function calls:
  1268 ;;		Nothing
  1269 ;; This function is called by:
  1270 ;;		_main
  1271 ;;		_UART_Write_Text
  1272 ;; This function uses a non-reentrant model
  1273 ;;
  1274                           
  1275                           	psect	text8
  1276  007A7C                     __ptext8:
  1277                           	opt stack 0
  1278  007A7C                     _UART_Write:
  1279                           	opt stack 30
  1280                           
  1281                           ;incstack = 0
  1282                           ;UART_Write@data stored from wreg
  1283  007A7C  6E01               	movwf	UART_Write@data,c
  1284  007A7E                     l86:
  1285  007A7E  A2AC               	btfss	4012,1,c	;volatile
  1286  007A80  D7FE               	goto	l86
  1287                           
  1288                           ;uart1.h: 52: TXREG1 = data;
  1289  007A82  C001  FFAD         	movff	UART_Write@data,4013	;volatile
  1290  007A86  0012               	return		;funcret
  1291  007A88                     __end_of_UART_Write:
  1292                           	opt stack 0
  1293                           intcon	equ	0xFF2
  1294                           intcon2	equ	0xFF1
  1295                           intcon3	equ	0xFF0
  1296                           postinc0	equ	0xFEE
  1297                           wreg	equ	0xFE8
  1298                           status	equ	0xFD8
  1299                           
  1300 ;; *************** function _UART_Read *****************
  1301 ;; Defined at:
  1302 ;;		line 36 in file "uart1.h"
  1303 ;; Parameters:    Size  Location     Type
  1304 ;;		None
  1305 ;; Auto vars:     Size  Location     Type
  1306 ;;		None
  1307 ;; Return value:  Size  Location     Type
  1308 ;;                  1    wreg      unsigned char 
  1309 ;; Registers used:
  1310 ;;		wreg, status,2
  1311 ;; Tracked objects:
  1312 ;;		On entry : 0/0
  1313 ;;		On exit  : 0/0
  1314 ;;		Unchanged: 0/0
  1315 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1316 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1317 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1318 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1319 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1320 ;;Total ram usage:        0 bytes
  1321 ;; Hardware stack levels used:    1
  1322 ;; This function calls:
  1323 ;;		Nothing
  1324 ;; This function is called by:
  1325 ;;		_main
  1326 ;;		_UART_Read_Text
  1327 ;; This function uses a non-reentrant model
  1328 ;;
  1329                           
  1330                           	psect	text9
  1331  007A74                     __ptext9:
  1332                           	opt stack 0
  1333  007A74                     _UART_Read:
  1334                           	opt stack 30
  1335  007A74                     l74:
  1336  007A74  AA9E               	btfss	3998,5,c	;volatile
  1337  007A76  D7FE               	goto	l74
  1338                           
  1339                           ;uart1.h: 39: return RCREG1;
  1340  007A78  50AE               	movf	4014,w,c	;volatile
  1341  007A7A  0012               	return	
  1342  007A7C                     __end_of_UART_Read:
  1343                           	opt stack 0
  1344                           intcon	equ	0xFF2
  1345                           intcon2	equ	0xFF1
  1346                           intcon3	equ	0xFF0
  1347                           postinc0	equ	0xFEE
  1348                           wreg	equ	0xFE8
  1349                           status	equ	0xFD8
  1350                           
  1351 ;; *************** function _UART_Init *****************
  1352 ;; Defined at:
  1353 ;;		line 3 in file "uart1.h"
  1354 ;; Parameters:    Size  Location     Type
  1355 ;;  baudrate        4   14[COMRAM] const long 
  1356 ;; Auto vars:     Size  Location     Type
  1357 ;;  x               2   26[COMRAM] unsigned int 
  1358 ;; Return value:  Size  Location     Type
  1359 ;;                  1    wreg      unsigned char 
  1360 ;; Registers used:
  1361 ;;		wreg, status,2, status,0, cstack
  1362 ;; Tracked objects:
  1363 ;;		On entry : 0/0
  1364 ;;		On exit  : 0/0
  1365 ;;		Unchanged: 0/0
  1366 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1367 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1368 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1369 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1370 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1371 ;;Total ram usage:       14 bytes
  1372 ;; Hardware stack levels used:    1
  1373 ;; Hardware stack levels required when called:    1
  1374 ;; This function calls:
  1375 ;;		___aldiv
  1376 ;; This function is called by:
  1377 ;;		_main
  1378 ;; This function uses a non-reentrant model
  1379 ;;
  1380                           
  1381                           	psect	text10
  1382  007ED4                     __ptext10:
  1383                           	opt stack 0
  1384  007ED4                     _UART_Init:
  1385                           	opt stack 29
  1386                           
  1387                           ;uart1.h: 5: unsigned int x;
  1388                           ;uart1.h: 6: x = (8000000 - baudrate*64)/(baudrate*64);
  1389                           
  1390                           ;incstack = 0
  1391  007ED4  C00F  F013         	movff	UART_Init@baudrate,??_UART_Init
  1392  007ED8  C010  F014         	movff	UART_Init@baudrate+1,??_UART_Init+1
  1393  007EDC  C011  F015         	movff	UART_Init@baudrate+2,??_UART_Init+2
  1394  007EE0  C012  F016         	movff	UART_Init@baudrate+3,??_UART_Init+3
  1395  007EE4  0E06               	movlw	6
  1396  007EE6                     u355:
  1397  007EE6  90D8               	bcf	status,0,c
  1398  007EE8  3613               	rlcf	??_UART_Init,f,c
  1399  007EEA  3614               	rlcf	??_UART_Init+1,f,c
  1400  007EEC  3615               	rlcf	??_UART_Init+2,f,c
  1401  007EEE  3616               	rlcf	??_UART_Init+3,f,c
  1402  007EF0  2EE8               	decfsz	wreg,f,c
  1403  007EF2  D7F9               	goto	u355
  1404  007EF4  1E13               	comf	??_UART_Init,f,c
  1405  007EF6  1E14               	comf	??_UART_Init+1,f,c
  1406  007EF8  1E15               	comf	??_UART_Init+2,f,c
  1407  007EFA  1E16               	comf	??_UART_Init+3,f,c
  1408  007EFC  2A13               	incf	??_UART_Init,f,c
  1409  007EFE  0E00               	movlw	0
  1410  007F00  2214               	addwfc	??_UART_Init+1,f,c
  1411  007F02  2215               	addwfc	??_UART_Init+2,f,c
  1412  007F04  2216               	addwfc	??_UART_Init+3,f,c
  1413  007F06  0E00               	movlw	0
  1414  007F08  2413               	addwf	??_UART_Init,w,c
  1415  007F0A  6E01               	movwf	___aldiv@dividend,c
  1416  007F0C  0E12               	movlw	18
  1417  007F0E  2014               	addwfc	??_UART_Init+1,w,c
  1418  007F10  6E02               	movwf	___aldiv@dividend+1,c
  1419  007F12  0E7A               	movlw	122
  1420  007F14  2015               	addwfc	??_UART_Init+2,w,c
  1421  007F16  6E03               	movwf	___aldiv@dividend+2,c
  1422  007F18  0E00               	movlw	0
  1423  007F1A  2016               	addwfc	??_UART_Init+3,w,c
  1424  007F1C  6E04               	movwf	___aldiv@dividend+3,c
  1425  007F1E  C00F  F017         	movff	UART_Init@baudrate,??_UART_Init+4
  1426  007F22  C010  F018         	movff	UART_Init@baudrate+1,??_UART_Init+5
  1427  007F26  C011  F019         	movff	UART_Init@baudrate+2,??_UART_Init+6
  1428  007F2A  C012  F01A         	movff	UART_Init@baudrate+3,??_UART_Init+7
  1429  007F2E  0E06               	movlw	6
  1430  007F30                     u365:
  1431  007F30  90D8               	bcf	status,0,c
  1432  007F32  3617               	rlcf	??_UART_Init+4,f,c
  1433  007F34  3618               	rlcf	??_UART_Init+5,f,c
  1434  007F36  3619               	rlcf	??_UART_Init+6,f,c
  1435  007F38  361A               	rlcf	??_UART_Init+7,f,c
  1436  007F3A  2EE8               	decfsz	wreg,f,c
  1437  007F3C  D7F9               	goto	u365
  1438  007F3E  C017  F005         	movff	??_UART_Init+4,___aldiv@divisor
  1439  007F42  C018  F006         	movff	??_UART_Init+5,___aldiv@divisor+1
  1440  007F46  C019  F007         	movff	??_UART_Init+6,___aldiv@divisor+2
  1441  007F4A  C01A  F008         	movff	??_UART_Init+7,___aldiv@divisor+3
  1442  007F4E  ECFE  F03D         	call	___aldiv	;wreg free
  1443  007F52  C001  F01B         	movff	?___aldiv,UART_Init@x
  1444  007F56  C002  F01C         	movff	?___aldiv+1,UART_Init@x+1
  1445                           
  1446                           ;uart1.h: 7: if(x>255)
  1447  007F5A  041C               	decf	UART_Init@x+1,w,c
  1448  007F5C  A0D8               	btfss	status,0,c
  1449  007F5E  D044               	goto	l1191
  1450                           
  1451                           ;uart1.h: 8: {
  1452                           ;uart1.h: 9: x = (8000000 - baudrate*16)/(baudrate*16);
  1453  007F60  C00F  F013         	movff	UART_Init@baudrate,??_UART_Init
  1454  007F64  C010  F014         	movff	UART_Init@baudrate+1,??_UART_Init+1
  1455  007F68  C011  F015         	movff	UART_Init@baudrate+2,??_UART_Init+2
  1456  007F6C  C012  F016         	movff	UART_Init@baudrate+3,??_UART_Init+3
  1457  007F70  0E04               	movlw	4
  1458  007F72                     u385:
  1459  007F72  90D8               	bcf	status,0,c
  1460  007F74  3613               	rlcf	??_UART_Init,f,c
  1461  007F76  3614               	rlcf	??_UART_Init+1,f,c
  1462  007F78  3615               	rlcf	??_UART_Init+2,f,c
  1463  007F7A  3616               	rlcf	??_UART_Init+3,f,c
  1464  007F7C  2EE8               	decfsz	wreg,f,c
  1465  007F7E  D7F9               	goto	u385
  1466  007F80  1E13               	comf	??_UART_Init,f,c
  1467  007F82  1E14               	comf	??_UART_Init+1,f,c
  1468  007F84  1E15               	comf	??_UART_Init+2,f,c
  1469  007F86  1E16               	comf	??_UART_Init+3,f,c
  1470  007F88  2A13               	incf	??_UART_Init,f,c
  1471  007F8A  0E00               	movlw	0
  1472  007F8C  2214               	addwfc	??_UART_Init+1,f,c
  1473  007F8E  2215               	addwfc	??_UART_Init+2,f,c
  1474  007F90  2216               	addwfc	??_UART_Init+3,f,c
  1475  007F92  0E00               	movlw	0
  1476  007F94  2413               	addwf	??_UART_Init,w,c
  1477  007F96  6E01               	movwf	___aldiv@dividend,c
  1478  007F98  0E12               	movlw	18
  1479  007F9A  2014               	addwfc	??_UART_Init+1,w,c
  1480  007F9C  6E02               	movwf	___aldiv@dividend+1,c
  1481  007F9E  0E7A               	movlw	122
  1482  007FA0  2015               	addwfc	??_UART_Init+2,w,c
  1483  007FA2  6E03               	movwf	___aldiv@dividend+2,c
  1484  007FA4  0E00               	movlw	0
  1485  007FA6  2016               	addwfc	??_UART_Init+3,w,c
  1486  007FA8  6E04               	movwf	___aldiv@dividend+3,c
  1487  007FAA  C00F  F017         	movff	UART_Init@baudrate,??_UART_Init+4
  1488  007FAE  C010  F018         	movff	UART_Init@baudrate+1,??_UART_Init+5
  1489  007FB2  C011  F019         	movff	UART_Init@baudrate+2,??_UART_Init+6
  1490  007FB6  C012  F01A         	movff	UART_Init@baudrate+3,??_UART_Init+7
  1491  007FBA  0E04               	movlw	4
  1492  007FBC                     u395:
  1493  007FBC  90D8               	bcf	status,0,c
  1494  007FBE  3617               	rlcf	??_UART_Init+4,f,c
  1495  007FC0  3618               	rlcf	??_UART_Init+5,f,c
  1496  007FC2  3619               	rlcf	??_UART_Init+6,f,c
  1497  007FC4  361A               	rlcf	??_UART_Init+7,f,c
  1498  007FC6  2EE8               	decfsz	wreg,f,c
  1499  007FC8  D7F9               	goto	u395
  1500  007FCA  C017  F005         	movff	??_UART_Init+4,___aldiv@divisor
  1501  007FCE  C018  F006         	movff	??_UART_Init+5,___aldiv@divisor+1
  1502  007FD2  C019  F007         	movff	??_UART_Init+6,___aldiv@divisor+2
  1503  007FD6  C01A  F008         	movff	??_UART_Init+7,___aldiv@divisor+3
  1504  007FDA  ECFE  F03D         	call	___aldiv	;wreg free
  1505  007FDE  C001  F01B         	movff	?___aldiv,UART_Init@x
  1506  007FE2  C002  F01C         	movff	?___aldiv+1,UART_Init@x+1
  1507                           
  1508                           ;uart1.h: 10: TXSTA1bits.BRGH = 1;
  1509  007FE6  84AC               	bsf	4012,2,c	;volatile
  1510  007FE8                     l1191:
  1511                           
  1512                           ;uart1.h: 11: }
  1513                           ;uart1.h: 12: if(x<256)
  1514  007FE8  041C               	decf	UART_Init@x+1,w,c
  1515  007FEA  B0D8               	btfsc	status,0,c
  1516  007FEC  0012               	return	
  1517                           
  1518                           ;uart1.h: 13: {
  1519                           ;uart1.h: 14: SPBRG1 = x;
  1520  007FEE  C01B  FFAF         	movff	UART_Init@x,4015	;volatile
  1521                           
  1522                           ;uart1.h: 15: TXSTA1bits.SYNC = 0;
  1523  007FF2  98AC               	bcf	4012,4,c	;volatile
  1524                           
  1525                           ;uart1.h: 16: RCSTA1bits.SPEN = 1;
  1526  007FF4  8EAB               	bsf	4011,7,c	;volatile
  1527                           
  1528                           ;uart1.h: 17: TRISCbits.TRISC7 = 1;
  1529  007FF6  8E94               	bsf	3988,7,c	;volatile
  1530                           
  1531                           ;uart1.h: 18: TRISCbits.TRISC6 = 0;
  1532  007FF8  9C94               	bcf	3988,6,c	;volatile
  1533                           
  1534                           ;uart1.h: 19: RCSTA1bits.CREN = 1;
  1535  007FFA  88AB               	bsf	4011,4,c	;volatile
  1536                           
  1537                           ;uart1.h: 20: TXSTA1bits.TXEN = 1;
  1538  007FFC  8AAC               	bsf	4012,5,c	;volatile
  1539                           
  1540                           ;uart1.h: 21: return 1;
  1541                           ;	Return value of _UART_Init is never used
  1542  007FFE  0012               	return	
  1543  008000                     __end_of_UART_Init:
  1544                           	opt stack 0
  1545                           intcon	equ	0xFF2
  1546                           intcon2	equ	0xFF1
  1547                           intcon3	equ	0xFF0
  1548                           postinc0	equ	0xFEE
  1549                           wreg	equ	0xFE8
  1550                           status	equ	0xFD8
  1551                           
  1552 ;; *************** function ___aldiv *****************
  1553 ;; Defined at:
  1554 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\aldiv.c"
  1555 ;; Parameters:    Size  Location     Type
  1556 ;;  dividend        4    0[COMRAM] long 
  1557 ;;  divisor         4    4[COMRAM] long 
  1558 ;; Auto vars:     Size  Location     Type
  1559 ;;  quotient        4   10[COMRAM] long 
  1560 ;;  sign            1    9[COMRAM] unsigned char 
  1561 ;;  counter         1    8[COMRAM] unsigned char 
  1562 ;; Return value:  Size  Location     Type
  1563 ;;                  4    0[COMRAM] long 
  1564 ;; Registers used:
  1565 ;;		wreg, status,2, status,0
  1566 ;; Tracked objects:
  1567 ;;		On entry : 0/0
  1568 ;;		On exit  : 0/0
  1569 ;;		Unchanged: 0/0
  1570 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1571 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1572 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1573 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1574 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1575 ;;Total ram usage:       14 bytes
  1576 ;; Hardware stack levels used:    1
  1577 ;; This function calls:
  1578 ;;		Nothing
  1579 ;; This function is called by:
  1580 ;;		_UART_Init
  1581 ;; This function uses a non-reentrant model
  1582 ;;
  1583                           
  1584                           	psect	text11
  1585  007BFC                     __ptext11:
  1586                           	opt stack 0
  1587  007BFC                     ___aldiv:
  1588                           	opt stack 29
  1589                           
  1590                           ;incstack = 0
  1591  007BFC  0E00               	movlw	0
  1592  007BFE  6E0A               	movwf	___aldiv@sign,c
  1593  007C00  AE08               	btfss	___aldiv@divisor+3,7,c
  1594  007C02  D00A               	goto	l1147
  1595  007C04  1E08               	comf	___aldiv@divisor+3,f,c
  1596  007C06  1E07               	comf	___aldiv@divisor+2,f,c
  1597  007C08  1E06               	comf	___aldiv@divisor+1,f,c
  1598  007C0A  6C05               	negf	___aldiv@divisor,c
  1599  007C0C  0E00               	movlw	0
  1600  007C0E  2206               	addwfc	___aldiv@divisor+1,f,c
  1601  007C10  2207               	addwfc	___aldiv@divisor+2,f,c
  1602  007C12  2208               	addwfc	___aldiv@divisor+3,f,c
  1603  007C14  0E01               	movlw	1
  1604  007C16  6E0A               	movwf	___aldiv@sign,c
  1605  007C18                     l1147:
  1606  007C18  AE04               	btfss	___aldiv@dividend+3,7,c
  1607  007C1A  D00A               	goto	l1153
  1608  007C1C  1E04               	comf	___aldiv@dividend+3,f,c
  1609  007C1E  1E03               	comf	___aldiv@dividend+2,f,c
  1610  007C20  1E02               	comf	___aldiv@dividend+1,f,c
  1611  007C22  6C01               	negf	___aldiv@dividend,c
  1612  007C24  0E00               	movlw	0
  1613  007C26  2202               	addwfc	___aldiv@dividend+1,f,c
  1614  007C28  2203               	addwfc	___aldiv@dividend+2,f,c
  1615  007C2A  2204               	addwfc	___aldiv@dividend+3,f,c
  1616  007C2C  0E01               	movlw	1
  1617  007C2E  1A0A               	xorwf	___aldiv@sign,f,c
  1618  007C30                     l1153:
  1619  007C30  0E00               	movlw	0
  1620  007C32  6E0B               	movwf	___aldiv@quotient,c
  1621  007C34  0E00               	movlw	0
  1622  007C36  6E0C               	movwf	___aldiv@quotient+1,c
  1623  007C38  0E00               	movlw	0
  1624  007C3A  6E0D               	movwf	___aldiv@quotient+2,c
  1625  007C3C  0E00               	movlw	0
  1626  007C3E  6E0E               	movwf	___aldiv@quotient+3,c
  1627  007C40  5005               	movf	___aldiv@divisor,w,c
  1628  007C42  1006               	iorwf	___aldiv@divisor+1,w,c
  1629  007C44  1007               	iorwf	___aldiv@divisor+2,w,c
  1630  007C46  1008               	iorwf	___aldiv@divisor+3,w,c
  1631  007C48  B4D8               	btfsc	status,2,c
  1632  007C4A  D02A               	goto	l1175
  1633  007C4C  0E01               	movlw	1
  1634  007C4E  6E09               	movwf	___aldiv@counter,c
  1635  007C50  D006               	goto	l1161
  1636  007C52                     l1159:
  1637  007C52  90D8               	bcf	status,0,c
  1638  007C54  3605               	rlcf	___aldiv@divisor,f,c
  1639  007C56  3606               	rlcf	___aldiv@divisor+1,f,c
  1640  007C58  3607               	rlcf	___aldiv@divisor+2,f,c
  1641  007C5A  3608               	rlcf	___aldiv@divisor+3,f,c
  1642  007C5C  2A09               	incf	___aldiv@counter,f,c
  1643  007C5E                     l1161:
  1644  007C5E  AE08               	btfss	___aldiv@divisor+3,7,c
  1645  007C60  D7F8               	goto	l1159
  1646  007C62                     l1163:
  1647  007C62  90D8               	bcf	status,0,c
  1648  007C64  360B               	rlcf	___aldiv@quotient,f,c
  1649  007C66  360C               	rlcf	___aldiv@quotient+1,f,c
  1650  007C68  360D               	rlcf	___aldiv@quotient+2,f,c
  1651  007C6A  360E               	rlcf	___aldiv@quotient+3,f,c
  1652  007C6C  5005               	movf	___aldiv@divisor,w,c
  1653  007C6E  5C01               	subwf	___aldiv@dividend,w,c
  1654  007C70  5006               	movf	___aldiv@divisor+1,w,c
  1655  007C72  5802               	subwfb	___aldiv@dividend+1,w,c
  1656  007C74  5007               	movf	___aldiv@divisor+2,w,c
  1657  007C76  5803               	subwfb	___aldiv@dividend+2,w,c
  1658  007C78  5008               	movf	___aldiv@divisor+3,w,c
  1659  007C7A  5804               	subwfb	___aldiv@dividend+3,w,c
  1660  007C7C  A0D8               	btfss	status,0,c
  1661  007C7E  D009               	goto	l1171
  1662  007C80  5005               	movf	___aldiv@divisor,w,c
  1663  007C82  5E01               	subwf	___aldiv@dividend,f,c
  1664  007C84  5006               	movf	___aldiv@divisor+1,w,c
  1665  007C86  5A02               	subwfb	___aldiv@dividend+1,f,c
  1666  007C88  5007               	movf	___aldiv@divisor+2,w,c
  1667  007C8A  5A03               	subwfb	___aldiv@dividend+2,f,c
  1668  007C8C  5008               	movf	___aldiv@divisor+3,w,c
  1669  007C8E  5A04               	subwfb	___aldiv@dividend+3,f,c
  1670  007C90  800B               	bsf	___aldiv@quotient,0,c
  1671  007C92                     l1171:
  1672  007C92  90D8               	bcf	status,0,c
  1673  007C94  3208               	rrcf	___aldiv@divisor+3,f,c
  1674  007C96  3207               	rrcf	___aldiv@divisor+2,f,c
  1675  007C98  3206               	rrcf	___aldiv@divisor+1,f,c
  1676  007C9A  3205               	rrcf	___aldiv@divisor,f,c
  1677  007C9C  2E09               	decfsz	___aldiv@counter,f,c
  1678  007C9E  D7E1               	goto	l1163
  1679  007CA0                     l1175:
  1680  007CA0  500A               	movf	___aldiv@sign,w,c
  1681  007CA2  B4D8               	btfsc	status,2,c
  1682  007CA4  D008               	goto	l1179
  1683  007CA6  1E0E               	comf	___aldiv@quotient+3,f,c
  1684  007CA8  1E0D               	comf	___aldiv@quotient+2,f,c
  1685  007CAA  1E0C               	comf	___aldiv@quotient+1,f,c
  1686  007CAC  6C0B               	negf	___aldiv@quotient,c
  1687  007CAE  0E00               	movlw	0
  1688  007CB0  220C               	addwfc	___aldiv@quotient+1,f,c
  1689  007CB2  220D               	addwfc	___aldiv@quotient+2,f,c
  1690  007CB4  220E               	addwfc	___aldiv@quotient+3,f,c
  1691  007CB6                     l1179:
  1692  007CB6  C00B  F001         	movff	___aldiv@quotient,?___aldiv
  1693  007CBA  C00C  F002         	movff	___aldiv@quotient+1,?___aldiv+1
  1694  007CBE  C00D  F003         	movff	___aldiv@quotient+2,?___aldiv+2
  1695  007CC2  C00E  F004         	movff	___aldiv@quotient+3,?___aldiv+3
  1696  007CC6  0012               	return	
  1697  007CC8                     __end_of___aldiv:
  1698                           	opt stack 0
  1699                           intcon	equ	0xFF2
  1700                           intcon2	equ	0xFF1
  1701                           intcon3	equ	0xFF0
  1702                           postinc0	equ	0xFEE
  1703                           wreg	equ	0xFE8
  1704                           status	equ	0xFD8
  1705                           
  1706 ;; *************** function _UART_Data_Ready *****************
  1707 ;; Defined at:
  1708 ;;		line 31 in file "uart1.h"
  1709 ;; Parameters:    Size  Location     Type
  1710 ;;		None
  1711 ;; Auto vars:     Size  Location     Type
  1712 ;;		None
  1713 ;; Return value:  Size  Location     Type
  1714 ;;                  1    wreg      unsigned char 
  1715 ;; Registers used:
  1716 ;;		wreg
  1717 ;; Tracked objects:
  1718 ;;		On entry : 0/0
  1719 ;;		On exit  : 0/0
  1720 ;;		Unchanged: 0/0
  1721 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1722 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1723 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1724 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1725 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1726 ;;Total ram usage:        0 bytes
  1727 ;; Hardware stack levels used:    1
  1728 ;; This function calls:
  1729 ;;		Nothing
  1730 ;; This function is called by:
  1731 ;;		_main
  1732 ;; This function uses a non-reentrant model
  1733 ;;
  1734                           
  1735                           	psect	text12
  1736  007A6C                     __ptext12:
  1737                           	opt stack 0
  1738  007A6C                     _UART_Data_Ready:
  1739                           	opt stack 30
  1740                           
  1741                           ;uart1.h: 33: return RC1IF;
  1742                           
  1743                           ;incstack = 0
  1744  007A6C  0E00               	movlw	0
  1745  007A6E  BA9E               	btfsc	3998,5,c	;volatile
  1746  007A70  0E01               	movlw	1
  1747  007A72  0012               	return	
  1748  007A74                     __end_of_UART_Data_Ready:
  1749                           	opt stack 0
  1750                           intcon	equ	0xFF2
  1751                           intcon2	equ	0xFF1
  1752                           intcon3	equ	0xFF0
  1753                           postinc0	equ	0xFEE
  1754                           wreg	equ	0xFE8
  1755                           status	equ	0xFD8
  1756                           
  1757 ;; *************** function _TX_nordic *****************
  1758 ;; Defined at:
  1759 ;;		line 154 in file "nRF24L01_TX.h"
  1760 ;; Parameters:    Size  Location     Type
  1761 ;;  data            1    wreg     unsigned char 
  1762 ;; Auto vars:     Size  Location     Type
  1763 ;;  data            1    2[COMRAM] unsigned char 
  1764 ;; Return value:  Size  Location     Type
  1765 ;;                  1    wreg      void 
  1766 ;; Registers used:
  1767 ;;		wreg, status,2, cstack
  1768 ;; Tracked objects:
  1769 ;;		On entry : 0/0
  1770 ;;		On exit  : 0/0
  1771 ;;		Unchanged: 0/0
  1772 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1773 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1774 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1775 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1776 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1777 ;;Total ram usage:        2 bytes
  1778 ;; Hardware stack levels used:    1
  1779 ;; Hardware stack levels required when called:    1
  1780 ;; This function calls:
  1781 ;;		_spi_write
  1782 ;; This function is called by:
  1783 ;;		_main
  1784 ;; This function uses a non-reentrant model
  1785 ;;
  1786                           
  1787                           	psect	text13
  1788  007B40                     __ptext13:
  1789                           	opt stack 0
  1790  007B40                     _TX_nordic:
  1791                           	opt stack 29
  1792                           
  1793                           ;incstack = 0
  1794                           ;TX_nordic@data stored from wreg
  1795  007B40  6E03               	movwf	TX_nordic@data,c
  1796                           
  1797                           ;nRF24L01_TX.h: 156: LATCbits.LATC2 = 0;
  1798  007B42  948B               	bcf	3979,2,c	;volatile
  1799                           
  1800                           ;nRF24L01_TX.h: 157: spi_write(0x20+0x07);
  1801  007B44  0E27               	movlw	39
  1802  007B46  EC44  F03D         	call	_spi_write
  1803                           
  1804                           ;nRF24L01_TX.h: 158: spi_write(0x60);
  1805  007B4A  0E60               	movlw	96
  1806  007B4C  EC44  F03D         	call	_spi_write
  1807                           
  1808                           ;nRF24L01_TX.h: 159: LATCbits.LATC2 = 1;
  1809  007B50  848B               	bsf	3979,2,c	;volatile
  1810                           
  1811                           ;nRF24L01_TX.h: 161: LATCbits.LATC2 = 0;
  1812  007B52  948B               	bcf	3979,2,c	;volatile
  1813                           
  1814                           ;nRF24L01_TX.h: 162: spi_write(0x20+0x00);
  1815  007B54  0E20               	movlw	32
  1816  007B56  EC44  F03D         	call	_spi_write
  1817                           
  1818                           ;nRF24L01_TX.h: 163: spi_write(0b00011010);
  1819  007B5A  0E1A               	movlw	26
  1820  007B5C  EC44  F03D         	call	_spi_write
  1821                           
  1822                           ;nRF24L01_TX.h: 171: LATCbits.LATC2 = 1;
  1823  007B60  848B               	bsf	3979,2,c	;volatile
  1824                           
  1825                           ;nRF24L01_TX.h: 174: _delay((unsigned long)((5)*(8000000/4000.0)));
  1826  007B62  0E0D               	movlw	13
  1827  007B64  6E02               	movwf	??_TX_nordic& (0+255),c
  1828  007B66  0EFC               	movlw	252
  1829  007B68                     u587:
  1830  007B68  2EE8               	decfsz	wreg,f,c
  1831  007B6A  D7FE               	bra	u587
  1832  007B6C  2E02               	decfsz	??_TX_nordic& (0+255),f,c
  1833  007B6E  D7FC               	bra	u587
  1834                           
  1835                           ;nRF24L01_TX.h: 178: LATCbits.LATC2 = 0;
  1836  007B70  948B               	bcf	3979,2,c	;volatile
  1837                           
  1838                           ;nRF24L01_TX.h: 179: spi_write(0xE1);
  1839  007B72  0EE1               	movlw	225
  1840  007B74  EC44  F03D         	call	_spi_write
  1841                           
  1842                           ;nRF24L01_TX.h: 180: LATCbits.LATC2 = 1;
  1843  007B78  848B               	bsf	3979,2,c	;volatile
  1844                           
  1845                           ;nRF24L01_TX.h: 182: LATCbits.LATC2 = 0;
  1846  007B7A  948B               	bcf	3979,2,c	;volatile
  1847                           
  1848                           ;nRF24L01_TX.h: 184: spi_write(0xA0);
  1849  007B7C  0EA0               	movlw	160
  1850  007B7E  EC44  F03D         	call	_spi_write
  1851                           
  1852                           ;nRF24L01_TX.h: 185: spi_write(data);
  1853  007B82  5003               	movf	TX_nordic@data,w,c
  1854  007B84  EC44  F03D         	call	_spi_write
  1855                           
  1856                           ;nRF24L01_TX.h: 186: LATCbits.LATC2 = 1;
  1857  007B88  848B               	bsf	3979,2,c	;volatile
  1858                           
  1859                           ;nRF24L01_TX.h: 191: LATAbits.LATA3 = 1;
  1860  007B8A  8689               	bsf	3977,3,c	;volatile
  1861                           
  1862                           ;nRF24L01_TX.h: 192: _delay((unsigned long)((1)*(8000000/4000.0)));
  1863  007B8C  0E03               	movlw	3
  1864  007B8E  6E02               	movwf	??_TX_nordic& (0+255),c
  1865  007B90  0E98               	movlw	152
  1866  007B92                     u597:
  1867  007B92  2EE8               	decfsz	wreg,f,c
  1868  007B94  D7FE               	bra	u597
  1869  007B96  2E02               	decfsz	??_TX_nordic& (0+255),f,c
  1870  007B98  D7FC               	bra	u597
  1871                           
  1872                           ;nRF24L01_TX.h: 193: LATAbits.LATA3 = 0;
  1873  007B9A  9689               	bcf	3977,3,c	;volatile
  1874  007B9C  0012               	return		;funcret
  1875  007B9E                     __end_of_TX_nordic:
  1876                           	opt stack 0
  1877                           intcon	equ	0xFF2
  1878                           intcon2	equ	0xFF1
  1879                           intcon3	equ	0xFF0
  1880                           postinc0	equ	0xFEE
  1881                           wreg	equ	0xFE8
  1882                           status	equ	0xFD8
  1883                           
  1884 ;; *************** function _spi_write *****************
  1885 ;; Defined at:
  1886 ;;		line 45 in file "spi.h"
  1887 ;; Parameters:    Size  Location     Type
  1888 ;;  data            1    wreg     unsigned char 
  1889 ;; Auto vars:     Size  Location     Type
  1890 ;;  data            1    0[COMRAM] unsigned char 
  1891 ;; Return value:  Size  Location     Type
  1892 ;;                  1    wreg      unsigned char 
  1893 ;; Registers used:
  1894 ;;		wreg, status,2
  1895 ;; Tracked objects:
  1896 ;;		On entry : 0/0
  1897 ;;		On exit  : 0/0
  1898 ;;		Unchanged: 0/0
  1899 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1900 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1901 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1902 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1903 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1904 ;;Total ram usage:        1 bytes
  1905 ;; Hardware stack levels used:    1
  1906 ;; This function calls:
  1907 ;;		Nothing
  1908 ;; This function is called by:
  1909 ;;		_configure_TX
  1910 ;;		_TX_nordic
  1911 ;;		_read_ACK_payload
  1912 ;;		_check_MAX_RT
  1913 ;;		_reset_MAX_RT
  1914 ;;		_flush
  1915 ;;		_count_retr
  1916 ;; This function uses a non-reentrant model
  1917 ;;
  1918                           
  1919                           	psect	text14
  1920  007A88                     __ptext14:
  1921                           	opt stack 0
  1922  007A88                     _spi_write:
  1923                           	opt stack 29
  1924                           
  1925                           ;incstack = 0
  1926                           ;spi_write@data stored from wreg
  1927  007A88  6E01               	movwf	spi_write@data,c
  1928                           
  1929                           ;spi.h: 46: SSPSTATbits.BF = 0;
  1930  007A8A  90C7               	bcf	4039,0,c	;volatile
  1931                           
  1932                           ;spi.h: 47: SSPBUF = data;
  1933  007A8C  C001  FFC9         	movff	spi_write@data,4041	;volatile
  1934  007A90                     l101:
  1935  007A90  A0C7               	btfss	4039,0,c	;volatile
  1936  007A92  D7FE               	goto	l101
  1937                           
  1938                           ;spi.h: 49: return SSPBUF;
  1939  007A94  50C9               	movf	4041,w,c	;volatile
  1940  007A96  0012               	return		;funcret
  1941  007A98                     __end_of_spi_write:
  1942                           	opt stack 0
  1943  0000                     intcon	equ	0xFF2
  1944                           intcon2	equ	0xFF1
  1945                           intcon3	equ	0xFF0
  1946                           postinc0	equ	0xFEE
  1947                           wreg	equ	0xFE8
  1948                           status	equ	0xFD8
  1949                           intcon	equ	0xFF2
  1950                           intcon2	equ	0xFF1
  1951                           intcon3	equ	0xFF0
  1952                           postinc0	equ	0xFEE
  1953                           wreg	equ	0xFE8
  1954                           status	equ	0xFD8
  1955                           
  1956                           	psect	rparam
  1957  0000                     intcon	equ	0xFF2
  1958                           intcon2	equ	0xFF1
  1959                           intcon3	equ	0xFF0
  1960                           postinc0	equ	0xFEE
  1961                           wreg	equ	0xFE8
  1962                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         13
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     30      43
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14           65      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_UART_Init
    _reset_MAX_RT->_spi_write
    _read_ACK_payload->_spi_write
    _flush->_spi_write
    _configure_TX->_spi_write
    _check_MAX_RT->_spi_write
    _UART_Init->___aldiv
    _TX_nordic->_spi_write

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    1076
                                             28 COMRAM     2     2      0
                          _TX_nordic
                    _UART_Data_Ready
                          _UART_Init
                          _UART_Read
                         _UART_Write
                       _check_MAX_RT
                       _configure_TX
                              _flush
                            _initPIC
                    _init_spi_master
                   _read_ACK_payload
                       _reset_MAX_RT
 ---------------------------------------------------------------------------------
 (1) _reset_MAX_RT                                         0     0      0      15
                          _spi_write
 ---------------------------------------------------------------------------------
 (1) _read_ACK_payload                                     2     2      0      30
                                              1 COMRAM     2     2      0
                          _spi_write
 ---------------------------------------------------------------------------------
 (1) _init_spi_master                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initPIC                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _flush                                                0     0      0      15
                          _spi_write
 ---------------------------------------------------------------------------------
 (1) _configure_TX                                         3     3      0      75
                                              1 COMRAM     3     3      0
                          _spi_write
 ---------------------------------------------------------------------------------
 (1) _check_MAX_RT                                         2     2      0      60
                                              1 COMRAM     2     2      0
                          _spi_write
 ---------------------------------------------------------------------------------
 (1) _UART_Write                                           1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _UART_Read                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _UART_Init                                           14    10      4     836
                                             14 COMRAM    14    10      4
                            ___aldiv
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             14     6      8     604
                                              0 COMRAM    14     6      8
 ---------------------------------------------------------------------------------
 (1) _UART_Data_Ready                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TX_nordic                                            2     2      0      30
                                              1 COMRAM     2     2      0
                          _spi_write
 ---------------------------------------------------------------------------------
 (2) _spi_write                                            1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _TX_nordic
     _spi_write
   _UART_Data_Ready
   _UART_Init
     ___aldiv
   _UART_Read
   _UART_Write
   _check_MAX_RT
     _spi_write
   _configure_TX
     _spi_write
   _flush
     _spi_write
   _initPIC
   _init_spi_master
   _read_ACK_payload
     _spi_write
   _reset_MAX_RT
     _spi_write

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             E40      0       0      35        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0       0       8        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     1E      2B       1       45.3%
BITBANK14           41      0       0      33        0.0%
BANK14              41      0       0      34        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      2B       6        0.0%
DATA                 0      0      2B       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.42 build -159332390 
Symbol Table                                                                                   Wed Dec 13 11:08:44 2017

              ?_configure_TX 0001                  _SSPSTATbits 000FC7                           l74 7A74  
                         l86 7A7E                  __CFG_BORV$3 000000                 __CFG_CP0$OFF 000000  
               __CFG_CP1$OFF 000000                 __CFG_CP2$OFF 000000                 __CFG_CP3$OFF 000000  
                        l101 7A90                          l110 7EBC                          l108 7E9C  
                        l941 7E92                          l951 7EAA                          l937 7E8A  
                        l955 7EB2                 __CFG_CPB$OFF 000000                          u410 7D24  
               __CFG_CPD$OFF 000000                          u355 7EE6                          u507 7D12  
                        u460 7D94                          u428 7D26                          u365 7F30  
                        u517 7D36                          u527 7D5C                          u385 7F72  
                        u537 7D70                          u395 7FBC                          u547 7DAE  
                        u557 7B18                          u478 7D96                          u567 7DD0  
                        u487 7CD2                          u577 7DE6                          u497 7D00  
                        u587 7B68                          u597 7B92                          wreg 000FE8  
                 _TXSTA1bits 000FAC                         l1161 7C5E                         l1153 7C30  
                       l1209 7D1A                         l1171 7C92                         l1163 7C62  
                       l1147 7C18                         l1227 7D7A                         l1219 7D64  
                       l1159 7C52                         l1175 7CA0                         l1191 7FE8  
                       l1179 7CB6                         _FPGA 0028                         _PIR1 000F9E  
                       _RCON 000FD0                         _WPUB 000F5B                         _buff 001F  
                       _main 7CC8                         start 0000                __CFG_IESO$OFF 000000  
              __CFG_FOSC$HS1 000000                __CFG_MCLRE$ON 000000                 ___param_bank 000000  
             ??_configure_TX 0002            ?_read_ACK_payload 0001           ??_read_ACK_payload 0002  
          ??_init_spi_master 0001              __end_of___aldiv 7CC8                        ?_main 0001  
                      _RC1IF 007CF5                        _PORTA 000F80                        _PORTB 000F81  
                      _PORTC 000F82                        _TRISA 000F92                        _TRISB 000F93  
                      _TRISC 000F94                __CFG_WRT0$OFF 000000                __CFG_WRT1$OFF 000000  
              __CFG_WRT2$OFF 000000                __CFG_WRT3$OFF 000000               __CFG_EBTR0$OFF 000000  
             __CFG_FCMEN$OFF 000000               __CFG_EBTR1$OFF 000000               __CFG_EBTR2$OFF 000000  
             __CFG_EBTR3$OFF 000000                  ?_UART_Write 0001           __size_of_UART_Init 012C  
         __size_of_UART_Read 0008                __CFG_WRTB$OFF 000000                __CFG_WRTC$OFF 000000  
              __CFG_WRTD$OFF 000000               __CFG_EBTRB$OFF 000000              __end_of_initPIC 7BFC  
                      _flush 7ABC                        status 000FD8              __initialization 7AAA  
               __end_of_main 7DC4                       ??_main 001D                __activetblptr 000000  
             __CFG_RETEN$OFF 000000                configure_TX@j 0004                       ?_flush 0001  
                     _ANCON0 000F5D                       _ANCON1 000F5C        __size_of_check_MAX_RT 0024  
            __CFG_BBSIZ$BB2K 000000                       _INTCON 000FF2           __size_of_TX_nordic 005E  
                     _RCREG1 000FAE                       _MAX_RT 002B                       _SPBRG1 000FAF  
                     _SSPBUF 000FC9                       _TXREG1 000FAD               __CFG_XINST$OFF 000000  
          __end_of_UART_Init 8000            __end_of_UART_Read 7A7C          __size_of_UART_Write 000C  
                  ??___aldiv 0009               __CFG_STVREN$ON 000000                       clear_0 7AB0  
                  ??_initPIC 0001                 _check_MAX_RT 7AEE         __end_of_configure_TX 7ED4  
                 __accesstop 0060      __end_of__initialization 7AB6                spi_write@data 0001  
              TX_nordic@data 0003                ___rparam_used 000001               __pcstackCOMRAM 0001  
              __end_of_flush 7AD2            __end_of_TX_nordic 7B9E                      ??_flush 0002  
            __CFG_PLLCFG$OFF 000000              _init_spi_master 7AD2     __size_of_UART_Data_Ready 0008  
               _alert_status 0029                      _INTCON2 000FF1                      _INTCON3 000FF0  
           __CFG_CANMX$PORTB 000000                ?_reset_MAX_RT 0001    __size_of_read_ACK_payload 002E  
               ??_UART_Write 0001           __size_of_spi_write 0010              __CFG_PWRTEN$OFF 000000  
                    __Hparam 0000                      __Lparam 0000                      ___aldiv 7BFC  
         __end_of_UART_Write 7A88                      __pcinit 7AAA                      __ramtop 0F00  
                    __ptext0 7CC8                      __ptext1 7A98                      __ptext2 7B12  
                    __ptext3 7AD2                      __ptext4 7B9E                      __ptext5 7ABC  
                    __ptext6 7DC4                      __ptext7 7AEE                      __ptext8 7A7C  
                    __ptext9 7A74                      _initPIC 7B9E               ??_reset_MAX_RT 0002  
      __size_of_configure_TX 0110             ___aldiv@dividend 0001            __CFG_MSSPMSK$MSK7 000000  
    __end_of_init_spi_master 7AEE         end_of_initialization 7AB6                    _PIC_ft232 0027  
          __end_of_spi_write 7A98             ___aldiv@quotient 000B                      postinc0 000FEE  
               _configure_TX 7DC4            ??_UART_Data_Ready 0001                    _UART_Init 7ED4  
                  _UART_Read 7A74               UART_Write@data 0001                    _TRISCbits 000F94  
          __CFG_SOSCSEL$HIGH 000000                   ?_UART_Init 000F                   ?_UART_Read 0001  
                  _TX_nordic 7B40          start_initialization 7AAA             _read_ACK_payload 7B12  
           ?_init_spi_master 0001  read_ACK_payload@ACK_payload 0003         __end_of_reset_MAX_RT 7AAA  
         check_MAX_RT@MAX_RT 0003                   ?_TX_nordic 0001                  __pbssCOMRAM 001F  
         check_MAX_RT@buffer 0002                     ?___aldiv 0001                  ??_UART_Init 0013  
                ??_UART_Read 0001                     ?_initPIC 0001               __size_of_flush 0016  
                 UART_Init@x 001B              ___aldiv@divisor 0005              ___aldiv@counter 0009  
                   _LATAbits 000F89              _UART_Data_Ready 7A6C                     _LATCbits 000F8B  
                   _PIE1bits 000F9D            UART_Init@baudrate 000F                    _spi_write 7A88  
              ?_check_MAX_RT 0001                  ??_TX_nordic 0002                  _INTCON2bits 000FF1  
                _INTCON3bits 000FF0        __size_of_reset_MAX_RT 0012                     __Hrparam 0000  
   __end_of_read_ACK_payload 7B40                     __Lrparam 0000           __CFG_BOREN$SBORDIS 000000  
           __size_of___aldiv 00CC                   ?_spi_write 0001               ??_check_MAX_RT 0002  
           __size_of_initPIC 005E                 _reset_MAX_RT 7A98                     __ptext10 7ED4  
                   __ptext11 7BFC                     __ptext12 7A6C                     __ptext13 7B40  
                   __ptext14 7A88      __end_of_UART_Data_Ready 7A74                __size_of_main 00FC  
        __CFG_INTOSCSEL$HIGH 000000           __CFG_WDTEN$SWDTDIS 000000                   _RCSTA1bits 000FAB  
   __size_of_init_spi_master 001C                  _serial_read 002A           __CFG_WDTPS$1048576 000000  
                ??_spi_write 0001                 ___aldiv@sign 000A                   _UART_Write 7A7C  
                _SSPCON1bits 000FC6             ?_UART_Data_Ready 0001          __CFG_BORPWR$ZPBORMV 000000  
       __end_of_check_MAX_RT 7B12  
