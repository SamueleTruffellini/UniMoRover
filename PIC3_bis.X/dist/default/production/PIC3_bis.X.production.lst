

Microchip Technology PIC18 LITE Macro Assembler V1.41 build -162212810 
                                                                                               Wed Dec 20 16:57:46 2017

Microchip Technology Omniscient Code Generator v1.41 (Free mode) build 201701250102
     1                           	processor	18F25K80
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    21                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    22                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    23  0000                     
    24                           ; Version 1.41
    25                           ; Generated 25/01/2017 GMT
    26                           ; 
    27                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    28                           ; All rights reserved.
    29                           ; 
    30                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    31                           ; 
    32                           ; Redistribution and use in source and binary forms, with or without modification, are
    33                           ; permitted provided that the following conditions are met:
    34                           ; 
    35                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    36                           ;        conditions and the following disclaimer.
    37                           ; 
    38                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    39                           ;        of conditions and the following disclaimer in the documentation and/or other
    40                           ;        materials provided with the distribution.
    41                           ; 
    42                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    43                           ;        software without specific prior written permission.
    44                           ; 
    45                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    46                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    47                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    48                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    49                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    50                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    51                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    52                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    53                           ; 
    54                           ; 
    55                           ; Code-generator required, PIC18F25K80 Definitions
    56                           ; 
    57                           ; SFR Addresses
    58  0000                     
    59                           	psect	nvCOMRAM
    60  000051                     __pnvCOMRAM:
    61                           	opt stack 0
    62  000051                     _treshold2:
    63                           	opt stack 0
    64  000051                     	ds	2
    65  000053                     _treshold1:
    66                           	opt stack 0
    67  000053                     	ds	2
    68  000055                     _message:
    69                           	opt stack 0
    70  000055                     	ds	1
    71  0000                     _BRGCON3	set	3653
    72  0000                     _BRGCON2	set	3652
    73  0000                     _BRGCON1	set	3651
    74  0000                     _ANCON1bits	set	3932
    75  0000                     _IOCB	set	3930
    76  0000                     _TXB0D0	set	3878
    77  0000                     _TXB0CONbits	set	3872
    78  0000                     _TXB0SIDL	set	3874
    79  0000                     _TXB0SIDH	set	3873
    80  0000                     _TXB0SIDLbits	set	3874
    81  0000                     _TXB0DLCbits	set	3877
    82  0000                     _TXB0DLC	set	3877
    83  0000                     _LATBbits	set	3978
    84  0000                     _RCONbits	set	4048
    85  0000                     _T1CON	set	4045
    86  0000                     _INTCON2bits	set	4081
    87  0000                     _TRISC	set	3988
    88  0000                     _TRISB	set	3987
    89  0000                     _TRISA	set	3986
    90  0000                     _RCON	set	4048
    91  0000                     _PIR1	set	3998
    92  0000                     _INTCON	set	4082
    93  0000                     _INTCON2	set	4081
    94  0000                     _INTCON3	set	4080
    95  0000                     _PORTC	set	3970
    96  0000                     _PORTB	set	3969
    97  0000                     _PORTA	set	3968
    98  0000                     _TMR1H	set	4047
    99  0000                     _TMR1L	set	4046
   100  0000                     _T1CONbits	set	4045
   101  0000                     _PORTBbits	set	3969
   102  0000                     _INTCONbits	set	4082
   103  0000                     _LATAbits	set	3977
   104  0000                     _CIOCONbits	set	3952
   105  0000                     _ECANCON	set	3954
   106  0000                     _CANSTATbits	set	3950
   107  0000                     _CANCON	set	3951
   108  0000                     _TXREG	set	4013
   109  0000                     _RCREG1	set	4014
   110  0000                     _SPBRG	set	4015
   111  0000                     _SPBRG1	set	4015
   112  0000                     _BAUDCON1bits	set	4007
   113  0000                     _RCSTA1bits	set	4011
   114  0000                     _TXSTA1bits	set	4012
   115  0000                     _RCIF	set	31989
   116  0000                     _TRISC6	set	31910
   117  0000                     _TRISC7	set	31911
   118                           
   119                           ; #config settings
   120  0000                     
   121                           	psect	cinit
   122  000652                     __pcinit:
   123                           	opt stack 0
   124  000652                     start_initialization:
   125                           	opt stack 0
   126  000652                     __initialization:
   127                           	opt stack 0
   128                           
   129                           ; Clear objects allocated to BANK0 (10 bytes)
   130  000652  EE00  F060         	lfsr	0,__pbssBANK0
   131  000656  0E0A               	movlw	10
   132  000658                     clear_0:
   133  000658  6AEE               	clrf	postinc0,c
   134  00065A  06E8               	decf	wreg,f,c
   135  00065C  E1FD               	bnz	clear_0
   136                           
   137                           ; Clear objects allocated to COMRAM (20 bytes)
   138  00065E  EE00  F03D         	lfsr	0,__pbssCOMRAM
   139  000662  0E14               	movlw	20
   140  000664                     clear_1:
   141  000664  6AEE               	clrf	postinc0,c
   142  000666  06E8               	decf	wreg,f,c
   143  000668  E1FD               	bnz	clear_1
   144  00066A                     end_of_initialization:
   145                           	opt stack 0
   146  00066A                     __end_of__initialization:
   147                           	opt stack 0
   148  00066A  9056               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   149  00066C  9256               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   150  00066E  0E00               	movlw	low (__Lmediumconst shr (0+16))
   151  000670  6EF8               	movwf	tblptru,c
   152  000672  0100               	movlb	0
   153  000674  EFB9  F000         	goto	_main	;jump to C main() function
   154                           tblptru	equ	0xFF8
   155                           postinc0	equ	0xFEE
   156                           wreg	equ	0xFE8
   157                           
   158                           	psect	bssCOMRAM
   159  00003D                     __pbssCOMRAM:
   160                           	opt stack 0
   161  00003D                     _buff_retr:
   162                           	opt stack 0
   163  00003D                     	ds	8
   164  000045                     _cnt_W:
   165                           	opt stack 0
   166  000045                     	ds	2
   167  000047                     _cnt_b:
   168                           	opt stack 0
   169  000047                     	ds	2
   170  000049                     _cnt_B:
   171                           	opt stack 0
   172  000049                     	ds	2
   173  00004B                     _token:
   174                           	opt stack 0
   175  00004B                     	ds	2
   176  00004D                     _dist2:
   177                           	opt stack 0
   178  00004D                     	ds	2
   179  00004F                     _dist1:
   180                           	opt stack 0
   181  00004F                     	ds	2
   182                           tblptru	equ	0xFF8
   183                           postinc0	equ	0xFEE
   184                           wreg	equ	0xFE8
   185                           
   186                           	psect	bssBANK0
   187  000060                     __pbssBANK0:
   188                           	opt stack 0
   189  000060                     _buff:
   190                           	opt stack 0
   191  000060                     	ds	10
   192                           tblptru	equ	0xFF8
   193                           postinc0	equ	0xFEE
   194                           wreg	equ	0xFE8
   195                           
   196                           	psect	cstackBANK0
   197  00006A                     __pcstackBANK0:
   198                           	opt stack 0
   199  00006A                     CAN_TX_write_0@data:
   200                           	opt stack 0
   201                           
   202                           ; 1 bytes @ 0x0
   203  00006A                     	ds	1
   204  00006B                     ??_main:
   205                           
   206                           ; 1 bytes @ 0x1
   207  00006B                     	ds	1
   208                           tblptru	equ	0xFF8
   209                           postinc0	equ	0xFEE
   210                           wreg	equ	0xFE8
   211                           
   212                           	psect	cstackCOMRAM
   213  000001                     __pcstackCOMRAM:
   214                           	opt stack 0
   215  000001                     ?___ftpack:
   216                           	opt stack 0
   217  000001                     ___ftpack@arg:
   218                           	opt stack 0
   219                           
   220                           ; 3 bytes @ 0x0
   221  000001                     	ds	3
   222  000004                     ___ftpack@exp:
   223                           	opt stack 0
   224                           
   225                           ; 1 bytes @ 0x3
   226  000004                     	ds	1
   227  000005                     ___ftpack@sign:
   228                           	opt stack 0
   229                           
   230                           ; 1 bytes @ 0x4
   231  000005                     	ds	1
   232  000006                     ??___ftpack:
   233                           
   234                           ; 1 bytes @ 0x5
   235  000006                     	ds	3
   236  000009                     ?___awtoft:
   237                           	opt stack 0
   238  000009                     ___awtoft@c:
   239                           	opt stack 0
   240                           
   241                           ; 2 bytes @ 0x8
   242  000009                     	ds	3
   243  00000C                     ___awtoft@sign:
   244                           	opt stack 0
   245                           
   246                           ; 1 bytes @ 0xB
   247  00000C                     	ds	1
   248  00000D                     ?___ftdiv:
   249                           	opt stack 0
   250  00000D                     ___ftdiv@f1:
   251                           	opt stack 0
   252                           
   253                           ; 3 bytes @ 0xC
   254  00000D                     	ds	3
   255  000010                     ___ftdiv@f2:
   256                           	opt stack 0
   257                           
   258                           ; 3 bytes @ 0xF
   259  000010                     	ds	3
   260  000013                     ??___ftdiv:
   261                           
   262                           ; 1 bytes @ 0x12
   263  000013                     	ds	3
   264  000016                     ___ftdiv@cntr:
   265                           	opt stack 0
   266                           
   267                           ; 1 bytes @ 0x15
   268  000016                     	ds	1
   269  000017                     ___ftdiv@f3:
   270                           	opt stack 0
   271                           
   272                           ; 3 bytes @ 0x16
   273  000017                     	ds	3
   274  00001A                     ___ftdiv@exp:
   275                           	opt stack 0
   276                           
   277                           ; 1 bytes @ 0x19
   278  00001A                     	ds	1
   279  00001B                     ___ftdiv@sign:
   280                           	opt stack 0
   281                           
   282                           ; 1 bytes @ 0x1A
   283  00001B                     	ds	1
   284  00001C                     ?___fttol:
   285                           	opt stack 0
   286  00001C                     ___fttol@f1:
   287                           	opt stack 0
   288                           
   289                           ; 3 bytes @ 0x1B
   290  00001C                     	ds	4
   291  000020                     ??___fttol:
   292                           
   293                           ; 1 bytes @ 0x1F
   294  000020                     	ds	5
   295  000025                     ___fttol@sign1:
   296                           	opt stack 0
   297                           
   298                           ; 1 bytes @ 0x24
   299  000025                     	ds	1
   300  000026                     ___fttol@lval:
   301                           	opt stack 0
   302                           
   303                           ; 4 bytes @ 0x25
   304  000026                     	ds	4
   305  00002A                     ___fttol@exp1:
   306                           	opt stack 0
   307                           
   308                           ; 1 bytes @ 0x29
   309  00002A                     	ds	1
   310  00002B                     ??_echo:
   311                           
   312                           ; 1 bytes @ 0x2A
   313  00002B                     	ds	18
   314                           tblptru	equ	0xFF8
   315                           postinc0	equ	0xFEE
   316                           wreg	equ	0xFE8
   317                           
   318 ;;
   319 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   320 ;;
   321 ;; *************** function _main *****************
   322 ;; Defined at:
   323 ;;		line 190 in file "CAN_TX_back.c"
   324 ;; Parameters:    Size  Location     Type
   325 ;;		None
   326 ;; Auto vars:     Size  Location     Type
   327 ;;		None
   328 ;; Return value:  Size  Location     Type
   329 ;;                  1    wreg      void 
   330 ;; Registers used:
   331 ;;		wreg, status,2, status,0, cstack
   332 ;; Tracked objects:
   333 ;;		On entry : 0/0
   334 ;;		On exit  : 0/0
   335 ;;		Unchanged: 0/0
   336 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   337 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   338 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   339 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   340 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   341 ;;Total ram usage:        1 bytes
   342 ;; Hardware stack levels required when called:    4
   343 ;; This function calls:
   344 ;;		_CAN_TX_initialize
   345 ;;		_CAN_TX_write_0
   346 ;;		_initPIC
   347 ;; This function is called by:
   348 ;;		Startup code after reset
   349 ;; This function uses a non-reentrant model
   350 ;;
   351                           
   352                           	psect	text0
   353  000172                     __ptext0:
   354                           	opt stack 0
   355  000172                     _main:
   356                           	opt stack 27
   357                           
   358                           ;CAN_TX_back.c: 193: initPIC();
   359                           
   360                           ;incstack = 0
   361  000172  EC8F  F002         	call	_initPIC	;wreg free
   362                           
   363                           ;CAN_TX_back.c: 195: CAN_TX_initialize();
   364  000176  ECF0  F002         	call	_CAN_TX_initialize	;wreg free
   365                           
   366                           ;CAN_TX_back.c: 196: _delay((unsigned long)((10)*(8000000/4000.0)));
   367  00017A  0E1A               	movlw	26
   368  00017C  0100               	movlb	0	; () banked
   369  00017E  6F6B               	movwf	??_main& (0+255),b
   370  000180  0EF8               	movlw	248
   371  000182                     u987:
   372  000182  2EE8               	decfsz	wreg,f,c
   373  000184  D7FE               	bra	u987
   374  000186  2F6B               	decfsz	??_main& (0+255),f,b
   375  000188  D7FC               	bra	u987
   376  00018A  F000               	nop	
   377                           
   378                           ;CAN_TX_back.c: 198: TMR1H = 0;
   379  00018C  0E00               	movlw	0
   380  00018E  6ECF               	movwf	4047,c	;volatile
   381                           
   382                           ;CAN_TX_back.c: 199: TMR1L = 0;
   383  000190  0E00               	movlw	0
   384  000192  6ECE               	movwf	4046,c	;volatile
   385  000194                     l1397:
   386                           
   387                           ;CAN_TX_back.c: 203: LATAbits.LATA0 = !LATAbits.LATA0;
   388  000194  B089               	btfsc	3977,0,c	;volatile
   389  000196  D004               	goto	u860
   390  000198  0100               	movlb	0	; () banked
   391  00019A  6B6B               	clrf	??_main& (0+255),b
   392  00019C  2B6B               	incf	??_main& (0+255),f,b
   393  00019E  D002               	goto	u878
   394  0001A0                     u860:
   395  0001A0  0100               	movlb	0	; () banked
   396  0001A2  6B6B               	clrf	??_main& (0+255),b
   397  0001A4                     u878:
   398  0001A4  5089               	movf	3977,w,c	;volatile
   399  0001A6  0100               	movlb	0	; () banked
   400  0001A8  196B               	xorwf	??_main& (0+255),w,b
   401  0001AA  0BFE               	andlw	-2
   402  0001AC  196B               	xorwf	??_main& (0+255),w,b
   403  0001AE  6E89               	movwf	3977,c	;volatile
   404                           
   405                           ; BSR set to: 0
   406                           ;CAN_TX_back.c: 205: TMR1H = 0;
   407  0001B0  0E00               	movlw	0
   408  0001B2  6ECF               	movwf	4047,c	;volatile
   409                           
   410                           ; BSR set to: 0
   411                           ;CAN_TX_back.c: 206: TMR1L = 0;
   412  0001B4  0E00               	movlw	0
   413  0001B6  6ECE               	movwf	4046,c	;volatile
   414                           
   415                           ; BSR set to: 0
   416                           ;CAN_TX_back.c: 209: if(token==0){
   417  0001B8  504B               	movf	_token,w,c
   418  0001BA  104C               	iorwf	_token+1,w,c
   419  0001BC  A4D8               	btfss	status,2,c
   420  0001BE  D00A               	goto	l1413
   421                           
   422                           ; BSR set to: 0
   423                           ;CAN_TX_back.c: 210: IOCB = 0b00010000;
   424  0001C0  0E10               	movlw	16
   425  0001C2  010F               	movlb	15	; () banked
   426  0001C4  6F5A               	movwf	90,b	;volatile
   427                           
   428                           ; BSR set to: 15
   429                           ;CAN_TX_back.c: 211: LATBbits.LB0 = 1;
   430  0001C6  808A               	bsf	3978,0,c	;volatile
   431                           
   432                           ; BSR set to: 15
   433                           ;CAN_TX_back.c: 212: _delay((unsigned long)((10)*(8000000/4000000.0)));
   434  0001C8  0E06               	movlw	6
   435  0001CA                     u997:
   436  0001CA  2EE8               	decfsz	wreg,f,c
   437  0001CC  D7FE               	bra	u997
   438  0001CE  D000               	nop2	
   439                           
   440                           ;CAN_TX_back.c: 213: LATBbits.LB0 = 0;
   441  0001D0  908A               	bcf	3978,0,c	;volatile
   442                           
   443                           ;CAN_TX_back.c: 214: }else if(token==1){
   444  0001D2  D00D               	goto	l1423
   445  0001D4                     l1413:
   446  0001D4  044B               	decf	_token,w,c
   447  0001D6  104C               	iorwf	_token+1,w,c
   448  0001D8  A4D8               	btfss	status,2,c
   449  0001DA  D009               	goto	l1423
   450                           
   451                           ;CAN_TX_back.c: 215: IOCB = 0b00100000;
   452  0001DC  0E20               	movlw	32
   453  0001DE  010F               	movlb	15	; () banked
   454  0001E0  6F5A               	movwf	90,b	;volatile
   455                           
   456                           ; BSR set to: 15
   457                           ;CAN_TX_back.c: 216: LATBbits.LB1 = 1;
   458  0001E2  828A               	bsf	3978,1,c	;volatile
   459                           
   460                           ; BSR set to: 15
   461                           ;CAN_TX_back.c: 217: _delay((unsigned long)((10)*(8000000/4000000.0)));
   462  0001E4  0E06               	movlw	6
   463  0001E6                     u1007:
   464  0001E6  2EE8               	decfsz	wreg,f,c
   465  0001E8  D7FE               	bra	u1007
   466  0001EA  D000               	nop2	
   467                           
   468                           ;CAN_TX_back.c: 218: LATBbits.LB1 = 0;
   469  0001EC  928A               	bcf	3978,1,c	;volatile
   470  0001EE                     l1423:
   471                           
   472                           ;CAN_TX_back.c: 219: }
   473                           ;CAN_TX_back.c: 221: _delay((unsigned long)((50)*(8000000/4000.0)));
   474  0001EE  0E82               	movlw	130
   475  0001F0  0100               	movlb	0	; () banked
   476  0001F2  6F6B               	movwf	??_main& (0+255),b
   477  0001F4  0EDD               	movlw	221
   478  0001F6                     u1017:
   479  0001F6  2EE8               	decfsz	wreg,f,c
   480  0001F8  D7FE               	bra	u1017
   481  0001FA  2F6B               	decfsz	??_main& (0+255),f,b
   482  0001FC  D7FC               	bra	u1017
   483  0001FE  D000               	nop2	
   484                           
   485                           ;CAN_TX_back.c: 223: if((dist1 > 2) && (dist2 > 2)){
   486  000200  5050               	movf	_dist1+1,w,c
   487  000202  E104               	bnz	u900
   488  000204  0E03               	movlw	3
   489  000206  5C4F               	subwf	_dist1,w,c
   490  000208  A0D8               	btfss	status,0,c
   491  00020A  D041               	goto	l1455
   492  00020C                     u900:
   493  00020C  504E               	movf	_dist2+1,w,c
   494  00020E  E104               	bnz	u910
   495  000210  0E03               	movlw	3
   496  000212  5C4D               	subwf	_dist2,w,c
   497  000214  A0D8               	btfss	status,0,c
   498  000216  D03B               	goto	l1455
   499  000218                     u910:
   500                           
   501                           ;CAN_TX_back.c: 228: if(dist1 < treshold2 || dist2 < treshold2){
   502  000218  5051               	movf	_treshold2,w,c
   503  00021A  5C4F               	subwf	_dist1,w,c
   504  00021C  5052               	movf	_treshold2+1,w,c
   505  00021E  5850               	subwfb	_dist1+1,w,c
   506  000220  A0D8               	btfss	status,0,c
   507  000222  D006               	goto	l1433
   508  000224  5051               	movf	_treshold2,w,c
   509  000226  5C4D               	subwf	_dist2,w,c
   510  000228  5052               	movf	_treshold2+1,w,c
   511  00022A  584E               	subwfb	_dist2+1,w,c
   512  00022C  B0D8               	btfsc	status,0,c
   513  00022E  D00E               	goto	l1441
   514  000230                     l1433:
   515                           
   516                           ;CAN_TX_back.c: 229: if(cnt_b == 1){
   517  000230  0447               	decf	_cnt_b,w,c
   518  000232  1048               	iorwf	_cnt_b+1,w,c
   519  000234  A4D8               	btfss	status,2,c
   520  000236  D003               	goto	l1437
   521                           
   522                           ;CAN_TX_back.c: 230: message = 0x62;
   523  000238  0E62               	movlw	98
   524  00023A  6E55               	movwf	_message,c
   525  00023C  D021               	goto	l1451
   526  00023E                     l1437:
   527                           
   528                           ;CAN_TX_back.c: 233: cnt_B = 0;
   529  00023E  0E00               	movlw	0
   530  000240  6E4A               	movwf	_cnt_B+1,c
   531  000242  0E00               	movlw	0
   532  000244  6E49               	movwf	_cnt_B,c
   533                           
   534                           ;CAN_TX_back.c: 234: cnt_b++;
   535  000246  4A47               	infsnz	_cnt_b,f,c
   536  000248  2A48               	incf	_cnt_b+1,f,c
   537                           
   538                           ;CAN_TX_back.c: 235: }
   539                           ;CAN_TX_back.c: 236: }else if(dist1 < treshold1 || dist2 < treshold1){
   540  00024A  D021               	goto	l1455
   541  00024C                     l1441:
   542  00024C  5053               	movf	_treshold1,w,c
   543  00024E  5C4F               	subwf	_dist1,w,c
   544  000250  5054               	movf	_treshold1+1,w,c
   545  000252  5850               	subwfb	_dist1+1,w,c
   546  000254  A0D8               	btfss	status,0,c
   547  000256  D006               	goto	l1445
   548  000258  5053               	movf	_treshold1,w,c
   549  00025A  5C4D               	subwf	_dist2,w,c
   550  00025C  5054               	movf	_treshold1+1,w,c
   551  00025E  584E               	subwfb	_dist2+1,w,c
   552  000260  B0D8               	btfsc	status,0,c
   553  000262  D013               	goto	l1453
   554  000264                     l1445:
   555                           
   556                           ;CAN_TX_back.c: 239: if(cnt_B == 2){
   557  000264  0E02               	movlw	2
   558  000266  1849               	xorwf	_cnt_B,w,c
   559  000268  104A               	iorwf	_cnt_B+1,w,c
   560  00026A  A4D8               	btfss	status,2,c
   561  00026C  D007               	goto	l1449
   562                           
   563                           ;CAN_TX_back.c: 240: message = 0x42;
   564  00026E  0E42               	movlw	66
   565  000270  6E55               	movwf	_message,c
   566                           
   567                           ;CAN_TX_back.c: 241: cnt_B = 0;
   568  000272  0E00               	movlw	0
   569  000274  6E4A               	movwf	_cnt_B+1,c
   570  000276  0E00               	movlw	0
   571  000278  6E49               	movwf	_cnt_B,c
   572                           
   573                           ;CAN_TX_back.c: 242: }else{
   574  00027A  D009               	goto	l1455
   575  00027C                     l1449:
   576                           
   577                           ;CAN_TX_back.c: 243: cnt_B++;
   578  00027C  4A49               	infsnz	_cnt_B,f,c
   579  00027E  2A4A               	incf	_cnt_B+1,f,c
   580  000280                     l1451:
   581                           
   582                           ;CAN_TX_back.c: 244: cnt_b = 0;
   583  000280  0E00               	movlw	0
   584  000282  6E48               	movwf	_cnt_b+1,c
   585  000284  0E00               	movlw	0
   586  000286  6E47               	movwf	_cnt_b,c
   587                           
   588                           ;CAN_TX_back.c: 245: }
   589                           ;CAN_TX_back.c: 246: }else{
   590  000288  D002               	goto	l1455
   591  00028A                     l1453:
   592                           
   593                           ;CAN_TX_back.c: 247: message = 0x57;
   594  00028A  0E57               	movlw	87
   595  00028C  6E55               	movwf	_message,c
   596  00028E                     l1455:
   597                           
   598                           ;CAN_TX_back.c: 248: }
   599                           ;CAN_TX_back.c: 249: }
   600                           ;CAN_TX_back.c: 250: CAN_TX_write_0(message);
   601  00028E  5055               	movf	_message,w,c
   602  000290  ECCA  F002         	call	_CAN_TX_write_0
   603  000294  D77F               	goto	l1397
   604  000296                     __end_of_main:
   605                           	opt stack 0
   606                           tblptru	equ	0xFF8
   607                           postinc0	equ	0xFEE
   608                           wreg	equ	0xFE8
   609                           status	equ	0xFD8
   610                           
   611 ;; *************** function _initPIC *****************
   612 ;; Defined at:
   613 ;;		line 144 in file "CAN_TX_back.c"
   614 ;; Parameters:    Size  Location     Type
   615 ;;		None
   616 ;; Auto vars:     Size  Location     Type
   617 ;;		None
   618 ;; Return value:  Size  Location     Type
   619 ;;                  1    wreg      void 
   620 ;; Registers used:
   621 ;;		wreg, status,2
   622 ;; Tracked objects:
   623 ;;		On entry : 0/0
   624 ;;		On exit  : 0/0
   625 ;;		Unchanged: 0/0
   626 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   627 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   628 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   629 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   630 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   631 ;;Total ram usage:        0 bytes
   632 ;; Hardware stack levels used:    1
   633 ;; Hardware stack levels required when called:    3
   634 ;; This function calls:
   635 ;;		Nothing
   636 ;; This function is called by:
   637 ;;		_main
   638 ;; This function uses a non-reentrant model
   639 ;;
   640                           
   641                           	psect	text1
   642  00051E                     __ptext1:
   643                           	opt stack 0
   644  00051E                     _initPIC:
   645                           	opt stack 27
   646                           
   647                           ;CAN_TX_back.c: 146: PORTA = 0x00;
   648                           
   649                           ;incstack = 0
   650  00051E  0E00               	movlw	0
   651  000520  6E80               	movwf	3968,c	;volatile
   652                           
   653                           ;CAN_TX_back.c: 147: PORTB = 0x00;
   654  000522  0E00               	movlw	0
   655  000524  6E81               	movwf	3969,c	;volatile
   656                           
   657                           ;CAN_TX_back.c: 148: PORTC = 0x00;
   658  000526  0E00               	movlw	0
   659  000528  6E82               	movwf	3970,c	;volatile
   660                           
   661                           ;CAN_TX_back.c: 149: INTCON3 = 0x00;
   662  00052A  0E00               	movlw	0
   663  00052C  6EF0               	movwf	intcon3,c	;volatile
   664                           
   665                           ;CAN_TX_back.c: 150: INTCON2 = 0x00;
   666  00052E  0E00               	movlw	0
   667  000530  6EF1               	movwf	intcon2,c	;volatile
   668                           
   669                           ;CAN_TX_back.c: 151: INTCON = 0x00;
   670  000532  0E00               	movlw	0
   671  000534  6EF2               	movwf	intcon,c	;volatile
   672                           
   673                           ;CAN_TX_back.c: 152: PIR1 = 0x00;
   674  000536  0E00               	movlw	0
   675  000538  6E9E               	movwf	3998,c	;volatile
   676                           
   677                           ;CAN_TX_back.c: 153: RCON = 0x00;
   678  00053A  0E00               	movlw	0
   679  00053C  6ED0               	movwf	4048,c	;volatile
   680                           
   681                           ;CAN_TX_back.c: 155: TRISA = 0x00;
   682  00053E  0E00               	movlw	0
   683  000540  6E92               	movwf	3986,c	;volatile
   684                           
   685                           ;CAN_TX_back.c: 156: TRISB = 0x00;
   686  000542  0E00               	movlw	0
   687  000544  6E93               	movwf	3987,c	;volatile
   688                           
   689                           ;CAN_TX_back.c: 157: TRISC = 0x00;
   690  000546  0E00               	movlw	0
   691  000548  6E94               	movwf	3988,c	;volatile
   692                           
   693                           ;CAN_TX_back.c: 161: TRISB = 0b00111000;
   694  00054A  0E38               	movlw	56
   695  00054C  6E93               	movwf	3987,c	;volatile
   696                           
   697                           ;CAN_TX_back.c: 165: INTCONbits.RBIF = 0;
   698  00054E  90F2               	bcf	intcon,0,c	;volatile
   699                           
   700                           ;CAN_TX_back.c: 166: INTCONbits.RBIE = 1;
   701  000550  86F2               	bsf	intcon,3,c	;volatile
   702                           
   703                           ;CAN_TX_back.c: 167: INTCON2bits.RBIP = 1;
   704  000552  80F1               	bsf	intcon2,0,c	;volatile
   705                           
   706                           ;CAN_TX_back.c: 168: IOCB = 0b00110000;
   707  000554  0E30               	movlw	48
   708  000556  010F               	movlb	15	; () banked
   709  000558  6F5A               	movwf	90,b	;volatile
   710                           
   711                           ; BSR set to: 15
   712                           ;CAN_TX_back.c: 170: ANCON1bits.ANSEL9 = 0;
   713  00055A  010F               	movlb	15	; () banked
   714  00055C  935C               	bcf	92,1,b	;volatile
   715                           
   716                           ;CAN_TX_back.c: 173: T1CON = 0x10;
   717  00055E  0E10               	movlw	16
   718  000560  6ECD               	movwf	4045,c	;volatile
   719                           
   720                           ;CAN_TX_back.c: 175: token = 0;
   721  000562  0E00               	movlw	0
   722  000564  6E4C               	movwf	_token+1,c
   723  000566  0E00               	movlw	0
   724  000568  6E4B               	movwf	_token,c
   725                           
   726                           ;CAN_TX_back.c: 176: treshold1 = 100;
   727  00056A  0E00               	movlw	0
   728  00056C  6E54               	movwf	_treshold1+1,c
   729  00056E  0E64               	movlw	100
   730  000570  6E53               	movwf	_treshold1,c
   731                           
   732                           ;CAN_TX_back.c: 177: treshold2 = 75;
   733  000572  0E00               	movlw	0
   734  000574  6E52               	movwf	_treshold2+1,c
   735  000576  0E4B               	movlw	75
   736  000578  6E51               	movwf	_treshold2,c
   737                           
   738                           ;CAN_TX_back.c: 178: cnt_B = 0;
   739  00057A  0E00               	movlw	0
   740  00057C  6E4A               	movwf	_cnt_B+1,c
   741  00057E  0E00               	movlw	0
   742  000580  6E49               	movwf	_cnt_B,c
   743                           
   744                           ;CAN_TX_back.c: 179: cnt_b = 0;
   745  000582  0E00               	movlw	0
   746  000584  6E48               	movwf	_cnt_b+1,c
   747  000586  0E00               	movlw	0
   748  000588  6E47               	movwf	_cnt_b,c
   749                           
   750                           ;CAN_TX_back.c: 180: message = 0x57;
   751  00058A  0E57               	movlw	87
   752  00058C  6E55               	movwf	_message,c
   753                           
   754                           ; BSR set to: 15
   755                           ;CAN_TX_back.c: 182: INTCONbits.GIE = 1;
   756  00058E  8EF2               	bsf	intcon,7,c	;volatile
   757                           
   758                           ; BSR set to: 15
   759                           ;CAN_TX_back.c: 183: RCONbits.IPEN = 1;
   760  000590  8ED0               	bsf	4048,7,c	;volatile
   761                           
   762                           ; BSR set to: 15
   763  000592  0012               	return		;funcret
   764  000594                     __end_of_initPIC:
   765                           	opt stack 0
   766                           tblptru	equ	0xFF8
   767                           intcon	equ	0xFF2
   768                           intcon2	equ	0xFF1
   769                           intcon3	equ	0xFF0
   770                           postinc0	equ	0xFEE
   771                           wreg	equ	0xFE8
   772                           status	equ	0xFD8
   773                           
   774 ;; *************** function _CAN_TX_write_0 *****************
   775 ;; Defined at:
   776 ;;		line 51 in file "CAN_library.h"
   777 ;; Parameters:    Size  Location     Type
   778 ;;  data            1    wreg     unsigned char 
   779 ;; Auto vars:     Size  Location     Type
   780 ;;  data            1    0[BANK0 ] unsigned char 
   781 ;; Return value:  Size  Location     Type
   782 ;;                  1    wreg      void 
   783 ;; Registers used:
   784 ;;		wreg, status,2
   785 ;; Tracked objects:
   786 ;;		On entry : 0/0
   787 ;;		On exit  : 0/0
   788 ;;		Unchanged: 0/0
   789 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   790 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   791 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   792 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   793 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   794 ;;Total ram usage:        1 bytes
   795 ;; Hardware stack levels used:    1
   796 ;; Hardware stack levels required when called:    3
   797 ;; This function calls:
   798 ;;		Nothing
   799 ;; This function is called by:
   800 ;;		_main
   801 ;; This function uses a non-reentrant model
   802 ;;
   803                           
   804                           	psect	text2
   805  000594                     __ptext2:
   806                           	opt stack 0
   807  000594                     _CAN_TX_write_0:
   808                           	opt stack 27
   809                           
   810                           ; BSR set to: 15
   811                           ;incstack = 0
   812                           ;CAN_TX_write_0@data stored from wreg
   813  000594  0100               	movlb	0	; () banked
   814  000596  6F6A               	movwf	CAN_TX_write_0@data& (0+255),b
   815                           
   816                           ;CAN_library.h: 53: TXB0DLC = 0x01;
   817  000598  0E01               	movlw	1
   818  00059A  010F               	movlb	15	; () banked
   819  00059C  6F25               	movwf	37,b	;volatile
   820                           
   821                           ; BSR set to: 15
   822                           ;CAN_library.h: 54: TXB0DLCbits.TXRTR = 0x00;
   823  00059E  010F               	movlb	15	; () banked
   824  0005A0  9D25               	bcf	37,6,b	;volatile
   825                           
   826                           ; BSR set to: 15
   827                           ;CAN_library.h: 55: TXB0SIDLbits.EXIDE = 0x00;
   828  0005A2  010F               	movlb	15	; () banked
   829  0005A4  9722               	bcf	34,3,b	;volatile
   830                           
   831                           ;CAN_library.h: 56: TXB0SIDH = 0x00;
   832  0005A6  0E00               	movlw	0
   833  0005A8  010F               	movlb	15	; () banked
   834  0005AA  6F21               	movwf	33,b	;volatile
   835                           
   836                           ;CAN_library.h: 57: TXB0SIDL = 0xA0;
   837  0005AC  0EA0               	movlw	160
   838  0005AE  010F               	movlb	15	; () banked
   839  0005B0  6F22               	movwf	34,b	;volatile
   840                           
   841                           ; BSR set to: 15
   842                           ;CAN_library.h: 58: TXB0CONbits.TXPRI0 = 0x01;
   843  0005B2  010F               	movlb	15	; () banked
   844  0005B4  8120               	bsf	32,0,b	;volatile
   845                           
   846                           ; BSR set to: 15
   847                           ;CAN_library.h: 59: TXB0CONbits.TXPRI1 = 0x01;
   848  0005B6  010F               	movlb	15	; () banked
   849  0005B8  8320               	bsf	32,1,b	;volatile
   850                           
   851                           ; BSR set to: 15
   852                           ;CAN_library.h: 61: TXB0D0 = data;
   853  0005BA  C06A  FF26         	movff	CAN_TX_write_0@data,3878	;volatile
   854                           
   855                           ; BSR set to: 15
   856                           ;CAN_library.h: 63: TXB0CONbits.TXREQ = 1;
   857  0005BE  010F               	movlb	15	; () banked
   858  0005C0  8720               	bsf	32,3,b	;volatile
   859                           
   860                           ;CAN_library.h: 65: while (TXB0CONbits.TXREQ != 0) {
   861  0005C2  D003               	goto	l137
   862  0005C4                     l138:
   863                           
   864                           ; BSR set to: 15
   865                           ;CAN_library.h: 67: if (TXB0CONbits.TXERR == 1){
   866  0005C4  010F               	movlb	15	; () banked
   867  0005C6  B920               	btfsc	32,4,b	;volatile
   868                           
   869                           ; BSR set to: 15
   870                           ;CAN_library.h: 68: LATAbits.LATA1 = 1;
   871  0005C8  8289               	bsf	3977,1,c	;volatile
   872  0005CA                     l137:
   873                           
   874                           ; BSR set to: 15
   875  0005CA  010F               	movlb	15	; () banked
   876  0005CC  B720               	btfsc	32,3,b	;volatile
   877  0005CE  D7FA               	goto	l138
   878                           
   879                           ; BSR set to: 15
   880                           ;CAN_library.h: 69: }
   881                           ;CAN_library.h: 70: }
   882                           ;CAN_library.h: 72: if (TXB0CONbits.TXERR == 1) {
   883  0005D0  010F               	movlb	15	; () banked
   884  0005D2  B920               	btfsc	32,4,b	;volatile
   885                           
   886                           ; BSR set to: 15
   887                           ;CAN_library.h: 73: LATAbits.LATA1 = 1;
   888  0005D4  8289               	bsf	3977,1,c	;volatile
   889                           
   890                           ; BSR set to: 15
   891                           ;CAN_library.h: 74: }
   892                           ;CAN_library.h: 76: if (TXB0CONbits.TXERR == 0) {
   893  0005D6  010F               	movlb	15	; () banked
   894  0005D8  B920               	btfsc	32,4,b	;volatile
   895  0005DA  0012               	return	
   896                           
   897                           ; BSR set to: 15
   898                           ;CAN_library.h: 77: LATAbits.LATA1 = 0;
   899  0005DC  9289               	bcf	3977,1,c	;volatile
   900  0005DE  0012               	return	
   901  0005E0                     __end_of_CAN_TX_write_0:
   902                           	opt stack 0
   903                           tblptru	equ	0xFF8
   904                           intcon	equ	0xFF2
   905                           intcon2	equ	0xFF1
   906                           intcon3	equ	0xFF0
   907                           postinc0	equ	0xFEE
   908                           wreg	equ	0xFE8
   909                           status	equ	0xFD8
   910                           
   911 ;; *************** function _CAN_TX_initialize *****************
   912 ;; Defined at:
   913 ;;		line 22 in file "CAN_library.h"
   914 ;; Parameters:    Size  Location     Type
   915 ;;		None
   916 ;; Auto vars:     Size  Location     Type
   917 ;;		None
   918 ;; Return value:  Size  Location     Type
   919 ;;                  1    wreg      void 
   920 ;; Registers used:
   921 ;;		wreg, status,2, status,0
   922 ;; Tracked objects:
   923 ;;		On entry : 0/0
   924 ;;		On exit  : 0/0
   925 ;;		Unchanged: 0/0
   926 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   927 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   928 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   929 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   930 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   931 ;;Total ram usage:        0 bytes
   932 ;; Hardware stack levels used:    1
   933 ;; Hardware stack levels required when called:    3
   934 ;; This function calls:
   935 ;;		Nothing
   936 ;; This function is called by:
   937 ;;		_main
   938 ;; This function uses a non-reentrant model
   939 ;;
   940                           
   941                           	psect	text3
   942  0005E0                     __ptext3:
   943                           	opt stack 0
   944  0005E0                     _CAN_TX_initialize:
   945                           	opt stack 27
   946                           
   947                           ;CAN_library.h: 26: CANCON = 0b10000000;
   948                           
   949                           ; BSR set to: 15
   950                           ;incstack = 0
   951  0005E0  0E80               	movlw	128
   952  0005E2  6E6F               	movwf	3951,c	;volatile
   953                           
   954                           ;CAN_library.h: 27: CANSTATbits.OPMODE2 = 0x01;
   955  0005E4  8E6E               	bsf	3950,7,c	;volatile
   956                           
   957                           ;CAN_library.h: 28: CANSTATbits.OPMODE1 = 0x00;
   958  0005E6  9C6E               	bcf	3950,6,c	;volatile
   959                           
   960                           ;CAN_library.h: 29: CANSTATbits.OPMODE0 = 0x00;
   961  0005E8  9A6E               	bcf	3950,5,c	;volatile
   962                           
   963                           ;CAN_library.h: 31: ECANCON = 0x00;
   964  0005EA  0E00               	movlw	0
   965  0005EC  6E72               	movwf	3954,c	;volatile
   966                           
   967                           ;CAN_library.h: 33: BRGCON1 = 0x01;
   968  0005EE  0E01               	movlw	1
   969  0005F0  010E               	movlb	14	; () banked
   970  0005F2  6F43               	movwf	67,b	;volatile
   971                           
   972                           ;CAN_library.h: 34: BRGCON2 = 0xBA;
   973  0005F4  0EBA               	movlw	186
   974  0005F6  010E               	movlb	14	; () banked
   975  0005F8  6F44               	movwf	68,b	;volatile
   976                           
   977                           ;CAN_library.h: 35: BRGCON3 = 0x07;
   978  0005FA  0E07               	movlw	7
   979  0005FC  010E               	movlb	14	; () banked
   980  0005FE  6F45               	movwf	69,b	;volatile
   981                           
   982                           ; BSR set to: 14
   983                           ;CAN_library.h: 37: CIOCONbits.ENDRHI = 0x01;
   984  000600  8A70               	bsf	3952,5,c	;volatile
   985                           
   986                           ;CAN_library.h: 41: CANCON = 0b00000000;
   987  000602  0E00               	movlw	0
   988  000604  6E6F               	movwf	3951,c	;volatile
   989                           
   990                           ; BSR set to: 14
   991                           ;CAN_library.h: 42: CANSTATbits.OPMODE2 = 0x00;
   992  000606  9E6E               	bcf	3950,7,c	;volatile
   993                           
   994                           ; BSR set to: 14
   995                           ;CAN_library.h: 43: CANSTATbits.OPMODE1 = 0x00;
   996  000608  9C6E               	bcf	3950,6,c	;volatile
   997                           
   998                           ; BSR set to: 14
   999                           ;CAN_library.h: 44: CANSTATbits.OPMODE0 = 0x00;
  1000  00060A  9A6E               	bcf	3950,5,c	;volatile
  1001  00060C                     l1219:
  1002  00060C  386E               	swapf	3950,w,c	;volatile
  1003  00060E  32E8               	rrcf	wreg,f,c
  1004  000610  0B07               	andlw	7
  1005  000612  0900               	iorlw	0
  1006  000614  B4D8               	btfsc	status,2,c
  1007  000616  0012               	return	
  1008  000618  D7F9               	goto	l1219
  1009  00061A                     __end_of_CAN_TX_initialize:
  1010                           	opt stack 0
  1011                           tblptru	equ	0xFF8
  1012                           intcon	equ	0xFF2
  1013                           intcon2	equ	0xFF1
  1014                           intcon3	equ	0xFF0
  1015                           postinc0	equ	0xFEE
  1016                           wreg	equ	0xFE8
  1017                           status	equ	0xFD8
  1018                           
  1019 ;; *************** function _echo *****************
  1020 ;; Defined at:
  1021 ;;		line 96 in file "CAN_TX_back.c"
  1022 ;; Parameters:    Size  Location     Type
  1023 ;;		None
  1024 ;; Auto vars:     Size  Location     Type
  1025 ;;		None
  1026 ;; Return value:  Size  Location     Type
  1027 ;;                  1    wreg      void 
  1028 ;; Registers used:
  1029 ;;		wreg, status,2, status,0, cstack
  1030 ;; Tracked objects:
  1031 ;;		On entry : 0/0
  1032 ;;		On exit  : 0/0
  1033 ;;		Unchanged: 0/0
  1034 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1035 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1036 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1037 ;;      Temps:         18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1038 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1039 ;;Total ram usage:       18 bytes
  1040 ;; Hardware stack levels used:    1
  1041 ;; Hardware stack levels required when called:    2
  1042 ;; This function calls:
  1043 ;;		___awtoft
  1044 ;;		___ftdiv
  1045 ;;		___fttol
  1046 ;; This function is called by:
  1047 ;;		Interrupt level 2
  1048 ;; This function uses a non-reentrant model
  1049 ;;
  1050                           
  1051                           	psect	intcode
  1052  000008                     __pintcode:
  1053                           	opt stack 0
  1054  000008                     _echo:
  1055                           	opt stack 27
  1056                           
  1057                           ;incstack = 0
  1058  000008  8256               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  1059  00000A  CFFA F02F          	movff	pclath,??_echo+4
  1060  00000E  CFFB F030          	movff	pclatu,??_echo+5
  1061  000012  CFE9 F031          	movff	fsr0l,??_echo+6
  1062  000016  CFEA F032          	movff	fsr0h,??_echo+7
  1063  00001A  CFE1 F033          	movff	fsr1l,??_echo+8
  1064  00001E  CFE2 F034          	movff	fsr1h,??_echo+9
  1065  000022  CFD9 F035          	movff	fsr2l,??_echo+10
  1066  000026  CFDA F036          	movff	fsr2h,??_echo+11
  1067  00002A  CFF3 F037          	movff	prodl,??_echo+12
  1068  00002E  CFF4 F038          	movff	prodh,??_echo+13
  1069  000032  CFF6 F039          	movff	tblptrl,??_echo+14
  1070  000036  CFF7 F03A          	movff	tblptrh,??_echo+15
  1071  00003A  CFF8 F03B          	movff	tblptru,??_echo+16
  1072  00003E  CFF5 F03C          	movff	tablat,??_echo+17
  1073                           
  1074                           ;CAN_TX_back.c: 99: if(INTCONbits.RBIF == 1)
  1075  000042  A0F2               	btfss	intcon,0,c	;volatile
  1076  000044  D074               	goto	i2l168
  1077                           
  1078                           ;CAN_TX_back.c: 100: {
  1079                           ;CAN_TX_back.c: 101: INTCONbits.RBIE = 0;
  1080  000046  96F2               	bcf	intcon,3,c	;volatile
  1081                           
  1082                           ;CAN_TX_back.c: 103: switch(token){
  1083  000048  D063               	goto	i2l1381
  1084  00004A                     i2l170:
  1085  00004A  B881               	btfsc	3969,4,c	;volatile
  1086                           
  1087                           ;CAN_TX_back.c: 105: { T1CONbits.TMR1ON = 1;
  1088  00004C  80CD               	bsf	4045,0,c	;volatile
  1089                           
  1090                           ;CAN_TX_back.c: 106: }
  1091                           ;CAN_TX_back.c: 107: if(PORTBbits.RB4 == 0){
  1092  00004E  B881               	btfsc	3969,4,c	;volatile
  1093  000050  D06E               	goto	i2l168
  1094                           
  1095                           ;CAN_TX_back.c: 108: T1CONbits.TMR1ON = 0;
  1096  000052  90CD               	bcf	4045,0,c	;volatile
  1097                           
  1098                           ;CAN_TX_back.c: 110: dist1 = (TMR1L | (TMR1H<<8))/58.82;
  1099  000054  0E48               	movlw	72
  1100  000056  6E10               	movwf	___ftdiv@f2,c
  1101  000058  0E6B               	movlw	107
  1102  00005A  6E11               	movwf	___ftdiv@f2+1,c
  1103  00005C  0E42               	movlw	66
  1104  00005E  6E12               	movwf	___ftdiv@f2+2,c
  1105  000060  50CF               	movf	4047,w,c	;volatile
  1106  000062  6E2C               	movwf	(??_echo+1)& (0+255),c
  1107  000064  6A2B               	clrf	??_echo& (0+255),c
  1108  000066  50CE               	movf	4046,w,c	;volatile
  1109  000068  6E2D               	movwf	(??_echo+2)& (0+255),c
  1110  00006A  6A2E               	clrf	(??_echo+3)& (0+255),c
  1111  00006C  502B               	movf	??_echo,w,c
  1112  00006E  102D               	iorwf	??_echo+2,w,c
  1113  000070  6E09               	movwf	___awtoft@c,c
  1114  000072  502C               	movf	??_echo+1,w,c
  1115  000074  102E               	iorwf	??_echo+3,w,c
  1116  000076  6E0A               	movwf	___awtoft@c+1,c
  1117  000078  EC0D  F003         	call	___awtoft	;wreg free
  1118  00007C  C009  F00D         	movff	?___awtoft,___ftdiv@f1
  1119  000080  C00A  F00E         	movff	?___awtoft+1,___ftdiv@f1+1
  1120  000084  C00B  F00F         	movff	?___awtoft+2,___ftdiv@f1+2
  1121  000088  ECC5  F001         	call	___ftdiv	;wreg free
  1122  00008C  C00D  F01C         	movff	?___ftdiv,___fttol@f1
  1123  000090  C00E  F01D         	movff	?___ftdiv+1,___fttol@f1+1
  1124  000094  C00F  F01E         	movff	?___ftdiv+2,___fttol@f1+2
  1125  000098  EC4B  F001         	call	___fttol	;wreg free
  1126  00009C  C01C  F04F         	movff	?___fttol,_dist1
  1127  0000A0  C01D  F050         	movff	?___fttol+1,_dist1+1
  1128                           
  1129                           ;CAN_TX_back.c: 114: token=1;
  1130  0000A4  0E00               	movlw	0
  1131  0000A6  6E4C               	movwf	_token+1,c
  1132  0000A8  0E01               	movlw	1
  1133  0000AA  D030               	goto	L1
  1134  0000AC                     i2l174:
  1135  0000AC  BA81               	btfsc	3969,5,c	;volatile
  1136                           
  1137                           ;CAN_TX_back.c: 119: { T1CONbits.TMR1ON = 1;
  1138  0000AE  80CD               	bsf	4045,0,c	;volatile
  1139                           
  1140                           ;CAN_TX_back.c: 120: }
  1141                           ;CAN_TX_back.c: 121: if(PORTBbits.RB5 == 0){
  1142  0000B0  BA81               	btfsc	3969,5,c	;volatile
  1143  0000B2  D03D               	goto	i2l168
  1144                           
  1145                           ;CAN_TX_back.c: 122: T1CONbits.TMR1ON = 0;
  1146  0000B4  90CD               	bcf	4045,0,c	;volatile
  1147                           
  1148                           ;CAN_TX_back.c: 124: dist2 = (TMR1L | (TMR1H<<8))/58.82;
  1149  0000B6  0E48               	movlw	72
  1150  0000B8  6E10               	movwf	___ftdiv@f2,c
  1151  0000BA  0E6B               	movlw	107
  1152  0000BC  6E11               	movwf	___ftdiv@f2+1,c
  1153  0000BE  0E42               	movlw	66
  1154  0000C0  6E12               	movwf	___ftdiv@f2+2,c
  1155  0000C2  50CF               	movf	4047,w,c	;volatile
  1156  0000C4  6E2C               	movwf	(??_echo+1)& (0+255),c
  1157  0000C6  6A2B               	clrf	??_echo& (0+255),c
  1158  0000C8  50CE               	movf	4046,w,c	;volatile
  1159  0000CA  6E2D               	movwf	(??_echo+2)& (0+255),c
  1160  0000CC  6A2E               	clrf	(??_echo+3)& (0+255),c
  1161  0000CE  502B               	movf	??_echo,w,c
  1162  0000D0  102D               	iorwf	??_echo+2,w,c
  1163  0000D2  6E09               	movwf	___awtoft@c,c
  1164  0000D4  502C               	movf	??_echo+1,w,c
  1165  0000D6  102E               	iorwf	??_echo+3,w,c
  1166  0000D8  6E0A               	movwf	___awtoft@c+1,c
  1167  0000DA  EC0D  F003         	call	___awtoft	;wreg free
  1168  0000DE  C009  F00D         	movff	?___awtoft,___ftdiv@f1
  1169  0000E2  C00A  F00E         	movff	?___awtoft+1,___ftdiv@f1+1
  1170  0000E6  C00B  F00F         	movff	?___awtoft+2,___ftdiv@f1+2
  1171  0000EA  ECC5  F001         	call	___ftdiv	;wreg free
  1172  0000EE  C00D  F01C         	movff	?___ftdiv,___fttol@f1
  1173  0000F2  C00E  F01D         	movff	?___ftdiv+1,___fttol@f1+1
  1174  0000F6  C00F  F01E         	movff	?___ftdiv+2,___fttol@f1+2
  1175  0000FA  EC4B  F001         	call	___fttol	;wreg free
  1176  0000FE  C01C  F04D         	movff	?___fttol,_dist2
  1177  000102  C01D  F04E         	movff	?___fttol+1,_dist2+1
  1178                           
  1179                           ;CAN_TX_back.c: 128: token=0;
  1180  000106  0E00               	movlw	0
  1181  000108  6E4C               	movwf	_token+1,c
  1182  00010A  0E00               	movlw	0
  1183  00010C                     L1:
  1184  00010C  6E4B               	movwf	_token,c
  1185                           
  1186                           ;CAN_TX_back.c: 132: }
  1187                           
  1188                           ;CAN_TX_back.c: 131: default:break;
  1189                           
  1190                           ;CAN_TX_back.c: 129: }
  1191                           ;CAN_TX_back.c: 130: break;
  1192  00010E  D00F               	goto	i2l168
  1193  000110                     i2l1381:
  1194  000110  C04B  F02B         	movff	_token,??_echo
  1195  000114  C04C  F02C         	movff	_token+1,??_echo+1
  1196                           
  1197                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1198                           ; Switch size 1, requested type "space"
  1199                           ; Number of cases is 1, Range of values is 0 to 0
  1200                           ; switch strategies available:
  1201                           ; Name         Instructions Cycles
  1202                           ; simple_byte            4     3 (average)
  1203                           ;	Chosen strategy is simple_byte
  1204  000118  502C               	movf	??_echo+1,w,c
  1205  00011A  0A00               	xorlw	0	; case 0
  1206  00011C  A4D8               	btfss	status,2,c
  1207  00011E  D007               	goto	i2l168
  1208                           
  1209                           ; Switch size 1, requested type "space"
  1210                           ; Number of cases is 2, Range of values is 0 to 1
  1211                           ; switch strategies available:
  1212                           ; Name         Instructions Cycles
  1213                           ; simple_byte            7     4 (average)
  1214                           ;	Chosen strategy is simple_byte
  1215  000120  502B               	movf	??_echo,w,c
  1216  000122  0A00               	xorlw	0	; case 0
  1217  000124  B4D8               	btfsc	status,2,c
  1218  000126  D791               	goto	i2l170
  1219  000128  0A01               	xorlw	1	; case 1
  1220  00012A  B4D8               	btfsc	status,2,c
  1221  00012C  D7BF               	goto	i2l174
  1222  00012E                     i2l168:
  1223                           
  1224                           ;CAN_TX_back.c: 133: }
  1225                           ;CAN_TX_back.c: 135: INTCONbits.RBIF = 0;
  1226  00012E  90F2               	bcf	intcon,0,c	;volatile
  1227                           
  1228                           ;CAN_TX_back.c: 136: INTCONbits.RBIE = 1;
  1229  000130  86F2               	bsf	intcon,3,c	;volatile
  1230  000132  C03C  FFF5         	movff	??_echo+17,tablat
  1231  000136  C03B  FFF8         	movff	??_echo+16,tblptru
  1232  00013A  C03A  FFF7         	movff	??_echo+15,tblptrh
  1233  00013E  C039  FFF6         	movff	??_echo+14,tblptrl
  1234  000142  C038  FFF4         	movff	??_echo+13,prodh
  1235  000146  C037  FFF3         	movff	??_echo+12,prodl
  1236  00014A  C036  FFDA         	movff	??_echo+11,fsr2h
  1237  00014E  C035  FFD9         	movff	??_echo+10,fsr2l
  1238  000152  C034  FFE2         	movff	??_echo+9,fsr1h
  1239  000156  C033  FFE1         	movff	??_echo+8,fsr1l
  1240  00015A  C032  FFEA         	movff	??_echo+7,fsr0h
  1241  00015E  C031  FFE9         	movff	??_echo+6,fsr0l
  1242  000162  C030  FFFB         	movff	??_echo+5,pclatu
  1243  000166  C02F  FFFA         	movff	??_echo+4,pclath
  1244  00016A  9256               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  1245  00016C  0011               	retfie		f
  1246  00016E                     __end_of_echo:
  1247                           	opt stack 0
  1248                           pclatu	equ	0xFFB
  1249                           pclath	equ	0xFFA
  1250                           tblptru	equ	0xFF8
  1251                           tblptrh	equ	0xFF7
  1252                           tblptrl	equ	0xFF6
  1253                           tablat	equ	0xFF5
  1254                           prodh	equ	0xFF4
  1255                           prodl	equ	0xFF3
  1256                           intcon	equ	0xFF2
  1257                           intcon2	equ	0xFF1
  1258                           intcon3	equ	0xFF0
  1259                           postinc0	equ	0xFEE
  1260                           fsr0h	equ	0xFEA
  1261                           fsr0l	equ	0xFE9
  1262                           wreg	equ	0xFE8
  1263                           fsr1h	equ	0xFE2
  1264                           fsr1l	equ	0xFE1
  1265                           fsr2h	equ	0xFDA
  1266                           fsr2l	equ	0xFD9
  1267                           status	equ	0xFD8
  1268                           
  1269 ;; *************** function ___fttol *****************
  1270 ;; Defined at:
  1271 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\fttol.c"
  1272 ;; Parameters:    Size  Location     Type
  1273 ;;  f1              3   27[COMRAM] float 
  1274 ;; Auto vars:     Size  Location     Type
  1275 ;;  lval            4   37[COMRAM] unsigned long 
  1276 ;;  exp1            1   41[COMRAM] unsigned char 
  1277 ;;  sign1           1   36[COMRAM] unsigned char 
  1278 ;; Return value:  Size  Location     Type
  1279 ;;                  4   27[COMRAM] long 
  1280 ;; Registers used:
  1281 ;;		wreg, status,2, status,0
  1282 ;; Tracked objects:
  1283 ;;		On entry : 0/0
  1284 ;;		On exit  : 0/0
  1285 ;;		Unchanged: 0/0
  1286 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1287 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1288 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1289 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1290 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1291 ;;Total ram usage:       15 bytes
  1292 ;; Hardware stack levels used:    1
  1293 ;; This function calls:
  1294 ;;		Nothing
  1295 ;; This function is called by:
  1296 ;;		_echo
  1297 ;; This function uses a non-reentrant model
  1298 ;;
  1299                           
  1300                           	psect	text5
  1301  000296                     __ptext5:
  1302                           	opt stack 0
  1303  000296                     ___fttol:
  1304                           	opt stack 28
  1305                           
  1306                           ;incstack = 0
  1307  000296  C01E  F020         	movff	___fttol@f1+2,??___fttol
  1308  00029A  6A21               	clrf	(??___fttol+1)& (0+255),c
  1309  00029C  6A22               	clrf	(??___fttol+2)& (0+255),c
  1310  00029E  341D               	rlcf	___fttol@f1+1,w,c
  1311  0002A0  3620               	rlcf	??___fttol& (0+255),f,c
  1312  0002A2  E301               	bnc	u73_41
  1313  0002A4  8021               	bsf	(??___fttol+1)& (0+255),0,c
  1314  0002A6                     u73_41:
  1315  0002A6  5020               	movf	??___fttol,w,c
  1316  0002A8  6E2A               	movwf	___fttol@exp1,c
  1317  0002AA  502A               	movf	___fttol@exp1,w,c
  1318  0002AC  A4D8               	btfss	status,2,c
  1319  0002AE  D009               	goto	i2l1319
  1320  0002B0  0E00               	movlw	0
  1321  0002B2  6E1C               	movwf	?___fttol,c
  1322  0002B4  0E00               	movlw	0
  1323  0002B6  6E1D               	movwf	?___fttol+1,c
  1324  0002B8  0E00               	movlw	0
  1325  0002BA  6E1E               	movwf	?___fttol+2,c
  1326  0002BC  0E00               	movlw	0
  1327  0002BE  6E1F               	movwf	?___fttol+3,c
  1328  0002C0  0012               	return	
  1329  0002C2                     i2l1319:
  1330  0002C2  0E17               	movlw	23
  1331  0002C4  6E20               	movwf	??___fttol& (0+255),c
  1332  0002C6  C01C  F021         	movff	___fttol@f1,??___fttol+1
  1333  0002CA  C01D  F022         	movff	___fttol@f1+1,??___fttol+2
  1334  0002CE  C01E  F023         	movff	___fttol@f1+2,??___fttol+3
  1335  0002D2  2820               	incf	??___fttol,w,c
  1336  0002D4  6E24               	movwf	(??___fttol+4)& (0+255),c
  1337  0002D6  D004               	goto	i2u75_40
  1338  0002D8                     i2u75_45:
  1339  0002D8  90D8               	bcf	status,0,c
  1340  0002DA  3223               	rrcf	??___fttol+3,f,c
  1341  0002DC  3222               	rrcf	??___fttol+2,f,c
  1342  0002DE  3221               	rrcf	??___fttol+1,f,c
  1343  0002E0                     i2u75_40:
  1344  0002E0  2E24               	decfsz	(??___fttol+4)& (0+255),f,c
  1345  0002E2  D7FA               	goto	i2u75_45
  1346  0002E4  5021               	movf	??___fttol+1,w,c
  1347  0002E6  6E25               	movwf	___fttol@sign1,c
  1348  0002E8  8E1D               	bsf	___fttol@f1+1,7,c
  1349  0002EA  0EFF               	movlw	255
  1350  0002EC  161C               	andwf	___fttol@f1,f,c
  1351  0002EE  0EFF               	movlw	255
  1352  0002F0  161D               	andwf	___fttol@f1+1,f,c
  1353  0002F2  0E00               	movlw	0
  1354  0002F4  161E               	andwf	___fttol@f1+2,f,c
  1355  0002F6  501C               	movf	___fttol@f1,w,c
  1356  0002F8  6E26               	movwf	___fttol@lval,c
  1357  0002FA  501D               	movf	___fttol@f1+1,w,c
  1358  0002FC  6E27               	movwf	___fttol@lval+1,c
  1359  0002FE  501E               	movf	___fttol@f1+2,w,c
  1360  000300  6E28               	movwf	___fttol@lval+2,c
  1361  000302  6A29               	clrf	___fttol@lval+3,c
  1362  000304  0E8E               	movlw	142
  1363  000306  5E2A               	subwf	___fttol@exp1,f,c
  1364  000308  AE2A               	btfss	___fttol@exp1,7,c
  1365  00030A  D016               	goto	i2l1341
  1366  00030C  502A               	movf	___fttol@exp1,w,c
  1367  00030E  0A80               	xorlw	128
  1368  000310  0F8F               	addlw	143
  1369  000312  B0D8               	btfsc	status,0,c
  1370  000314  D009               	goto	i2l1337
  1371  000316  0E00               	movlw	0
  1372  000318  6E1C               	movwf	?___fttol,c
  1373  00031A  0E00               	movlw	0
  1374  00031C  6E1D               	movwf	?___fttol+1,c
  1375  00031E  0E00               	movlw	0
  1376  000320  6E1E               	movwf	?___fttol+2,c
  1377  000322  0E00               	movlw	0
  1378  000324  6E1F               	movwf	?___fttol+3,c
  1379  000326  0012               	return	
  1380  000328                     i2l1337:
  1381  000328  90D8               	bcf	status,0,c
  1382  00032A  3229               	rrcf	___fttol@lval+3,f,c
  1383  00032C  3228               	rrcf	___fttol@lval+2,f,c
  1384  00032E  3227               	rrcf	___fttol@lval+1,f,c
  1385  000330  3226               	rrcf	___fttol@lval,f,c
  1386  000332  3E2A               	incfsz	___fttol@exp1,f,c
  1387  000334  D7F9               	goto	i2l1337
  1388  000336  D015               	goto	i2l1351
  1389  000338                     i2l1341:
  1390  000338  0E17               	movlw	23
  1391  00033A  642A               	cpfsgt	___fttol@exp1,c
  1392  00033C  D00F               	goto	i2l1349
  1393  00033E  0E00               	movlw	0
  1394  000340  6E1C               	movwf	?___fttol,c
  1395  000342  0E00               	movlw	0
  1396  000344  6E1D               	movwf	?___fttol+1,c
  1397  000346  0E00               	movlw	0
  1398  000348  6E1E               	movwf	?___fttol+2,c
  1399  00034A  0E00               	movlw	0
  1400  00034C  6E1F               	movwf	?___fttol+3,c
  1401  00034E  0012               	return	
  1402  000350                     i2l1347:
  1403  000350  90D8               	bcf	status,0,c
  1404  000352  3626               	rlcf	___fttol@lval,f,c
  1405  000354  3627               	rlcf	___fttol@lval+1,f,c
  1406  000356  3628               	rlcf	___fttol@lval+2,f,c
  1407  000358  3629               	rlcf	___fttol@lval+3,f,c
  1408  00035A  062A               	decf	___fttol@exp1,f,c
  1409  00035C                     i2l1349:
  1410  00035C  502A               	movf	___fttol@exp1,w,c
  1411  00035E  A4D8               	btfss	status,2,c
  1412  000360  D7F7               	goto	i2l1347
  1413  000362                     i2l1351:
  1414  000362  5025               	movf	___fttol@sign1,w,c
  1415  000364  B4D8               	btfsc	status,2,c
  1416  000366  D008               	goto	i2l1355
  1417  000368  1E29               	comf	___fttol@lval+3,f,c
  1418  00036A  1E28               	comf	___fttol@lval+2,f,c
  1419  00036C  1E27               	comf	___fttol@lval+1,f,c
  1420  00036E  6C26               	negf	___fttol@lval,c
  1421  000370  0E00               	movlw	0
  1422  000372  2227               	addwfc	___fttol@lval+1,f,c
  1423  000374  2228               	addwfc	___fttol@lval+2,f,c
  1424  000376  2229               	addwfc	___fttol@lval+3,f,c
  1425  000378                     i2l1355:
  1426  000378  C026  F01C         	movff	___fttol@lval,?___fttol
  1427  00037C  C027  F01D         	movff	___fttol@lval+1,?___fttol+1
  1428  000380  C028  F01E         	movff	___fttol@lval+2,?___fttol+2
  1429  000384  C029  F01F         	movff	___fttol@lval+3,?___fttol+3
  1430  000388  0012               	return	
  1431  00038A                     __end_of___fttol:
  1432                           	opt stack 0
  1433                           pclatu	equ	0xFFB
  1434                           pclath	equ	0xFFA
  1435                           tblptru	equ	0xFF8
  1436                           tblptrh	equ	0xFF7
  1437                           tblptrl	equ	0xFF6
  1438                           tablat	equ	0xFF5
  1439                           prodh	equ	0xFF4
  1440                           prodl	equ	0xFF3
  1441                           intcon	equ	0xFF2
  1442                           intcon2	equ	0xFF1
  1443                           intcon3	equ	0xFF0
  1444                           postinc0	equ	0xFEE
  1445                           fsr0h	equ	0xFEA
  1446                           fsr0l	equ	0xFE9
  1447                           wreg	equ	0xFE8
  1448                           fsr1h	equ	0xFE2
  1449                           fsr1l	equ	0xFE1
  1450                           fsr2h	equ	0xFDA
  1451                           fsr2l	equ	0xFD9
  1452                           status	equ	0xFD8
  1453                           
  1454 ;; *************** function ___ftdiv *****************
  1455 ;; Defined at:
  1456 ;;		line 54 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\ftdiv.c"
  1457 ;; Parameters:    Size  Location     Type
  1458 ;;  f1              3   12[COMRAM] float 
  1459 ;;  f2              3   15[COMRAM] float 
  1460 ;; Auto vars:     Size  Location     Type
  1461 ;;  f3              3   22[COMRAM] float 
  1462 ;;  sign            1   26[COMRAM] unsigned char 
  1463 ;;  exp             1   25[COMRAM] unsigned char 
  1464 ;;  cntr            1   21[COMRAM] unsigned char 
  1465 ;; Return value:  Size  Location     Type
  1466 ;;                  3   12[COMRAM] float 
  1467 ;; Registers used:
  1468 ;;		wreg, status,2, status,0, cstack
  1469 ;; Tracked objects:
  1470 ;;		On entry : 0/0
  1471 ;;		On exit  : 0/0
  1472 ;;		Unchanged: 0/0
  1473 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1474 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1475 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1476 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1477 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1478 ;;Total ram usage:       15 bytes
  1479 ;; Hardware stack levels used:    1
  1480 ;; Hardware stack levels required when called:    1
  1481 ;; This function calls:
  1482 ;;		___ftpack
  1483 ;; This function is called by:
  1484 ;;		_echo
  1485 ;; This function uses a non-reentrant model
  1486 ;;
  1487                           
  1488                           	psect	text6
  1489  00038A                     __ptext6:
  1490                           	opt stack 0
  1491  00038A                     ___ftdiv:
  1492                           	opt stack 27
  1493                           
  1494                           ;incstack = 0
  1495  00038A  C00F  F013         	movff	___ftdiv@f1+2,??___ftdiv
  1496  00038E  6A14               	clrf	(??___ftdiv+1)& (0+255),c
  1497  000390  6A15               	clrf	(??___ftdiv+2)& (0+255),c
  1498  000392  340E               	rlcf	___ftdiv@f1+1,w,c
  1499  000394  3613               	rlcf	??___ftdiv& (0+255),f,c
  1500  000396  E301               	bnc	u67_41
  1501  000398  8014               	bsf	(??___ftdiv+1)& (0+255),0,c
  1502  00039A                     u67_41:
  1503  00039A  5013               	movf	??___ftdiv,w,c
  1504  00039C  6E1A               	movwf	___ftdiv@exp,c
  1505  00039E  501A               	movf	___ftdiv@exp,w,c
  1506  0003A0  A4D8               	btfss	status,2,c
  1507  0003A2  D007               	goto	i2l1261
  1508  0003A4  0E00               	movlw	0
  1509  0003A6  6E0D               	movwf	?___ftdiv,c
  1510  0003A8  0E00               	movlw	0
  1511  0003AA  6E0E               	movwf	?___ftdiv+1,c
  1512  0003AC  0E00               	movlw	0
  1513  0003AE  6E0F               	movwf	?___ftdiv+2,c
  1514  0003B0  0012               	return	
  1515  0003B2                     i2l1261:
  1516  0003B2  C012  F013         	movff	___ftdiv@f2+2,??___ftdiv
  1517  0003B6  6A14               	clrf	(??___ftdiv+1)& (0+255),c
  1518  0003B8  6A15               	clrf	(??___ftdiv+2)& (0+255),c
  1519  0003BA  3411               	rlcf	___ftdiv@f2+1,w,c
  1520  0003BC  3613               	rlcf	??___ftdiv& (0+255),f,c
  1521  0003BE  E301               	bnc	u69_41
  1522  0003C0  8014               	bsf	(??___ftdiv+1)& (0+255),0,c
  1523  0003C2                     u69_41:
  1524  0003C2  5013               	movf	??___ftdiv,w,c
  1525  0003C4  6E1B               	movwf	___ftdiv@sign,c
  1526  0003C6  501B               	movf	___ftdiv@sign,w,c
  1527  0003C8  A4D8               	btfss	status,2,c
  1528  0003CA  D007               	goto	i2l1267
  1529  0003CC  0E00               	movlw	0
  1530  0003CE  6E0D               	movwf	?___ftdiv,c
  1531  0003D0  0E00               	movlw	0
  1532  0003D2  6E0E               	movwf	?___ftdiv+1,c
  1533  0003D4  0E00               	movlw	0
  1534  0003D6  6E0F               	movwf	?___ftdiv+2,c
  1535  0003D8  0012               	return	
  1536  0003DA                     i2l1267:
  1537  0003DA  0E00               	movlw	0
  1538  0003DC  6E17               	movwf	___ftdiv@f3,c
  1539  0003DE  0E00               	movlw	0
  1540  0003E0  6E18               	movwf	___ftdiv@f3+1,c
  1541  0003E2  0E00               	movlw	0
  1542  0003E4  6E19               	movwf	___ftdiv@f3+2,c
  1543  0003E6  501B               	movf	___ftdiv@sign,w,c
  1544  0003E8  0F89               	addlw	137
  1545  0003EA  5E1A               	subwf	___ftdiv@exp,f,c
  1546  0003EC  C00F  F01B         	movff	___ftdiv@f1+2,___ftdiv@sign
  1547  0003F0  5012               	movf	___ftdiv@f2+2,w,c
  1548  0003F2  1A1B               	xorwf	___ftdiv@sign,f,c
  1549  0003F4  0E80               	movlw	128
  1550  0003F6  161B               	andwf	___ftdiv@sign,f,c
  1551  0003F8  8E0E               	bsf	___ftdiv@f1+1,7,c
  1552  0003FA  0EFF               	movlw	255
  1553  0003FC  160D               	andwf	___ftdiv@f1,f,c
  1554  0003FE  0EFF               	movlw	255
  1555  000400  160E               	andwf	___ftdiv@f1+1,f,c
  1556  000402  0E00               	movlw	0
  1557  000404  160F               	andwf	___ftdiv@f1+2,f,c
  1558  000406  8E11               	bsf	___ftdiv@f2+1,7,c
  1559  000408  0EFF               	movlw	255
  1560  00040A  1610               	andwf	___ftdiv@f2,f,c
  1561  00040C  0EFF               	movlw	255
  1562  00040E  1611               	andwf	___ftdiv@f2+1,f,c
  1563  000410  0E00               	movlw	0
  1564  000412  1612               	andwf	___ftdiv@f2+2,f,c
  1565  000414  0E18               	movlw	24
  1566  000416  6E16               	movwf	___ftdiv@cntr,c
  1567  000418                     i2l1287:
  1568  000418  90D8               	bcf	status,0,c
  1569  00041A  3617               	rlcf	___ftdiv@f3,f,c
  1570  00041C  3618               	rlcf	___ftdiv@f3+1,f,c
  1571  00041E  3619               	rlcf	___ftdiv@f3+2,f,c
  1572  000420  5010               	movf	___ftdiv@f2,w,c
  1573  000422  5C0D               	subwf	___ftdiv@f1,w,c
  1574  000424  5011               	movf	___ftdiv@f2+1,w,c
  1575  000426  580E               	subwfb	___ftdiv@f1+1,w,c
  1576  000428  5012               	movf	___ftdiv@f2+2,w,c
  1577  00042A  580F               	subwfb	___ftdiv@f1+2,w,c
  1578  00042C  A0D8               	btfss	status,0,c
  1579  00042E  D007               	goto	i2l486
  1580  000430  5010               	movf	___ftdiv@f2,w,c
  1581  000432  5E0D               	subwf	___ftdiv@f1,f,c
  1582  000434  5011               	movf	___ftdiv@f2+1,w,c
  1583  000436  5A0E               	subwfb	___ftdiv@f1+1,f,c
  1584  000438  5012               	movf	___ftdiv@f2+2,w,c
  1585  00043A  5A0F               	subwfb	___ftdiv@f1+2,f,c
  1586  00043C  8017               	bsf	___ftdiv@f3,0,c
  1587  00043E                     i2l486:
  1588  00043E  90D8               	bcf	status,0,c
  1589  000440  360D               	rlcf	___ftdiv@f1,f,c
  1590  000442  360E               	rlcf	___ftdiv@f1+1,f,c
  1591  000444  360F               	rlcf	___ftdiv@f1+2,f,c
  1592  000446  2E16               	decfsz	___ftdiv@cntr,f,c
  1593  000448  D7E7               	goto	i2l1287
  1594  00044A  C017  F001         	movff	___ftdiv@f3,___ftpack@arg
  1595  00044E  C018  F002         	movff	___ftdiv@f3+1,___ftpack@arg+1
  1596  000452  C019  F003         	movff	___ftdiv@f3+2,___ftpack@arg+2
  1597  000456  C01A  F004         	movff	___ftdiv@exp,___ftpack@exp
  1598  00045A  C01B  F005         	movff	___ftdiv@sign,___ftpack@sign
  1599  00045E  EC38  F002         	call	___ftpack	;wreg free
  1600  000462  C001  F00D         	movff	?___ftpack,?___ftdiv
  1601  000466  C002  F00E         	movff	?___ftpack+1,?___ftdiv+1
  1602  00046A  C003  F00F         	movff	?___ftpack+2,?___ftdiv+2
  1603  00046E  0012               	return	
  1604  000470                     __end_of___ftdiv:
  1605                           	opt stack 0
  1606                           pclatu	equ	0xFFB
  1607                           pclath	equ	0xFFA
  1608                           tblptru	equ	0xFF8
  1609                           tblptrh	equ	0xFF7
  1610                           tblptrl	equ	0xFF6
  1611                           tablat	equ	0xFF5
  1612                           prodh	equ	0xFF4
  1613                           prodl	equ	0xFF3
  1614                           intcon	equ	0xFF2
  1615                           intcon2	equ	0xFF1
  1616                           intcon3	equ	0xFF0
  1617                           postinc0	equ	0xFEE
  1618                           fsr0h	equ	0xFEA
  1619                           fsr0l	equ	0xFE9
  1620                           wreg	equ	0xFE8
  1621                           fsr1h	equ	0xFE2
  1622                           fsr1l	equ	0xFE1
  1623                           fsr2h	equ	0xFDA
  1624                           fsr2l	equ	0xFD9
  1625                           status	equ	0xFD8
  1626                           
  1627 ;; *************** function ___awtoft *****************
  1628 ;; Defined at:
  1629 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\awtoft.c"
  1630 ;; Parameters:    Size  Location     Type
  1631 ;;  c               2    8[COMRAM] int 
  1632 ;; Auto vars:     Size  Location     Type
  1633 ;;  sign            1   11[COMRAM] unsigned char 
  1634 ;; Return value:  Size  Location     Type
  1635 ;;                  3    8[COMRAM] float 
  1636 ;; Registers used:
  1637 ;;		wreg, status,2, status,0, cstack
  1638 ;; Tracked objects:
  1639 ;;		On entry : 0/0
  1640 ;;		On exit  : 0/0
  1641 ;;		Unchanged: 0/0
  1642 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1643 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1644 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1645 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1646 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1647 ;;Total ram usage:        4 bytes
  1648 ;; Hardware stack levels used:    1
  1649 ;; Hardware stack levels required when called:    1
  1650 ;; This function calls:
  1651 ;;		___ftpack
  1652 ;; This function is called by:
  1653 ;;		_echo
  1654 ;; This function uses a non-reentrant model
  1655 ;;
  1656                           
  1657                           	psect	text7
  1658  00061A                     __ptext7:
  1659                           	opt stack 0
  1660  00061A                     ___awtoft:
  1661                           	opt stack 27
  1662                           
  1663                           ;incstack = 0
  1664  00061A  0E00               	movlw	0
  1665  00061C  6E0C               	movwf	___awtoft@sign,c
  1666  00061E  AE0A               	btfss	___awtoft@c+1,7,c
  1667  000620  D006               	goto	i2l1309
  1668  000622  6C09               	negf	___awtoft@c,c
  1669  000624  1E0A               	comf	___awtoft@c+1,f,c
  1670  000626  B0D8               	btfsc	status,0,c
  1671  000628  2A0A               	incf	___awtoft@c+1,f,c
  1672  00062A  0E01               	movlw	1
  1673  00062C  6E0C               	movwf	___awtoft@sign,c
  1674  00062E                     i2l1309:
  1675  00062E  C009  F001         	movff	___awtoft@c,___ftpack@arg
  1676  000632  C00A  F002         	movff	___awtoft@c+1,___ftpack@arg+1
  1677  000636  6A03               	clrf	___ftpack@arg+2,c
  1678  000638  0E8E               	movlw	142
  1679  00063A  6E04               	movwf	___ftpack@exp,c
  1680  00063C  C00C  F005         	movff	___awtoft@sign,___ftpack@sign
  1681  000640  EC38  F002         	call	___ftpack	;wreg free
  1682  000644  C001  F009         	movff	?___ftpack,?___awtoft
  1683  000648  C002  F00A         	movff	?___ftpack+1,?___awtoft+1
  1684  00064C  C003  F00B         	movff	?___ftpack+2,?___awtoft+2
  1685  000650  0012               	return	
  1686  000652                     __end_of___awtoft:
  1687                           	opt stack 0
  1688                           pclatu	equ	0xFFB
  1689                           pclath	equ	0xFFA
  1690                           tblptru	equ	0xFF8
  1691                           tblptrh	equ	0xFF7
  1692                           tblptrl	equ	0xFF6
  1693                           tablat	equ	0xFF5
  1694                           prodh	equ	0xFF4
  1695                           prodl	equ	0xFF3
  1696                           intcon	equ	0xFF2
  1697                           intcon2	equ	0xFF1
  1698                           intcon3	equ	0xFF0
  1699                           postinc0	equ	0xFEE
  1700                           fsr0h	equ	0xFEA
  1701                           fsr0l	equ	0xFE9
  1702                           wreg	equ	0xFE8
  1703                           fsr1h	equ	0xFE2
  1704                           fsr1l	equ	0xFE1
  1705                           fsr2h	equ	0xFDA
  1706                           fsr2l	equ	0xFD9
  1707                           status	equ	0xFD8
  1708                           
  1709 ;; *************** function ___ftpack *****************
  1710 ;; Defined at:
  1711 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\float.c"
  1712 ;; Parameters:    Size  Location     Type
  1713 ;;  arg             3    0[COMRAM] unsigned um
  1714 ;;  exp             1    3[COMRAM] unsigned char 
  1715 ;;  sign            1    4[COMRAM] unsigned char 
  1716 ;; Auto vars:     Size  Location     Type
  1717 ;;		None
  1718 ;; Return value:  Size  Location     Type
  1719 ;;                  3    0[COMRAM] float 
  1720 ;; Registers used:
  1721 ;;		wreg, status,2, status,0
  1722 ;; Tracked objects:
  1723 ;;		On entry : 0/0
  1724 ;;		On exit  : 0/0
  1725 ;;		Unchanged: 0/0
  1726 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1727 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1728 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1729 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1730 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1731 ;;Total ram usage:        8 bytes
  1732 ;; Hardware stack levels used:    1
  1733 ;; This function calls:
  1734 ;;		Nothing
  1735 ;; This function is called by:
  1736 ;;		___awtoft
  1737 ;;		___ftdiv
  1738 ;; This function uses a non-reentrant model
  1739 ;;
  1740                           
  1741                           	psect	text8
  1742  000470                     __ptext8:
  1743                           	opt stack 0
  1744  000470                     ___ftpack:
  1745                           	opt stack 27
  1746                           
  1747                           ;incstack = 0
  1748  000470  5004               	movf	___ftpack@exp,w,c
  1749  000472  B4D8               	btfsc	status,2,c
  1750  000474  D005               	goto	i2l1171
  1751  000476  5001               	movf	___ftpack@arg,w,c
  1752  000478  1002               	iorwf	___ftpack@arg+1,w,c
  1753  00047A  1003               	iorwf	___ftpack@arg+2,w,c
  1754  00047C  A4D8               	btfss	status,2,c
  1755  00047E  D00C               	goto	i2l1177
  1756  000480                     i2l1171:
  1757  000480  0E00               	movlw	0
  1758  000482  6E01               	movwf	?___ftpack,c
  1759  000484  0E00               	movlw	0
  1760  000486  6E02               	movwf	?___ftpack+1,c
  1761  000488  0E00               	movlw	0
  1762  00048A  6E03               	movwf	?___ftpack+2,c
  1763  00048C  0012               	return	
  1764  00048E                     i2l1175:
  1765  00048E  2A04               	incf	___ftpack@exp,f,c
  1766  000490  90D8               	bcf	status,0,c
  1767  000492  3203               	rrcf	___ftpack@arg+2,f,c
  1768  000494  3202               	rrcf	___ftpack@arg+1,f,c
  1769  000496  3201               	rrcf	___ftpack@arg,f,c
  1770  000498                     i2l1177:
  1771  000498  0E00               	movlw	0
  1772  00049A  1401               	andwf	___ftpack@arg,w,c
  1773  00049C  6E06               	movwf	??___ftpack& (0+255),c
  1774  00049E  0E00               	movlw	0
  1775  0004A0  1402               	andwf	___ftpack@arg+1,w,c
  1776  0004A2  6E07               	movwf	(??___ftpack+1)& (0+255),c
  1777  0004A4  0EFE               	movlw	254
  1778  0004A6  1403               	andwf	___ftpack@arg+2,w,c
  1779  0004A8  6E08               	movwf	(??___ftpack+2)& (0+255),c
  1780  0004AA  5006               	movf	??___ftpack,w,c
  1781  0004AC  1007               	iorwf	??___ftpack+1,w,c
  1782  0004AE  1008               	iorwf	??___ftpack+2,w,c
  1783  0004B0  B4D8               	btfsc	status,2,c
  1784  0004B2  D00C               	goto	i2l1183
  1785  0004B4  D7EC               	goto	i2l1175
  1786  0004B6                     i2l1179:
  1787  0004B6  2A04               	incf	___ftpack@exp,f,c
  1788  0004B8  0E01               	movlw	1
  1789  0004BA  2601               	addwf	___ftpack@arg,f,c
  1790  0004BC  0E00               	movlw	0
  1791  0004BE  2202               	addwfc	___ftpack@arg+1,f,c
  1792  0004C0  0E00               	movlw	0
  1793  0004C2  2203               	addwfc	___ftpack@arg+2,f,c
  1794  0004C4  90D8               	bcf	status,0,c
  1795  0004C6  3203               	rrcf	___ftpack@arg+2,f,c
  1796  0004C8  3202               	rrcf	___ftpack@arg+1,f,c
  1797  0004CA  3201               	rrcf	___ftpack@arg,f,c
  1798  0004CC                     i2l1183:
  1799  0004CC  0E00               	movlw	0
  1800  0004CE  1401               	andwf	___ftpack@arg,w,c
  1801  0004D0  6E06               	movwf	??___ftpack& (0+255),c
  1802  0004D2  0E00               	movlw	0
  1803  0004D4  1402               	andwf	___ftpack@arg+1,w,c
  1804  0004D6  6E07               	movwf	(??___ftpack+1)& (0+255),c
  1805  0004D8  0EFF               	movlw	255
  1806  0004DA  1403               	andwf	___ftpack@arg+2,w,c
  1807  0004DC  6E08               	movwf	(??___ftpack+2)& (0+255),c
  1808  0004DE  5006               	movf	??___ftpack,w,c
  1809  0004E0  1007               	iorwf	??___ftpack+1,w,c
  1810  0004E2  1008               	iorwf	??___ftpack+2,w,c
  1811  0004E4  B4D8               	btfsc	status,2,c
  1812  0004E6  D006               	goto	i2l1187
  1813  0004E8  D7E6               	goto	i2l1179
  1814  0004EA                     i2l1185:
  1815  0004EA  0604               	decf	___ftpack@exp,f,c
  1816  0004EC  90D8               	bcf	status,0,c
  1817  0004EE  3601               	rlcf	___ftpack@arg,f,c
  1818  0004F0  3602               	rlcf	___ftpack@arg+1,f,c
  1819  0004F2  3603               	rlcf	___ftpack@arg+2,f,c
  1820  0004F4                     i2l1187:
  1821  0004F4  BE02               	btfsc	___ftpack@arg+1,7,c
  1822  0004F6  D003               	goto	i2l428
  1823  0004F8  0E02               	movlw	2
  1824  0004FA  6004               	cpfslt	___ftpack@exp,c
  1825  0004FC  D7F6               	goto	i2l1185
  1826  0004FE                     i2l428:
  1827  0004FE  A004               	btfss	___ftpack@exp,0,c
  1828  000500  9E02               	bcf	___ftpack@arg+1,7,c
  1829  000502  90D8               	bcf	status,0,c
  1830  000504  3204               	rrcf	___ftpack@exp,f,c
  1831  000506  5004               	movf	___ftpack@exp,w,c
  1832  000508  1203               	iorwf	___ftpack@arg+2,f,c
  1833  00050A  5005               	movf	___ftpack@sign,w,c
  1834  00050C  A4D8               	btfss	status,2,c
  1835  00050E  8E03               	bsf	___ftpack@arg+2,7,c
  1836  000510  C001  F001         	movff	___ftpack@arg,?___ftpack
  1837  000514  C002  F002         	movff	___ftpack@arg+1,?___ftpack+1
  1838  000518  C003  F003         	movff	___ftpack@arg+2,?___ftpack+2
  1839  00051C  0012               	return	
  1840  00051E                     __end_of___ftpack:
  1841                           	opt stack 0
  1842  0000                     pclatu	equ	0xFFB
  1843                           pclath	equ	0xFFA
  1844                           tblptru	equ	0xFF8
  1845                           tblptrh	equ	0xFF7
  1846                           tblptrl	equ	0xFF6
  1847                           tablat	equ	0xFF5
  1848                           prodh	equ	0xFF4
  1849                           prodl	equ	0xFF3
  1850                           intcon	equ	0xFF2
  1851                           intcon2	equ	0xFF1
  1852                           intcon3	equ	0xFF0
  1853                           postinc0	equ	0xFEE
  1854                           fsr0h	equ	0xFEA
  1855                           fsr0l	equ	0xFE9
  1856                           wreg	equ	0xFE8
  1857                           fsr1h	equ	0xFE2
  1858                           fsr1l	equ	0xFE1
  1859                           fsr2h	equ	0xFDA
  1860                           fsr2l	equ	0xFD9
  1861                           status	equ	0xFD8
  1862                           pclatu	equ	0xFFB
  1863                           pclath	equ	0xFFA
  1864                           tblptru	equ	0xFF8
  1865                           tblptrh	equ	0xFF7
  1866                           tblptrl	equ	0xFF6
  1867                           tablat	equ	0xFF5
  1868                           prodh	equ	0xFF4
  1869                           prodl	equ	0xFF3
  1870                           intcon	equ	0xFF2
  1871                           intcon2	equ	0xFF1
  1872                           intcon3	equ	0xFF0
  1873                           postinc0	equ	0xFEE
  1874                           fsr0h	equ	0xFEA
  1875                           fsr0l	equ	0xFE9
  1876                           wreg	equ	0xFE8
  1877                           fsr1h	equ	0xFE2
  1878                           fsr1l	equ	0xFE1
  1879                           fsr2h	equ	0xFDA
  1880                           fsr2l	equ	0xFD9
  1881                           status	equ	0xFD8
  1882                           
  1883                           	psect	rparam
  1884  0000                     pclatu	equ	0xFFB
  1885                           pclath	equ	0xFFA
  1886                           tblptru	equ	0xFF8
  1887                           tblptrh	equ	0xFF7
  1888                           tblptrl	equ	0xFF6
  1889                           tablat	equ	0xFF5
  1890                           prodh	equ	0xFF4
  1891                           prodl	equ	0xFF3
  1892                           intcon	equ	0xFF2
  1893                           intcon2	equ	0xFF1
  1894                           intcon3	equ	0xFF0
  1895                           postinc0	equ	0xFEE
  1896                           fsr0h	equ	0xFEA
  1897                           fsr0l	equ	0xFE9
  1898                           wreg	equ	0xFE8
  1899                           fsr1h	equ	0xFE2
  1900                           fsr1l	equ	0xFE1
  1901                           fsr2h	equ	0xFDA
  1902                           fsr2l	equ	0xFD9
  1903                           status	equ	0xFD8
  1904                           
  1905                           	psect	temp
  1906  000056                     btemp:
  1907                           	opt stack 0
  1908  000056                     	ds	1
  1909  0000                     int$flags	set	btemp
  1910                           pclatu	equ	0xFFB
  1911                           pclath	equ	0xFFA
  1912                           tblptru	equ	0xFF8
  1913                           tblptrh	equ	0xFF7
  1914                           tblptrl	equ	0xFF6
  1915                           tablat	equ	0xFF5
  1916                           prodh	equ	0xFF4
  1917                           prodl	equ	0xFF3
  1918                           intcon	equ	0xFF2
  1919                           intcon2	equ	0xFF1
  1920                           intcon3	equ	0xFF0
  1921                           postinc0	equ	0xFEE
  1922                           fsr0h	equ	0xFEA
  1923                           fsr0l	equ	0xFE9
  1924                           wreg	equ	0xFE8
  1925                           fsr1h	equ	0xFE2
  1926                           fsr1l	equ	0xFE1
  1927                           fsr2h	equ	0xFDA
  1928                           fsr2l	equ	0xFD9
  1929                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         30
    Persistent  5
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     60      85
    BANK0           160      2      12
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14           65      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    None.

Critical Paths under _echo in COMRAM

    _echo->___fttol
    ___fttol->___ftdiv
    ___ftdiv->___awtoft
    ___awtoft->___ftpack

Critical Paths under _main in BANK0

    _main->_CAN_TX_write_0

Critical Paths under _echo in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _echo in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _echo in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _echo in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _echo in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _echo in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _echo in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _echo in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _echo in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _echo in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _echo in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _echo in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _echo in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _echo in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _echo in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0      22
                                              1 BANK0      1     1      0
                  _CAN_TX_initialize
                     _CAN_TX_write_0
                            _initPIC
 ---------------------------------------------------------------------------------
 (1) _initPIC                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _CAN_TX_write_0                                       1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _CAN_TX_initialize                                    0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _echo                                                18    18      0    5221
                                             42 COMRAM    18    18      0
                           ___awtoft
                            ___ftdiv
                            ___fttol
 ---------------------------------------------------------------------------------
 (3) ___fttol                                             15    11      4     380
                                             27 COMRAM    15    11      4
                           ___awtoft (ARG)
                            ___ftdiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftdiv                                             15     9      6    2630
                                             12 COMRAM    15     9      6
                           ___awtoft (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___awtoft                                             4     1      3    2211
                                              8 COMRAM     4     1      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (4) ___ftpack                                             8     3      5    1992
                                              0 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _CAN_TX_initialize
   _CAN_TX_write_0
   _initPIC

 _echo (ROOT)
   ___awtoft
     ___ftpack
   ___ftdiv
     ___awtoft (ARG)
       ___ftpack
     ___ftpack (ARG)
   ___fttol
     ___awtoft (ARG)
       ___ftpack
     ___ftdiv (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftpack (ARG)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             E40      0       0      35        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0       0       8        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      2       C       5        7.5%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     3C      55       1       90.4%
BITBANK14           41      0       0      33        0.0%
BANK14              41      0       0      34        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      61       6        0.0%
DATA                 0      0      61       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.41 build -162212810 
Symbol Table                                                                                   Wed Dec 20 16:57:46 2017

               __CFG_BORV$3 000000                __CFG_CP0$OFF 000000                __CFG_CP1$OFF 000000  
              __CFG_CP2$OFF 000000                __CFG_CP3$OFF 000000                         l137 05CA  
                       l138 05C4                __CFG_CPB$OFF 000000                __CFG_CPD$OFF 000000  
                       u900 020C                         u910 0218                         u860 01A0  
                       u878 01A4                         u987 0182                         u997 01CA  
                       wreg 000FE8                  _TXSTA1bits 000FAC      __end_of_CAN_TX_write_0 05E0  
              ___ftdiv@cntr 0016                ___ftdiv@sign 001B                        l1219 060C  
                      l1413 01D4                        l1423 01EE                        l1441 024C  
                      l1433 0230                        l1451 0280                        l1453 028A  
                      l1445 0264                        l1437 023E                        l1455 028E  
                      l1449 027C                        l1397 0194                        u1007 01E6  
                      u1017 01F6                        _IOCB 000F5A                        _RCIF 007CF5  
                      _PIR1 000F9E                        _RCON 000FD0                        _echo 0008  
                      _buff 0060                        _main 0172                ___ftpack@arg 0001  
              ___ftpack@exp 0004                        fsr0h 000FEA                        fsr1h 000FE2  
                      fsr2h 000FDA                        fsr0l 000FE9                        fsr1l 000FE1  
                      fsr2l 000FD9                        btemp 0056                        prodh 000FF4  
                      prodl 000FF3                        start 016E               __CFG_IESO$OFF 000000  
             __CFG_FOSC$HS1 000000               __CFG_MCLRE$ON 000000                ___param_bank 000000  
              ___fttol@exp1 002A                ___fttol@lval 0026                _BAUDCON1bits 000FA7  
                     ?_echo 0001                       ?_main 0001             __end_of___ftdiv 0470  
                     _T1CON 000FCD             __end_of___fttol 038A                       i2l170 004A  
                     i2l174 00AC                       i2l168 012E                       i2l428 04FE  
                     i2l486 043E                       _TMR1H 000FCF                       _TMR1L 000FCE  
                     _SPBRG 000FAF                       _PORTA 000F80                       _PORTB 000F81  
                     _PORTC 000F82                       _TRISA 000F92                       _TRISB 000F93  
                     u73_41 02A6                       _TRISC 000F94                       u67_41 039A  
                     u69_41 03C2                       _TXREG 000FAD               __CFG_WRT0$OFF 000000  
             __CFG_WRT1$OFF 000000               __CFG_WRT2$OFF 000000               __CFG_WRT3$OFF 000000  
            __CFG_EBTR0$OFF 000000              __CFG_FCMEN$OFF 000000              __CFG_EBTR1$OFF 000000  
            __CFG_EBTR2$OFF 000000              __CFG_EBTR3$OFF 000000               __CFG_WRTB$OFF 000000  
             __CFG_WRTC$OFF 000000               __CFG_WRTD$OFF 000000              __CFG_EBTRB$OFF 000000  
             ___awtoft@sign 000C             __end_of_initPIC 0594                       _dist1 004F  
                     _dist2 004D                       _cnt_B 0049                       _cnt_W 0045  
           ?_CAN_TX_write_0 0001                       _cnt_b 0047               ___ftpack@sign 0005  
                     _token 004B                       pclath 000FFA                       tablat 000FF5  
                     status 000FD8             __initialization 0652                __end_of_echo 016E  
              __end_of_main 0296                      ??_echo 002B                      ??_main 006B  
             ___fttol@sign1 0025               __activetblptr 000002              __CFG_RETEN$OFF 000000  
                    _CANCON 000F6F            __end_of___awtoft 0652            __end_of___ftpack 051E  
           __CFG_BBSIZ$BB2K 000000                      i2l1171 0480                      i2l1309 062E  
                    i2l1261 03B2                      i2l1341 0338                      i2l1183 04CC  
                    i2l1175 048E                      i2l1351 0362                      i2l1319 02C2  
                    i2l1185 04EA                      i2l1177 0498                      i2l1337 0328  
                    i2l1187 04F4                      i2l1179 04B6                      i2l1267 03DA  
                    i2l1355 0378                      i2l1347 0350                      i2l1349 035C  
                    i2l1381 0110                      i2l1287 0418                      _INTCON 000FF2  
                    _RCREG1 000FAE                      _SPBRG1 000FAF                      _TXB0D0 000F26  
                    _TRISC6 007CA6                      _TRISC7 007CA7              __CFG_XINST$OFF 000000  
            __CFG_STVREN$ON 000000                   ??___ftdiv 0013                   ??___fttol 0020  
                    clear_0 0658                      clear_1 0664                   ??_initPIC 006A  
                    tblptrh 000FF7                      tblptrl 000FF6                      tblptru 000FF8  
                __accesstop 0060     __end_of__initialization 066A               ___rparam_used 000001  
                ___ftdiv@f1 000D                  ___ftdiv@f2 0010                  ___ftdiv@f3 0017  
                ___awtoft@c 0009                  ___fttol@f1 001C              __pcstackCOMRAM 0001  
                __pbssBANK0 0060             __CFG_PLLCFG$OFF 000000                  __pnvCOMRAM 0051  
                   _ECANCON 000F72                   ?___awtoft 0009                   ?___ftpack 0001  
                   _BRGCON1 000E43                     _BRGCON2 000E44                     _BRGCON3 000E45  
          ??_CAN_TX_write_0 006A                     _INTCON2 000FF1                     _INTCON3 000FF0  
          __CFG_CANMX$PORTB 000000                     i2u75_40 02E0                     i2u75_45 02D8  
                   _TXB0DLC 000F25             __CFG_PWRTEN$OFF 000000                     __Hparam 0000  
                   __Lparam 0000                     ___ftdiv 038A                     ___fttol 0296  
                   __pcinit 0652                  ??___awtoft 000C                  ??___ftpack 0006  
                   __ramtop 0F00                     __ptext0 0172                     __ptext1 051E  
                   __ptext2 0594                     __ptext3 05E0                     __ptext5 0296  
                   __ptext6 038A                     __ptext7 061A                     __ptext8 0470  
                 _T1CONbits 000FCD                     _initPIC 051E                     _message 0055  
         __CFG_MSSPMSK$MSK7 000000        end_of_initialization 066A               __Lmediumconst 0000  
                   postinc0 000FEE                   _PORTBbits 000F81           __CFG_SOSCSEL$HIGH 000000  
               ___ftdiv@exp 001A         start_initialization 0652                 _CANSTATbits 000F6E  
         __size_of___awtoft 0038           __size_of___ftpack 00AE                 __pbssCOMRAM 003D  
             __pcstackBANK0 006A                   __pintcode 0008                    ?___ftdiv 000D  
                  ?___fttol 001C                   _buff_retr 003D                    ?_initPIC 0001  
         _CAN_TX_initialize 05E0          ?_CAN_TX_initialize 0001                    _LATAbits 000F89  
                  _LATBbits 000F8A         ??_CAN_TX_initialize 006A                    _RCONbits 000FD0  
                  _TXB0SIDH 000F21                    _TXB0SIDL 000F22                   _treshold1 0053  
                 _treshold2 0051   __end_of_CAN_TX_initialize 061A                 _INTCON2bits 000FF1  
   __size_of_CAN_TX_write_0 004C                  _ANCON1bits 000F5C                    __Hrparam 0000  
                  __Lrparam 0000          __CFG_BOREN$SBORDIS 000000                  _CIOCONbits 000F70  
          __size_of___ftdiv 00E6            __size_of___fttol 00F4                    ___awtoft 061A  
                  ___ftpack 0470            __size_of_initPIC 0076               __size_of_echo 0166  
             __size_of_main 0124                _TXB0SIDLbits 000F22                    int$flags 0056  
       __CFG_INTOSCSEL$HIGH 000000          __CFG_WDTEN$SWDTDIS 000000                  _INTCONbits 000FF2  
__size_of_CAN_TX_initialize 003A                    intlevel2 0000                 _TXB0DLCbits 000F25  
               _TXB0CONbits 000F20                  _RCSTA1bits 000FAB          __CFG_WDTPS$1048576 000000  
        CAN_TX_write_0@data 006A              _CAN_TX_write_0 0594         __CFG_BORPWR$ZPBORMV 000000  
